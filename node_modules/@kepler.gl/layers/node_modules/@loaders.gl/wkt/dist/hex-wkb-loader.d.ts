import { BinaryGeometry } from '@loaders.gl/schema';
import type { WKBLoaderOptions } from "./wkb-loader.js";
export type HexWKBLoaderOptions = WKBLoaderOptions;
/**
 * Worker loader for Hex-encoded WKB (Well-Known Binary)
 */
export declare const HexWKBLoader: {
    readonly dataType: BinaryGeometry;
    readonly batchType: never;
    readonly name: "Hexadecimal WKB";
    readonly id: "wkb";
    readonly module: "wkt";
    readonly version: any;
    readonly worker: true;
    readonly category: "geometry";
    readonly extensions: ["wkb"];
    readonly mimeTypes: [];
    readonly options: {
        readonly wkb: {
            readonly shape: "binary-geometry";
        };
    };
    readonly text: true;
    readonly testText: typeof isHexWKB;
    readonly parse: (arrayBuffer: ArrayBuffer) => Promise<BinaryGeometry>;
    readonly parseTextSync: typeof parseHexWKB;
};
declare function parseHexWKB(text: string, options?: HexWKBLoaderOptions): BinaryGeometry;
/**
 * Check if string is a valid Well-known binary (WKB) in HEX format
 * https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry
 *
 * @param str input string
 * @returns true if string is a valid WKB in HEX format
 */
export declare function isHexWKB(string: string | null): boolean;
export {};
//# sourceMappingURL=hex-wkb-loader.d.ts.map