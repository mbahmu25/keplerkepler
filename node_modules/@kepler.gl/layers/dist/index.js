"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  KeplerGlLayers: true,
  LayerClasses: true,
  EditorLayerUtils: true,
  Layer: true,
  OVERLAY_TYPE_CONST: true,
  LAYER_ID_LENGTH: true,
  colorMaker: true,
  layerColors: true,
  pointToPolygonGeo: true,
  defaultElevation: true,
  defaultLineWidth: true,
  defaultRadius: true,
  COLUMN_MODE_TABLE: true,
  MAX_ZOOM_LEVEL: true,
  h3DefaultElevation: true,
  ScenegraphLayer: true,
  scenegraphVisConfigs: true,
  tripDefaultLineWidth: true,
  coordHasLength4: true,
  isTripGeoJsonField: true,
  parseTripGeoJsonTimestamp: true,
  getAnimationDomainFromTimestamps: true,
  s2DefaultElevation: true,
  getS2Center: true,
  AggregationLayer: true,
  getFilterDataFunc: true,
  VectorTileLayer: true,
  VectorTileIcon: true,
  RasterTileLayer: true,
  getNumRasterTilesBeingLoaded: true,
  RasterTileIcon: true,
  CATEGORICAL_COLORMAP_ID: true,
  DATA_SOURCE_COLOR_DEFAULTS: true,
  RASTER_COLOR_RESET_PARAMS: true,
  PRESET_OPTIONS: true,
  RasterLayerResources: true,
  getCategoricalColormapDataUrl: true,
  WMSLayerIcon: true,
  parseGeoJsonRawFeature: true,
  Table: true,
  getEditorLayer: true,
  ScenegraphLayerIcon: true
};
Object.defineProperty(exports, "AggregationLayer", {
  enumerable: true,
  get: function get() {
    return _aggregationLayer["default"];
  }
});
Object.defineProperty(exports, "CATEGORICAL_COLORMAP_ID", {
  enumerable: true,
  get: function get() {
    return _config.CATEGORICAL_COLORMAP_ID;
  }
});
Object.defineProperty(exports, "COLUMN_MODE_TABLE", {
  enumerable: true,
  get: function get() {
    return _geojsonLayer.COLUMN_MODE_TABLE;
  }
});
Object.defineProperty(exports, "DATA_SOURCE_COLOR_DEFAULTS", {
  enumerable: true,
  get: function get() {
    return _config.DATA_SOURCE_COLOR_DEFAULTS;
  }
});
exports.KeplerGlLayers = exports.EditorLayerUtils = void 0;
Object.defineProperty(exports, "LAYER_ID_LENGTH", {
  enumerable: true,
  get: function get() {
    return _baseLayer.LAYER_ID_LENGTH;
  }
});
Object.defineProperty(exports, "Layer", {
  enumerable: true,
  get: function get() {
    return _baseLayer["default"];
  }
});
exports.LayerClasses = void 0;
Object.defineProperty(exports, "MAX_ZOOM_LEVEL", {
  enumerable: true,
  get: function get() {
    return _heatmapLayer.MAX_ZOOM_LEVEL;
  }
});
Object.defineProperty(exports, "OVERLAY_TYPE_CONST", {
  enumerable: true,
  get: function get() {
    return _baseLayer.OVERLAY_TYPE_CONST;
  }
});
Object.defineProperty(exports, "PRESET_OPTIONS", {
  enumerable: true,
  get: function get() {
    return _config.PRESET_OPTIONS;
  }
});
Object.defineProperty(exports, "RASTER_COLOR_RESET_PARAMS", {
  enumerable: true,
  get: function get() {
    return _config.RASTER_COLOR_RESET_PARAMS;
  }
});
Object.defineProperty(exports, "RasterLayerResources", {
  enumerable: true,
  get: function get() {
    return _url.RasterLayerResources;
  }
});
Object.defineProperty(exports, "RasterTileIcon", {
  enumerable: true,
  get: function get() {
    return _rasterTileIcon["default"];
  }
});
Object.defineProperty(exports, "RasterTileLayer", {
  enumerable: true,
  get: function get() {
    return _rasterTileLayer["default"];
  }
});
Object.defineProperty(exports, "ScenegraphLayer", {
  enumerable: true,
  get: function get() {
    return _scenegraphLayer["default"];
  }
});
Object.defineProperty(exports, "ScenegraphLayerIcon", {
  enumerable: true,
  get: function get() {
    return _scenegraphLayerIcon["default"];
  }
});
Object.defineProperty(exports, "Table", {
  enumerable: true,
  get: function get() {
    return _table["default"];
  }
});
Object.defineProperty(exports, "VectorTileIcon", {
  enumerable: true,
  get: function get() {
    return _vectorTileIcon["default"];
  }
});
Object.defineProperty(exports, "VectorTileLayer", {
  enumerable: true,
  get: function get() {
    return _vectorTileLayer["default"];
  }
});
Object.defineProperty(exports, "WMSLayerIcon", {
  enumerable: true,
  get: function get() {
    return _wmsLayerIcon["default"];
  }
});
Object.defineProperty(exports, "colorMaker", {
  enumerable: true,
  get: function get() {
    return _baseLayer.colorMaker;
  }
});
Object.defineProperty(exports, "coordHasLength4", {
  enumerable: true,
  get: function get() {
    return _tripUtils.coordHasLength4;
  }
});
Object.defineProperty(exports, "defaultElevation", {
  enumerable: true,
  get: function get() {
    return _geojsonLayer.defaultElevation;
  }
});
Object.defineProperty(exports, "defaultLineWidth", {
  enumerable: true,
  get: function get() {
    return _geojsonLayer.defaultLineWidth;
  }
});
Object.defineProperty(exports, "defaultRadius", {
  enumerable: true,
  get: function get() {
    return _geojsonLayer.defaultRadius;
  }
});
Object.defineProperty(exports, "getAnimationDomainFromTimestamps", {
  enumerable: true,
  get: function get() {
    return _tripUtils.getAnimationDomainFromTimestamps;
  }
});
Object.defineProperty(exports, "getCategoricalColormapDataUrl", {
  enumerable: true,
  get: function get() {
    return _image.getCategoricalColormapDataUrl;
  }
});
Object.defineProperty(exports, "getEditorLayer", {
  enumerable: true,
  get: function get() {
    return _editorLayer.getEditorLayer;
  }
});
Object.defineProperty(exports, "getFilterDataFunc", {
  enumerable: true,
  get: function get() {
    return _aggregationLayer.getFilterDataFunc;
  }
});
Object.defineProperty(exports, "getNumRasterTilesBeingLoaded", {
  enumerable: true,
  get: function get() {
    return _rasterTileLayer.getNumRasterTilesBeingLoaded;
  }
});
Object.defineProperty(exports, "getS2Center", {
  enumerable: true,
  get: function get() {
    return _s2Utils.getS2Center;
  }
});
Object.defineProperty(exports, "h3DefaultElevation", {
  enumerable: true,
  get: function get() {
    return _h3HexagonLayer.defaultElevation;
  }
});
Object.defineProperty(exports, "isTripGeoJsonField", {
  enumerable: true,
  get: function get() {
    return _tripUtils.isTripGeoJsonField;
  }
});
Object.defineProperty(exports, "layerColors", {
  enumerable: true,
  get: function get() {
    return _baseLayer.layerColors;
  }
});
Object.defineProperty(exports, "parseGeoJsonRawFeature", {
  enumerable: true,
  get: function get() {
    return _geojsonUtils.parseGeoJsonRawFeature;
  }
});
Object.defineProperty(exports, "parseTripGeoJsonTimestamp", {
  enumerable: true,
  get: function get() {
    return _tripUtils.parseTripGeoJsonTimestamp;
  }
});
Object.defineProperty(exports, "pointToPolygonGeo", {
  enumerable: true,
  get: function get() {
    return _gridUtils.pointToPolygonGeo;
  }
});
Object.defineProperty(exports, "s2DefaultElevation", {
  enumerable: true,
  get: function get() {
    return _s2GeometryLayer.defaultElevation;
  }
});
Object.defineProperty(exports, "scenegraphVisConfigs", {
  enumerable: true,
  get: function get() {
    return _scenegraphLayer.scenegraphVisConfigs;
  }
});
Object.defineProperty(exports, "tripDefaultLineWidth", {
  enumerable: true,
  get: function get() {
    return _tripLayer.defaultLineWidth;
  }
});
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _baseLayer = _interopRequireWildcard(require("./base-layer"));
Object.keys(_baseLayer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _baseLayer[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _baseLayer[key];
    }
  });
});
var _pointLayer = _interopRequireDefault(require("./point-layer/point-layer"));
var _arcLayer = _interopRequireDefault(require("./arc-layer/arc-layer"));
var _lineLayer = _interopRequireDefault(require("./line-layer/line-layer"));
var _gridLayer = _interopRequireDefault(require("./grid-layer/grid-layer"));
var _gridUtils = require("./grid-layer/grid-utils");
var _hexagonLayer = _interopRequireDefault(require("./hexagon-layer/hexagon-layer"));
var _geojsonLayer = _interopRequireWildcard(require("./geojson-layer/geojson-layer"));
var _clusterLayer = _interopRequireDefault(require("./cluster-layer/cluster-layer"));
var _iconLayer = _interopRequireDefault(require("./icon-layer/icon-layer"));
var _heatmapLayer = _interopRequireWildcard(require("./heatmap-layer/heatmap-layer"));
var _h3HexagonLayer = _interopRequireWildcard(require("./h3-hexagon-layer/h3-hexagon-layer"));
var _scenegraphLayer = _interopRequireWildcard(require("./scenegraph-layer/scenegraph-layer"));
var _tripLayer = _interopRequireWildcard(require("./trip-layer/trip-layer"));
var _tripUtils = require("./trip-layer/trip-utils");
var _s2GeometryLayer = _interopRequireWildcard(require("./s2-geometry-layer/s2-geometry-layer"));
var _s2Utils = require("./s2-geometry-layer/s2-utils");
var _aggregationLayer = _interopRequireWildcard(require("./aggregation-layer"));
var _vectorTileLayer = _interopRequireDefault(require("./vector-tile/vector-tile-layer"));
var _vectorTileIcon = _interopRequireDefault(require("./vector-tile/vector-tile-icon"));
var _rasterTileLayer = _interopRequireWildcard(require("./raster-tile/raster-tile-layer"));
var _rasterTileIcon = _interopRequireDefault(require("./raster-tile/raster-tile-icon"));
var _config = require("./raster-tile/config");
var _url = require("./raster-tile/url");
var _image = require("./raster-tile/image");
var _types = require("./raster-tile/types");
Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _types[key];
    }
  });
});
var _rasterTileUtils = require("./raster-tile/raster-tile-utils");
Object.keys(_rasterTileUtils).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _rasterTileUtils[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _rasterTileUtils[key];
    }
  });
});
var _wmsLayerIcon = _interopRequireDefault(require("./wms-layer/wms-layer-icon"));
var _constants = require("@kepler.gl/constants");
var _geojsonUtils = require("./geojson-layer/geojson-utils");
var _mapboxUtils = require("./mapbox-utils");
Object.keys(_mapboxUtils).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _mapboxUtils[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _mapboxUtils[key];
    }
  });
});
var _h3HexagonLayer2 = require("./h3-hexagon-layer");
Object.keys(_h3HexagonLayer2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _h3HexagonLayer2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _h3HexagonLayer2[key];
    }
  });
});
var _table = _interopRequireDefault(require("./table"));
var _editorLayer = require("./editor-layer/editor-layer");
var _scenegraphLayerIcon = _interopRequireDefault(require("./scenegraph-layer/scenegraph-layer-icon"));
var _editorLayerUtils = require("./editor-layer/editor-layer-utils");
var _wmsLayer = _interopRequireDefault(require("./wms-layer/wms-layer"));
var _layerUpdate = require("./layer-update");
Object.keys(_layerUpdate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _layerUpdate[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _layerUpdate[key];
    }
  });
});
var _layerUtils = require("./layer-utils");
Object.keys(_layerUtils).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _layerUtils[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _layerUtils[key];
    }
  });
});
var _LayerClasses; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
// base layer
// eslint-disable-next-line prettier/prettier
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
// individual layers
var KeplerGlLayers = exports.KeplerGlLayers = {
  PointLayer: _pointLayer["default"],
  ArcLayer: _arcLayer["default"],
  LineLayer: _lineLayer["default"],
  GridLayer: _gridLayer["default"],
  HexagonLayer: _hexagonLayer["default"],
  GeojsonLayer: _geojsonLayer["default"],
  ClusterLayer: _clusterLayer["default"],
  IconLayer: _iconLayer["default"],
  HeatmapLayer: _heatmapLayer["default"],
  H3Layer: _h3HexagonLayer["default"],
  ScenegraphLayer: _scenegraphLayer["default"],
  TripLayer: _tripLayer["default"],
  S2GeometryLayer: _s2GeometryLayer["default"],
  VectorTileLayer: _vectorTileLayer["default"],
  RasterTileLayer: _rasterTileLayer["default"],
  WMSLayer: _wmsLayer["default"]
};
var LayerClasses = exports.LayerClasses = (_LayerClasses = {}, (0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])(_LayerClasses, _constants.LAYER_TYPES.point, _pointLayer["default"]), _constants.LAYER_TYPES.arc, _arcLayer["default"]), _constants.LAYER_TYPES.line, _lineLayer["default"]), _constants.LAYER_TYPES.grid, _gridLayer["default"]), _constants.LAYER_TYPES.hexagon, _hexagonLayer["default"]), _constants.LAYER_TYPES.geojson, _geojsonLayer["default"]), _constants.LAYER_TYPES.cluster, _clusterLayer["default"]), _constants.LAYER_TYPES.icon, _iconLayer["default"]), _constants.LAYER_TYPES.heatmap, _heatmapLayer["default"]), _constants.LAYER_TYPES.hexagonId, _h3HexagonLayer["default"]), (0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])((0, _defineProperty2["default"])(_LayerClasses, _constants.LAYER_TYPES['3D'], _scenegraphLayer["default"]), _constants.LAYER_TYPES.trip, _tripLayer["default"]), _constants.LAYER_TYPES.s2, _s2GeometryLayer["default"]), _constants.LAYER_TYPES['vectorTile'], _vectorTileLayer["default"]), _constants.LAYER_TYPES['rasterTile'], _rasterTileLayer["default"]), _constants.LAYER_TYPES.wms, _wmsLayer["default"]));
var EditorLayerUtils = exports.EditorLayerUtils = {
  isDrawingActive: _editorLayerUtils.isDrawingActive,
  onClick: _editorLayerUtils.onClick,
  onHover: _editorLayerUtils.onHover,
  getTooltip: _editorLayerUtils.getTooltip,
  getCursor: _editorLayerUtils.getCursor
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,