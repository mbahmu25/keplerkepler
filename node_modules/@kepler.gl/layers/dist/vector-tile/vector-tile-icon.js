"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _base = require("../base");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var VectorTileIcon = /*#__PURE__*/function (_Component) {
  function VectorTileIcon() {
    (0, _classCallCheck2["default"])(this, VectorTileIcon);
    return _callSuper(this, VectorTileIcon, arguments);
  }
  (0, _inherits2["default"])(VectorTileIcon, _Component);
  return (0, _createClass2["default"])(VectorTileIcon, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base.Base, this.props, /*#__PURE__*/_react["default"].createElement("g", {
        id: "vector-tile-layer"
      }, /*#__PURE__*/_react["default"].createElement("polygon", {
        id: "Path",
        points: "12.1949893 42.9771532 3 37.4596134 12.2699446 31.9771532 21 37.45407",
        style: {
          opacity: 0.6
        }
      }), /*#__PURE__*/_react["default"].createElement("polygon", {
        id: "Path-Copy-3",
        points: "22.2609912 37 13.0660019 31.4824602 22.3359466 26 31.0660019 31.4769168",
        style: {
          opacity: 1
        }
      }), /*#__PURE__*/_react["default"].createElement("polygon", {
        id: "Path-Copy-6",
        points: "32.1949893 21 23 15.4824602 32.2699446 10 41 15.4769168",
        style: {
          opacity: 1
        }
      }), /*#__PURE__*/_react["default"].createElement("polygon", {
        id: "Path-Copy",
        points: "22.2609912 49 13.0660019 43.4824602 22.3359466 38 31.0660019 43.4769168",
        style: {
          opacity: 1
        }
      }), /*#__PURE__*/_react["default"].createElement("polygon", {
        id: "Path-Copy-4",
        points: "32.3269931 43.0228468 23.1320038 37.505307 32.4019485 32.0228468 41.1320038 37.4997636",
        style: {
          opacity: 0.6
        }
      }), /*#__PURE__*/_react["default"].createElement("polygon", {
        id: "Path-Copy-7",
        points: "42.3269931 37.0228468 33.1320038 31.505307 42.4019485 26.0228468 51.1320038 31.4997636",
        style: {
          opacity: 1
        }
      }), /*#__PURE__*/_react["default"].createElement("polygon", {
        id: "Path-Copy-2",
        points: "32.2609912 55 23.0660019 49.4824602 32.3359466 44 41.0660019 49.4769168",
        style: {
          opacity: 0.6
        }
      }), /*#__PURE__*/_react["default"].createElement("polygon", {
        id: "Path-Copy-5",
        points: "42.3269931 49.0228468 33.1320038 43.505307 42.4019485 38.0228468 51.1320038 43.4997636",
        style: {
          opacity: 1
        }
      }), /*#__PURE__*/_react["default"].createElement("polygon", {
        id: "Path-Copy-8",
        points: "53.3269931 43.0228468 44.1320038 37.505307 53.4019485 32.0228468 62.1320038 37.4997636",
        style: {
          opacity: 0.4
        }
      })));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(VectorTileIcon, "propTypes", {
  height: _propTypes["default"].string,
  colors: _propTypes["default"].arrayOf(_propTypes["default"].string.isRequired)
});
(0, _defineProperty2["default"])(VectorTileIcon, "defaultProps", {
  height: '16px',
  predefinedClassName: 'vector-tile-layer-icon',
  totalColor: 2
});
var _default = exports["default"] = VectorTileIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,