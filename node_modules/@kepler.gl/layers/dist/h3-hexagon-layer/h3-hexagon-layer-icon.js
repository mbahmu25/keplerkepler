"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _base = require("../base");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var H3HexagonLayerIcon = /*#__PURE__*/function (_Component) {
  function H3HexagonLayerIcon() {
    (0, _classCallCheck2["default"])(this, H3HexagonLayerIcon);
    return _callSuper(this, H3HexagonLayerIcon, arguments);
  }
  (0, _inherits2["default"])(H3HexagonLayerIcon, _Component);
  return (0, _createClass2["default"])(H3HexagonLayerIcon, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base.Base, this.props, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M44.59,54.5H19.41L6.81,32.68,19.41,10.87H44.59L57.19,32.68Zm-23-3.83H42.38l10.38-18-10.38-18H21.62l-10.38,18Z"
      }), /*#__PURE__*/_react["default"].createElement("polygon", {
        points: "24.65 32.86 24.65 37.79 22.53 37.79 22.53 26.3 24.65 26.3 24.65 30.91 29.32 30.91 29.32 26.3 31.43 26.3 31.43 37.79 29.32 37.79 29.32 32.86 24.65 32.86"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M33.79,37.05l.6-1.67a5.86,5.86,0,0,0,1.39.61,5.59,5.59,0,0,0,1.5.19A2.57,2.57,0,0,0,39,35.66a1.81,1.81,0,0,0,.61-1.46A1.29,1.29,0,0,0,38.94,33a4.55,4.55,0,0,0-2.05-.32H35.74V31h1.1A5.4,5.4,0,0,0,38,30.85a2.1,2.1,0,0,0,.77-.29,1.53,1.53,0,0,0,.51-.54,1.58,1.58,0,0,0,.15-.73,1.14,1.14,0,0,0-.51-1,2.67,2.67,0,0,0-1.5-.34,4.56,4.56,0,0,0-1.51.24,5,5,0,0,0-1.34.73l-.7-1.61a4.92,4.92,0,0,1,1.66-.83,6.91,6.91,0,0,1,2-.31,4.41,4.41,0,0,1,2.81.79,2.71,2.71,0,0,1,1,2.24,2.33,2.33,0,0,1-.54,1.62,3.45,3.45,0,0,1-1.46.93v0a3,3,0,0,1,1.67.81,2.3,2.3,0,0,1,.64,1.7A3.27,3.27,0,0,1,40.48,37a5,5,0,0,1-3.16.91A6.77,6.77,0,0,1,33.79,37.05Z"
      }));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(H3HexagonLayerIcon, "propTypes", {
  /** Set the height of the icon, ex. '16px' */
  height: _propTypes["default"].string,
  colors: _propTypes["default"].arrayOf(_propTypes["default"].string)
});
(0, _defineProperty2["default"])(H3HexagonLayerIcon, "defaultProps", {
  height: '16px',
  predefinedClassName: 'h3-hexagon-layer-icon',
  totalColor: 4
});
var _default = exports["default"] = H3HexagonLayerIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9iYXNlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiX2NhbGxTdXBlciIsIm8iLCJfZ2V0UHJvdG90eXBlT2YyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJIM0hleGFnb25MYXllckljb24iLCJfQ29tcG9uZW50IiwiX2NsYXNzQ2FsbENoZWNrMiIsImFyZ3VtZW50cyIsIl9pbmhlcml0czIiLCJfY3JlYXRlQ2xhc3MyIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiQmFzZSIsInByb3BzIiwiZCIsInBvaW50cyIsIkNvbXBvbmVudCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJoZWlnaHQiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJjb2xvcnMiLCJhcnJheU9mIiwicHJlZGVmaW5lZENsYXNzTmFtZSIsInRvdGFsQ29sb3IiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvaDMtaGV4YWdvbi1sYXllci9oMy1oZXhhZ29uLWxheWVyLWljb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7QmFzZX0gZnJvbSAnLi4vYmFzZSc7XG5cbmNsYXNzIEgzSGV4YWdvbkxheWVySWNvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqIFNldCB0aGUgaGVpZ2h0IG9mIHRoZSBpY29uLCBleC4gJzE2cHgnICovXG4gICAgaGVpZ2h0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbG9yczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZylcbiAgfTtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBoZWlnaHQ6ICcxNnB4JyxcbiAgICBwcmVkZWZpbmVkQ2xhc3NOYW1lOiAnaDMtaGV4YWdvbi1sYXllci1pY29uJyxcbiAgICB0b3RhbENvbG9yOiA0XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8QmFzZSB7Li4udGhpcy5wcm9wc30+XG4gICAgICAgIDxwYXRoIGQ9XCJNNDQuNTksNTQuNUgxOS40MUw2LjgxLDMyLjY4LDE5LjQxLDEwLjg3SDQ0LjU5TDU3LjE5LDMyLjY4Wm0tMjMtMy44M0g0Mi4zOGwxMC4zOC0xOC0xMC4zOC0xOEgyMS42MmwtMTAuMzgsMThaXCIgLz5cbiAgICAgICAgPHBvbHlnb24gcG9pbnRzPVwiMjQuNjUgMzIuODYgMjQuNjUgMzcuNzkgMjIuNTMgMzcuNzkgMjIuNTMgMjYuMyAyNC42NSAyNi4zIDI0LjY1IDMwLjkxIDI5LjMyIDMwLjkxIDI5LjMyIDI2LjMgMzEuNDMgMjYuMyAzMS40MyAzNy43OSAyOS4zMiAzNy43OSAyOS4zMiAzMi44NiAyNC42NSAzMi44NlwiIC8+XG4gICAgICAgIDxwYXRoIGQ9XCJNMzMuNzksMzcuMDVsLjYtMS42N2E1Ljg2LDUuODYsMCwwLDAsMS4zOS42MSw1LjU5LDUuNTksMCwwLDAsMS41LjE5QTIuNTcsMi41NywwLDAsMCwzOSwzNS42NmExLjgxLDEuODEsMCwwLDAsLjYxLTEuNDZBMS4yOSwxLjI5LDAsMCwwLDM4Ljk0LDMzYTQuNTUsNC41NSwwLDAsMC0yLjA1LS4zMkgzNS43NFYzMWgxLjFBNS40LDUuNCwwLDAsMCwzOCwzMC44NWEyLjEsMi4xLDAsMCwwLC43Ny0uMjksMS41MywxLjUzLDAsMCwwLC41MS0uNTQsMS41OCwxLjU4LDAsMCwwLC4xNS0uNzMsMS4xNCwxLjE0LDAsMCwwLS41MS0xLDIuNjcsMi42NywwLDAsMC0xLjUtLjM0LDQuNTYsNC41NiwwLDAsMC0xLjUxLjI0LDUsNSwwLDAsMC0xLjM0LjczbC0uNy0xLjYxYTQuOTIsNC45MiwwLDAsMSwxLjY2LS44Myw2LjkxLDYuOTEsMCwwLDEsMi0uMzEsNC40MSw0LjQxLDAsMCwxLDIuODEuNzksMi43MSwyLjcxLDAsMCwxLDEsMi4yNCwyLjMzLDIuMzMsMCwwLDEtLjU0LDEuNjIsMy40NSwzLjQ1LDAsMCwxLTEuNDYuOTN2MGEzLDMsMCwwLDEsMS42Ny44MSwyLjMsMi4zLDAsMCwxLC42NCwxLjdBMy4yNywzLjI3LDAsMCwxLDQwLjQ4LDM3YTUsNSwwLDAsMS0zLjE2LjkxQTYuNzcsNi43NywwLDAsMSwzMy43OSwzNy4wNVpcIiAvPlxuICAgICAgPC9CYXNlPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSDNIZXhhZ29uTGF5ZXJJY29uO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFVBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLEtBQUEsR0FBQUgsT0FBQTtBQUE2QixTQUFBSSx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxtQkFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQSxXQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxLQUFBRixDQUFBO0FBQUEsU0FBQU4sd0JBQUFNLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUEsZUFBQUEsQ0FBQSxnQkFBQUssT0FBQSxDQUFBTCxDQUFBLDBCQUFBQSxDQUFBLHNCQUFBQSxDQUFBLFFBQUFHLENBQUEsR0FBQUosd0JBQUEsQ0FBQUcsQ0FBQSxPQUFBQyxDQUFBLElBQUFBLENBQUEsQ0FBQUcsR0FBQSxDQUFBTixDQUFBLFVBQUFHLENBQUEsQ0FBQUksR0FBQSxDQUFBUCxDQUFBLE9BQUFRLENBQUEsS0FBQUMsU0FBQSxVQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFFLHdCQUFBLFdBQUFDLENBQUEsSUFBQWQsQ0FBQSxvQkFBQWMsQ0FBQSxPQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWhCLENBQUEsRUFBQWMsQ0FBQSxTQUFBRyxDQUFBLEdBQUFQLENBQUEsR0FBQUMsTUFBQSxDQUFBRSx3QkFBQSxDQUFBYixDQUFBLEVBQUFjLENBQUEsVUFBQUcsQ0FBQSxLQUFBQSxDQUFBLENBQUFWLEdBQUEsSUFBQVUsQ0FBQSxDQUFBQyxHQUFBLElBQUFQLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSixDQUFBLEVBQUFNLENBQUEsRUFBQUcsQ0FBQSxJQUFBVCxDQUFBLENBQUFNLENBQUEsSUFBQWQsQ0FBQSxDQUFBYyxDQUFBLFlBQUFOLENBQUEsY0FBQVIsQ0FBQSxFQUFBRyxDQUFBLElBQUFBLENBQUEsQ0FBQWUsR0FBQSxDQUFBbEIsQ0FBQSxFQUFBUSxDQUFBLEdBQUFBLENBQUE7QUFBQSxTQUFBVyxXQUFBaEIsQ0FBQSxFQUFBaUIsQ0FBQSxFQUFBcEIsQ0FBQSxXQUFBb0IsQ0FBQSxPQUFBQyxnQkFBQSxhQUFBRCxDQUFBLE9BQUFFLDJCQUFBLGFBQUFuQixDQUFBLEVBQUFvQix5QkFBQSxLQUFBQyxPQUFBLENBQUFDLFNBQUEsQ0FBQUwsQ0FBQSxFQUFBcEIsQ0FBQSxZQUFBcUIsZ0JBQUEsYUFBQWxCLENBQUEsRUFBQXVCLFdBQUEsSUFBQU4sQ0FBQSxDQUFBTyxLQUFBLENBQUF4QixDQUFBLEVBQUFILENBQUE7QUFBQSxTQUFBdUIsMEJBQUEsY0FBQXBCLENBQUEsSUFBQXlCLE9BQUEsQ0FBQUMsU0FBQSxDQUFBQyxPQUFBLENBQUFkLElBQUEsQ0FBQVEsT0FBQSxDQUFBQyxTQUFBLENBQUFHLE9BQUEsaUNBQUF6QixDQUFBLGFBQUFvQix5QkFBQSxZQUFBQSwwQkFBQSxhQUFBcEIsQ0FBQSxVQUw3QjtBQUNBO0FBQUEsSUFNTTRCLGtCQUFrQiwwQkFBQUMsVUFBQTtFQUFBLFNBQUFELG1CQUFBO0lBQUEsSUFBQUUsZ0JBQUEsbUJBQUFGLGtCQUFBO0lBQUEsT0FBQVosVUFBQSxPQUFBWSxrQkFBQSxFQUFBRyxTQUFBO0VBQUE7RUFBQSxJQUFBQyxVQUFBLGFBQUFKLGtCQUFBLEVBQUFDLFVBQUE7RUFBQSxXQUFBSSxhQUFBLGFBQUFMLGtCQUFBO0lBQUFNLEdBQUE7SUFBQUMsS0FBQSxFQVl0QixTQUFBQyxNQUFNQSxDQUFBLEVBQUc7TUFDUCxvQkFDRTlDLE1BQUEsWUFBQStDLGFBQUEsQ0FBQzFDLEtBQUEsQ0FBQTJDLElBQUksRUFBSyxJQUFJLENBQUNDLEtBQUssZUFDbEJqRCxNQUFBLFlBQUErQyxhQUFBO1FBQU1HLENBQUMsRUFBQztNQUErRyxDQUFFLENBQUMsZUFDMUhsRCxNQUFBLFlBQUErQyxhQUFBO1FBQVNJLE1BQU0sRUFBQztNQUF5SixDQUFFLENBQUMsZUFDNUtuRCxNQUFBLFlBQUErQyxhQUFBO1FBQU1HLENBQUMsRUFBQztNQUFxbkIsQ0FBRSxDQUMzbkIsQ0FBQztJQUVYO0VBQUM7QUFBQSxFQXBCOEJFLGdCQUFTO0FBQUEsSUFBQUMsZ0JBQUEsYUFBcENmLGtCQUFrQixlQUNIO0VBQ2pCO0VBQ0FnQixNQUFNLEVBQUVDLHFCQUFTLENBQUNDLE1BQU07RUFDeEJDLE1BQU0sRUFBRUYscUJBQVMsQ0FBQ0csT0FBTyxDQUFDSCxxQkFBUyxDQUFDQyxNQUFNO0FBQzVDLENBQUM7QUFBQSxJQUFBSCxnQkFBQSxhQUxHZixrQkFBa0Isa0JBTUE7RUFDcEJnQixNQUFNLEVBQUUsTUFBTTtFQUNkSyxtQkFBbUIsRUFBRSx1QkFBdUI7RUFDNUNDLFVBQVUsRUFBRTtBQUNkLENBQUM7QUFBQSxJQUFBQyxRQUFBLEdBQUFDLE9BQUEsY0FhWXhCLGtCQUFrQiIsImlnbm9yZUxpc3QiOltdfQ==