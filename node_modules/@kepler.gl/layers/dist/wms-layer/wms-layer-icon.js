"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _base = require("../base");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var WMSLayerIcon = /*#__PURE__*/function (_Component) {
  function WMSLayerIcon() {
    (0, _classCallCheck2["default"])(this, WMSLayerIcon);
    return _callSuper(this, WMSLayerIcon, arguments);
  }
  (0, _inherits2["default"])(WMSLayerIcon, _Component);
  return (0, _createClass2["default"])(WMSLayerIcon, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base.Base, this.props, /*#__PURE__*/_react["default"].createElement("g", {
        clipPath: "url(#clip0_13806_131258)"
      }, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M14.7595 12.2358L1 19.9828L15.2405 28L29 20.2536L14.7595 12.2358Z",
        fill: "currentColor"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M14.7595 7.66919L1 15.4156L15.2405 23.4334L29 15.687L14.7595 7.66919Z",
        fill: "#9DA0B9"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M14.7595 2L1 9.74639L15.2405 17.7636L29 10.0172L14.7595 2Z",
        fill: "#BFC0D1"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M25.9696 10.8737H4.02124V19.267H25.9696V10.8737Z",
        fill: "currentColor"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M5.51221 12.2358H6.77682L7.643 15.9522L8.58367 12.2358H9.64733L10.629 15.9725L11.5235 12.2358H12.6784L11.3341 17.6116H10.0637L9.0693 13.8953L8.05934 17.6116H6.85362L5.51221 12.2358Z",
        fill: "white"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M13.4314 12.2358H15.0812L16.3689 15.5817L17.6393 12.2358H19.2561V17.6116H18.0146V13.8389L16.4884 17.6116H16.0796L14.5453 13.8389V17.6116H13.4314V12.2358Z",
        fill: "white"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M20.1084 15.9274H21.3037C21.3574 16.4088 21.5659 16.8069 22.383 16.8069C22.9304 16.8069 23.293 16.5141 23.293 16.0929C23.293 15.6717 23.0621 15.5141 22.2536 15.3936C20.8429 15.2134 20.2643 14.7995 20.2643 13.7606C20.2643 12.8433 21.0508 12.1592 22.2692 12.1592C23.5107 12.1592 24.2354 12.7003 24.3353 13.7679H23.1851C23.1077 13.2792 22.8149 13.0539 22.2675 13.0539C21.7201 13.0539 21.4423 13.3017 21.4423 13.6626C21.4423 14.0461 21.6196 14.2257 22.4679 14.3468C23.8018 14.5123 24.4889 14.8659 24.4889 15.9797C24.4889 16.937 23.6874 17.6938 22.3841 17.6938C20.8718 17.6943 20.1777 17.0029 20.1084 15.9274Z",
        fill: "white"
      })), /*#__PURE__*/_react["default"].createElement("defs", null, /*#__PURE__*/_react["default"].createElement("clipPath", {
        id: "clip0_13806_131258"
      }, /*#__PURE__*/_react["default"].createElement("rect", {
        width: "28",
        height: "26",
        fill: "white",
        transform: "translate(1 2)"
      }))));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(WMSLayerIcon, "propTypes", {
  height: _propTypes["default"].string,
  colors: _propTypes["default"].arrayOf(_propTypes["default"].string.isRequired)
});
(0, _defineProperty2["default"])(WMSLayerIcon, "defaultProps", {
  height: '16px',
  predefinedClassName: 'wms-layer-icon',
  totalColor: 2,
  viewBox: '0 0 30 30'
});
var _default = exports["default"] = WMSLayerIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,