export { default as Layer, OVERLAY_TYPE_CONST, LAYER_ID_LENGTH, colorMaker, layerColors } from './base-layer';
import { default as PointLayer } from './point-layer/point-layer';
import { default as ArcLayer } from './arc-layer/arc-layer';
import { default as LineLayer } from './line-layer/line-layer';
import { default as GridLayer } from './grid-layer/grid-layer';
export { pointToPolygonGeo } from './grid-layer/grid-utils';
import { default as HexagonLayer } from './hexagon-layer/hexagon-layer';
import { default as GeojsonLayer } from './geojson-layer/geojson-layer';
export { defaultElevation, defaultLineWidth, defaultRadius, COLUMN_MODE_TABLE } from './geojson-layer/geojson-layer';
import { default as ClusterLayer } from './cluster-layer/cluster-layer';
import { default as IconLayer } from './icon-layer/icon-layer';
import { default as HeatmapLayer } from './heatmap-layer/heatmap-layer';
export { MAX_ZOOM_LEVEL } from './heatmap-layer/heatmap-layer';
import { default as H3Layer } from './h3-hexagon-layer/h3-hexagon-layer';
export { defaultElevation as h3DefaultElevation } from './h3-hexagon-layer/h3-hexagon-layer';
import { default as ScenegraphLayer } from './scenegraph-layer/scenegraph-layer';
import { default as TripLayer } from './trip-layer/trip-layer';
export { defaultLineWidth as tripDefaultLineWidth } from './trip-layer/trip-layer';
export { coordHasLength4, isTripGeoJsonField, parseTripGeoJsonTimestamp, getAnimationDomainFromTimestamps } from './trip-layer/trip-utils';
import { default as S2GeometryLayer } from './s2-geometry-layer/s2-geometry-layer';
export { defaultElevation as s2DefaultElevation } from './s2-geometry-layer/s2-geometry-layer';
export { getS2Center } from './s2-geometry-layer/s2-utils';
export { default as AggregationLayer } from './aggregation-layer';
import { default as VectorTileLayer } from './vector-tile/vector-tile-layer';
export { default as VectorTileIcon } from './vector-tile/vector-tile-icon';
export { default as VectorTileLayer } from './vector-tile/vector-tile-layer';
import { default as RasterTileLayer } from './raster-tile/raster-tile-layer';
export { default as RasterTileIcon } from './raster-tile/raster-tile-icon';
export { default as RasterTileLayer, getNumRasterTilesBeingLoaded } from './raster-tile/raster-tile-layer';
export { CATEGORICAL_COLORMAP_ID, DATA_SOURCE_COLOR_DEFAULTS, RASTER_COLOR_RESET_PARAMS, PRESET_OPTIONS } from './raster-tile/config';
export { RasterLayerResources } from './raster-tile/url';
export { getCategoricalColormapDataUrl } from './raster-tile/image';
export * from './raster-tile/types';
export * from './raster-tile/raster-tile-utils';
export { default as WMSLayerIcon } from './wms-layer/wms-layer-icon';
export { parseGeoJsonRawFeature } from './geojson-layer/geojson-utils';
export type { LayerBaseConfig, VisualChannelDomain, VisualChannel, VisualChannelDescription } from './base-layer';
export * from './base-layer';
export declare const KeplerGlLayers: {
    PointLayer: typeof PointLayer;
    ArcLayer: typeof ArcLayer;
    LineLayer: typeof LineLayer;
    GridLayer: typeof GridLayer;
    HexagonLayer: typeof HexagonLayer;
    GeojsonLayer: typeof GeojsonLayer;
    ClusterLayer: typeof ClusterLayer;
    IconLayer: typeof IconLayer;
    HeatmapLayer: typeof HeatmapLayer;
    H3Layer: typeof H3Layer;
    ScenegraphLayer: typeof ScenegraphLayer;
    TripLayer: typeof TripLayer;
    S2GeometryLayer: typeof S2GeometryLayer;
    VectorTileLayer: typeof VectorTileLayer;
    RasterTileLayer: typeof RasterTileLayer;
    WMSLayer: typeof WMSLayer;
};
export declare type LayerClassesType = typeof LayerClasses;
export declare const LayerClasses: {
    point: typeof PointLayer;
    arc: typeof ArcLayer;
    line: typeof LineLayer;
    grid: typeof GridLayer;
    hexagon: typeof HexagonLayer;
    geojson: typeof GeojsonLayer;
    cluster: typeof ClusterLayer;
    icon: typeof IconLayer;
    heatmap: typeof HeatmapLayer;
    hexagonId: typeof H3Layer;
    "3D": typeof ScenegraphLayer;
    trip: typeof TripLayer;
    s2: typeof S2GeometryLayer;
    vectorTile: typeof VectorTileLayer;
    rasterTile: typeof RasterTileLayer;
    wms: typeof WMSLayer;
};
export * from './mapbox-utils';
export * from './h3-hexagon-layer';
export { default as Table } from './table';
export { getEditorLayer } from './editor-layer/editor-layer';
export { default as ScenegraphLayer, scenegraphVisConfigs } from './scenegraph-layer/scenegraph-layer';
export { default as ScenegraphLayerIcon } from './scenegraph-layer/scenegraph-layer-icon';
import { isDrawingActive, onClick, onHover, getTooltip, getCursor } from './editor-layer/editor-layer-utils';
import WMSLayer from './wms-layer/wms-layer';
export declare const EditorLayerUtils: {
    isDrawingActive: typeof isDrawingActive;
    onClick: typeof onClick;
    onHover: typeof onHover;
    getTooltip: typeof getTooltip;
    getCursor: typeof getCursor;
};
export { getFilterDataFunc } from './aggregation-layer';
export * from './layer-update';
export * from './layer-utils';
