/**
 * Integer code for geometry types in WKB and related formats
 * Reference: https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary
 */
export declare enum WKBGeometryType {
    Point = 1,
    LineString = 2,
    Polygon = 3,
    MultiPoint = 4,
    MultiLineString = 5,
    MultiPolygon = 6,
    GeometryCollection = 7
}
/** Parsed WKB header */
export type WKBHeader = {
    /** WKB variant */
    type: 'wkb' | 'ewkb' | 'iso-wkb' | 'twkb';
    /** geometry type encoded in this WKB: point, line, polygon etc */
    geometryType: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /** Number of dimensions for coordinate data */
    dimensions: 2 | 3 | 4;
    /** Coordinate names, Z and M are controlled by flags */
    coordinates: 'xy' | 'xyz' | 'xym' | 'xyzm';
    srid?: number;
    /** true if binary data is stored as little endian */
    littleEndian: boolean;
    /** Offset to start of geometry */
    byteOffset: number;
};
/** Sanity checks that first to 5-9 bytes could represent a supported WKB dialect header */
export declare function isWKB(arrayBuffer: ArrayBuffer): boolean;
/**
 * Parses header and provides a byteOffset to start of geometry data
 * @param dataView
 * @param target optionally supply a WKBHeader object to avoid creating a new object for every call
 * @returns a header object describing the WKB data
 */
export declare function parseWKBHeader(dataView: DataView, target?: WKBHeader): WKBHeader;
//# sourceMappingURL=parse-wkb-header.d.ts.map