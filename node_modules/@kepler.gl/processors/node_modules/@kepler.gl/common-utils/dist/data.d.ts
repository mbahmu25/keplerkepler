import { Field } from '@kepler.gl/types';
export declare function notNullorUndefined<T extends NonNullable<any>>(d: T | null | undefined): d is T;
/**
 * Check if string is a valid Well-known binary (WKB) in HEX format
 * https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry
 *
 * @param str input string
 * @returns true if string is a valid WKB in HEX format
 */
export declare function isHexWkb(str: string | null): boolean;
/**
 * Converts non-arrays to arrays.  Leaves arrays alone.  Converts
 * undefined values to empty arrays ([] instead of [undefined]).
 * Otherwise, just returns [item] for non-array items.
 *
 * @param {*} item
 * @returns {array} boom! much array. very indexed. so useful.
 */
export declare function toArray<T>(item: T | T[]): T[];
/**
 * Move an array item to a different position. Returns a new array with the item moved to the new position.
 */
export declare function arrayMove<T>(array: T[], from: number, to: number): T[];
/**
 * Check whether geojson linestring's 4th coordinate is 1) not timestamp 2) unix time stamp 3) real date time
 * @param timestamps array to be tested if its elements are timestamp
 * @returns the type of timestamp: unix/datetime/invalid(not timestamp)
 */
export declare function containValidTime(timestamps: string[]): Field | null;
