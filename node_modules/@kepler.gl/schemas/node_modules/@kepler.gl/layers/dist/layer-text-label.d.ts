import * as arrow from 'apache-arrow';
import { DataContainerInterface } from '@kepler.gl/utils';
export declare const defaultPadding = 20;
export declare function getTextOffsetByRadius(radiusScale: any, getRadius: any, mapState: any): (textLabel: any) => number[] | ((d: any) => number[]);
export declare const textLabelAccessor: (textLabel: any) => (dc: any) => (d: any) => string;
export declare const formatTextLabelData: ({ textLabel, triggerChanged, oldLayerData, data, dataContainer, filteredIndex }: {
    textLabel: any;
    triggerChanged?: boolean | {
        [key: string]: boolean;
    } | undefined;
    oldLayerData: any;
    data: any;
    dataContainer: DataContainerInterface;
    filteredIndex?: Uint8ClampedArray | null | undefined;
}) => any;
/**
 * Get an arrow vector suitable to render text labels with arrow layers.
 * @param getText A candidate arrow vector to use for text labels.
 * @param getTextAccessor Text label accessor.
 */
export declare const getArrowTextVector: (candidateTextVector: arrow.Vector, getTextAccessor: ({ index }: {
    index: number;
}) => string) => arrow.Vector;
