import type { Table } from '@loaders.gl/schema';
import { parseArrowInBatches } from "./lib/parsers/parse-arrow.js";
import type { ArrowLoaderOptions } from "./exports/arrow-loader.js";
/** ArrowJS table loader */
export declare const ArrowLoader: {
    readonly parse: (arraybuffer: ArrayBuffer, options?: ArrowLoaderOptions) => Promise<Table>;
    readonly parseSync: (arraybuffer: ArrayBuffer, options?: ArrowLoaderOptions) => Table;
    readonly parseInBatches: typeof parseArrowInBatches;
    readonly dataType: import(".").ArrowTable;
    readonly batchType: never;
    readonly name: "Apache Arrow";
    readonly id: "arrow";
    readonly module: "arrow";
    readonly version: any;
    readonly category: "table";
    readonly extensions: ["arrow", "feather"];
    readonly mimeTypes: ["application/vnd.apache.arrow.file", "application/vnd.apache.arrow.stream", "application/octet-stream"];
    readonly binary: true;
    readonly tests: ["ARROW"];
    readonly options: {
        readonly arrow: {
            readonly shape: "columnar-table";
        };
    };
};
//# sourceMappingURL=arrow-loader.d.ts.map