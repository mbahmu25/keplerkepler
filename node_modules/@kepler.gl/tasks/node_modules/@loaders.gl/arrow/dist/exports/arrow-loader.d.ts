import type { LoaderOptions } from '@loaders.gl/loader-utils';
import type { ArrowTable } from "../schema/arrow-table-type.js";
/** ArrowLoader options */
export type ArrowLoaderOptions = LoaderOptions & {
    /** ArrowLoader options */
    arrow?: {
        /** Shape of returned data */
        shape: 'arrow-table' | 'columnar-table' | 'array-row-table' | 'object-row-table';
        /** Debounce time between batches (prevent excessive numbers of small batches) */
        batchDebounceMs?: number;
        /** Override the URL to the worker bundle (by default loads from unpkg.com) */
        workerUrl?: string;
    };
};
/** ArrowJS table loader */
export declare const ArrowWorkerLoader: {
    readonly dataType: ArrowTable;
    readonly batchType: never;
    readonly name: "Apache Arrow";
    readonly id: "arrow";
    readonly module: "arrow";
    readonly version: any;
    readonly category: "table";
    readonly extensions: ["arrow", "feather"];
    readonly mimeTypes: ["application/vnd.apache.arrow.file", "application/vnd.apache.arrow.stream", "application/octet-stream"];
    readonly binary: true;
    readonly tests: ["ARROW"];
    readonly options: {
        readonly arrow: {
            readonly shape: "columnar-table";
        };
    };
};
//# sourceMappingURL=arrow-loader.d.ts.map