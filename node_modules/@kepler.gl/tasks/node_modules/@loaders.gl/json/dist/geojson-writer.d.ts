import { type WriterOptions } from '@loaders.gl/loader-utils';
import type { Table, TableBatch } from '@loaders.gl/schema';
export type GeoJSONWriterOptions = WriterOptions & {
    geojson?: {
        featureArray?: boolean;
        geometryColumn?: number | null;
    };
    chunkSize?: number;
};
export declare const GeoJSONWriter: {
    readonly id: "geojson";
    readonly version: "latest";
    readonly module: "geojson";
    readonly name: "GeoJSON";
    readonly extensions: ["geojson"];
    readonly mimeTypes: ["application/geo+json"];
    readonly text: true;
    readonly options: {
        readonly geojson: {
            readonly featureArray: false;
            readonly geometryColumn: null;
        };
    };
    readonly encode: (table: Table, options: GeoJSONWriterOptions) => Promise<ArrayBuffer>;
    readonly encodeInBatches: (tableIterator: AsyncIterable<TableBatch> | Iterable<TableBatch>, options: GeoJSONWriterOptions | undefined) => AsyncIterable<ArrayBuffer>;
};
//# sourceMappingURL=geojson-writer.d.ts.map