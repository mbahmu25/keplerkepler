import type { WriterOptions } from '@loaders.gl/loader-utils';
import type { Table } from '@loaders.gl/schema';
export type JSONWriterOptions = WriterOptions & {
    json?: {
        shape?: 'object-row-table' | 'array-row-table';
        wrapper?: (table: TableJSON) => unknown;
    };
};
type RowArray = unknown[];
type RowObject = {
    [key: string]: unknown;
};
type TableJSON = RowArray[] | RowObject[];
export declare const JSONWriter: {
    readonly id: "json";
    readonly version: "latest";
    readonly module: "json";
    readonly name: "JSON";
    readonly extensions: ["json"];
    readonly mimeTypes: ["application/json"];
    readonly options: {};
    readonly text: true;
    readonly encode: (table: Table, options: JSONWriterOptions) => Promise<ArrayBufferLike>;
    readonly encodeTextSync: (table: Table, options: JSONWriterOptions) => string;
};
export {};
//# sourceMappingURL=json-writer.d.ts.map