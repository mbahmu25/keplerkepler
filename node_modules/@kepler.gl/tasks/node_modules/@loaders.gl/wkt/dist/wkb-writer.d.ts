import type { WriterOptions } from '@loaders.gl/loader-utils';
import type { Geometry, Feature } from '@loaders.gl/schema';
export type WKBWriterOptions = WriterOptions & {
    wkb?: {
        /** Does the GeoJSON input have Z values? */
        hasZ?: boolean;
        /** Does the GeoJSON input have M values? */
        hasM?: boolean;
        /** Spatial reference for input GeoJSON */
        srid?: any;
    };
};
/**
 * WKB exporter
 */
export declare const WKBWriter: {
    readonly name: "WKB (Well Known Binary)";
    readonly id: "wkb";
    readonly module: "wkt";
    readonly version: any;
    readonly extensions: ["wkb"];
    readonly options: {
        readonly wkb: {
            readonly hasZ: false;
            readonly hasM: false;
        };
    };
    readonly encode: (data: Geometry | Feature, options?: WriterOptions) => Promise<ArrayBuffer>;
    readonly encodeSync: (data: Geometry | Feature, options?: WriterOptions) => ArrayBuffer;
};
//# sourceMappingURL=wkb-writer.d.ts.map