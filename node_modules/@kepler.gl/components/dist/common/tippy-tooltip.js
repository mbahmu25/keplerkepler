"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("@tippyjs/react"));
var _react2 = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _context = require("../context");
var _excluded = ["children", "arrow", "isLightTheme"],
  _excluded2 = ["children", "render", "duration", "arrow", "isLightTheme", "className"];
var _templateObject, _templateObject2; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var TippyArrow = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  position: absolute;\n  width: 15px;\n  height: 15px;\n  fill: ", ";\n  text-align: initial;\n\n  > svg {\n    position: absolute;\n  }\n"])), function (props) {
  return props.theme.tooltipBg;
});

// eslint-disable-next-line @typescript-eslint/no-unused-vars
var TippyTooltipContent = (0, _styledComponents["default"])(function (_ref) {
  var children = _ref.children,
    arrow = _ref.arrow,
    isLightTheme = _ref.isLightTheme,
    props = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  return /*#__PURE__*/_react2["default"].createElement("div", props, children, arrow ? /*#__PURE__*/_react2["default"].createElement(TippyArrow, {
    className: "svg-arrow",
    "data-popper-arrow": ""
  }, /*#__PURE__*/_react2["default"].createElement("svg", {
    width: 15,
    height: 15
  }, /*#__PURE__*/_react2["default"].createElement("path", {
    d: "M2,7.5 7.5,2 13,7.5Z"
  }))) : null);
})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  font-family: ", ";\n  font-size: ", ";\n  font-weight: 400;\n  padding: 7px 18px;\n  box-shadow: ", ";\n  background-color: ", ";\n  color: ", ";\n  border-radius: ", ";\n  ", "\n"])), function (props) {
  return props.theme.fontFamily;
}, function (props) {
  return props.theme.tooltipFontSize;
}, function (props) {
  return props.isLightTheme ? props.theme.panelBoxShadow : props.theme.tooltipBoxShadow;
}, function (props) {
  return props.isLightTheme ? props.theme.tooltipBgLT : props.theme.tooltipBg;
}, function (props) {
  return props.isLightTheme ? props.theme.tooltipColorLT : props.theme.tooltipColor;
}, function (props) {
  return props.theme.primaryBtnRadius;
}, function (props) {
  return props.arrow ? "\n    &[data-placement^='top'] > .svg-arrow {\n      bottom: 0;\n      &::after,\n      > svg {\n        top: 7px;\n        transform: rotate(180deg);\n      }\n    }\n\n    &[data-placement^='bottom'] > .svg-arrow {\n      top: 0;\n      > svg {\n        bottom: 7px;\n      }\n    }\n\n    &[data-placement^='left'] > .svg-arrow {\n      right: 0;\n      &::after,\n      > svg {\n        transform: rotate(90deg);\n        left: 7px;\n      }\n    }\n\n    &[data-placement^='right'] > .svg-arrow {\n      left: 0;\n      &::after,\n      > svg {\n        transform: rotate(-90deg);\n        right: 7px;\n      }\n    }\n  " : '';
});
var TippyTooltip = function TippyTooltip(_ref2) {
  var children = _ref2.children,
    _render = _ref2.render,
    _ref2$duration = _ref2.duration,
    duration = _ref2$duration === void 0 ? 200 : _ref2$duration,
    _ref2$arrow = _ref2.arrow,
    arrow = _ref2$arrow === void 0 ? true : _ref2$arrow,
    _ref2$isLightTheme = _ref2.isLightTheme,
    isLightTheme = _ref2$isLightTheme === void 0 ? false : _ref2$isLightTheme,
    className = _ref2.className,
    rest = (0, _objectWithoutProperties2["default"])(_ref2, _excluded2);
  var _useState = (0, _react2.useState)(0),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    opacity = _useState2[0],
    setOpacity = _useState2[1];
  var _useState3 = (0, _react2.useState)(null),
    _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
    timer = _useState4[0],
    setTimer = _useState4[1];
  function onMount() {
    setOpacity(1);
    if (timer) {
      // @ts-ignore
      clearTimeout(timer);
    }
  }
  function onHide(instance) {
    var unmount = instance.unmount;
    var timeout = setTimeout(function () {
      var _instance$state;
      if (!((_instance$state = instance.state) !== null && _instance$state !== void 0 && _instance$state.isDestroyed)) {
        unmount();
      }
    }, duration[0] || duration);
    // @ts-ignore
    setTimer(timeout);
    setOpacity(0);
  }
  var skipNextShow = (0, _react2.useRef)(false);
  var onTrigger = (0, _react2.useCallback)(function (instance, event) {
    if (event instanceof MouseEvent && event.buttons > 0) {
      // if the user is holding down the mouse button, e.g. while dragging, we won't show the tooltip
      skipNextShow.current = true;
    } else {
      skipNextShow.current = false;
    }
  }, []);
  var onShow = (0, _react2.useCallback)(function () {
    if (skipNextShow.current) {
      return false;
    }
    return;
  }, []);
  return /*#__PURE__*/_react2["default"].createElement(_context.RootContext.Consumer, null, function (context) {
    return /*#__PURE__*/_react2["default"].createElement(_react["default"], (0, _extends2["default"])({}, rest, {
      // Using document.body would result in the CSS styles not being applied
      // to the tooltip content when embedding the map widget as a Shadow DOM element.
      appendTo: (context === null || context === void 0 ? void 0 : context.current) || 'parent',
      animation: true,
      render: function render(attrs) {
        return /*#__PURE__*/_react2["default"].createElement(TippyTooltipContent, (0, _extends2["default"])({}, attrs, {
          className: className,
          style: {
            opacity: opacity,
            transition: "opacity ".concat(duration, "ms")
          },
          arrow: arrow,
          isLightTheme: isLightTheme
        }), _render === null || _render === void 0 ? void 0 : _render(attrs));
      },
      onMount: onMount,
      onHide: onHide,
      onTrigger: onTrigger,
      onShow: onShow
    }), children);
  });
};
var _default = exports["default"] = TippyTooltip;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,