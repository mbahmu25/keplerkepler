"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var Wrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: inline-block;\n  color: ", ";\n  font-size: 12px;\n  text-decoration: underline;\n\n  &:hover {\n    cursor: pointer;\n    font-weight: 500;\n  }\n"])), function (props) {
  return props.theme.textColorLT;
});
var inputStyle = {
  display: 'none'
};
/*
Inspired by https://github.com/okonet/react-dropzone/blob/master/src/index.js
*/
/** @type {typeof import('./upload-button').UploadButton} */
var UploadButton = function UploadButton(_ref) {
  var onUpload = _ref.onUpload,
    children = _ref.children;
  var _fileInput = (0, _react.useRef)(null);
  var _onClick = (0, _react.useCallback)(function () {
    if (_fileInput.current) {
      // @ts-ignore create ref with useRef<HTMLInputElement>
      _fileInput.current.value = null;
      // @ts-ignore create ref with useRef<HTMLInputElement>
      _fileInput.current.click();
    }
  }, [_fileInput]);
  var _onChange = (0, _react.useCallback)(function (event) {
    var files = event.target.files;
    if (!files) {
      return;
    }
    onUpload(files, event);
  }, [onUpload]);
  return /*#__PURE__*/_react["default"].createElement(Wrapper, {
    className: "upload-button"
  }, /*#__PURE__*/_react["default"].createElement("input", {
    type: "file",
    ref: _fileInput,
    style: inputStyle,
    onChange: _onChange,
    className: "upload-button-input"
  }), /*#__PURE__*/_react["default"].createElement("span", {
    className: "file-upload__upload-button-span",
    onClick: _onClick
  }, children));
};
var _default = exports["default"] = UploadButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfdGVtcGxhdGVPYmplY3QiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJXcmFwcGVyIiwic3R5bGVkIiwiZGl2IiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbDIiLCJwcm9wcyIsInRoZW1lIiwidGV4dENvbG9yTFQiLCJpbnB1dFN0eWxlIiwiZGlzcGxheSIsIlVwbG9hZEJ1dHRvbiIsIl9yZWYiLCJvblVwbG9hZCIsImNoaWxkcmVuIiwiX2ZpbGVJbnB1dCIsInVzZVJlZiIsIl9vbkNsaWNrIiwidXNlQ2FsbGJhY2siLCJjdXJyZW50IiwidmFsdWUiLCJjbGljayIsIl9vbkNoYW5nZSIsImV2ZW50IiwiZmlsZXMiLCJ0YXJnZXQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwidHlwZSIsInJlZiIsInN0eWxlIiwib25DaGFuZ2UiLCJvbkNsaWNrIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi9maWxlLXVwbG9hZGVyL3VwbG9hZC1idXR0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrLCB1c2VSZWZ9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS50ZXh0Q29sb3JMVH07XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5cbiAgJjpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cbmA7XG5jb25zdCBpbnB1dFN0eWxlID0ge2Rpc3BsYXk6ICdub25lJ307XG5cbmludGVyZmFjZSBVcGxvYWRCdXR0b25Qcm9wcyB7XG4gIG9uVXBsb2FkOiAoZmlsZXM6IEZpbGVMaXN0LCBldmVudDogYW55KSA9PiB2b2lkO1xuICBjaGlsZHJlbj86IFJlYWN0LlJlYWN0Tm9kZTtcbn1cblxuLypcbkluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9va29uZXQvcmVhY3QtZHJvcHpvbmUvYmxvYi9tYXN0ZXIvc3JjL2luZGV4LmpzXG4qL1xuLyoqIEB0eXBlIHt0eXBlb2YgaW1wb3J0KCcuL3VwbG9hZC1idXR0b24nKS5VcGxvYWRCdXR0b259ICovXG5jb25zdCBVcGxvYWRCdXR0b246IFJlYWN0LkZDPFVwbG9hZEJ1dHRvblByb3BzPiA9ICh7b25VcGxvYWQsIGNoaWxkcmVufSkgPT4ge1xuICBjb25zdCBfZmlsZUlucHV0ID0gdXNlUmVmKG51bGwpO1xuXG4gIGNvbnN0IF9vbkNsaWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChfZmlsZUlucHV0LmN1cnJlbnQpIHtcbiAgICAgIC8vIEB0cy1pZ25vcmUgY3JlYXRlIHJlZiB3aXRoIHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PlxuICAgICAgX2ZpbGVJbnB1dC5jdXJyZW50LnZhbHVlID0gbnVsbDtcbiAgICAgIC8vIEB0cy1pZ25vcmUgY3JlYXRlIHJlZiB3aXRoIHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PlxuICAgICAgX2ZpbGVJbnB1dC5jdXJyZW50LmNsaWNrKCk7XG4gICAgfVxuICB9LCBbX2ZpbGVJbnB1dF0pO1xuXG4gIGNvbnN0IF9vbkNoYW5nZSA9IHVzZUNhbGxiYWNrKFxuICAgIGV2ZW50ID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgdGFyZ2V0OiB7ZmlsZXN9XG4gICAgICB9ID0gZXZlbnQ7XG5cbiAgICAgIGlmICghZmlsZXMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBvblVwbG9hZChmaWxlcywgZXZlbnQpO1xuICAgIH0sXG4gICAgW29uVXBsb2FkXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPFdyYXBwZXIgY2xhc3NOYW1lPVwidXBsb2FkLWJ1dHRvblwiPlxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJmaWxlXCJcbiAgICAgICAgcmVmPXtfZmlsZUlucHV0fVxuICAgICAgICBzdHlsZT17aW5wdXRTdHlsZX1cbiAgICAgICAgb25DaGFuZ2U9e19vbkNoYW5nZX1cbiAgICAgICAgY2xhc3NOYW1lPVwidXBsb2FkLWJ1dHRvbi1pbnB1dFwiXG4gICAgICAvPlxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZmlsZS11cGxvYWRfX3VwbG9hZC1idXR0b24tc3BhblwiIG9uQ2xpY2s9e19vbkNsaWNrfT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9zcGFuPlxuICAgIDwvV3JhcHBlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFVwbG9hZEJ1dHRvbjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsaUJBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUF1QyxJQUFBRyxlQUFBLEVBSnZDO0FBQ0E7QUFBQSxTQUFBQyx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxtQkFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQSxXQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxLQUFBRixDQUFBO0FBQUEsU0FBQU4sd0JBQUFNLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUEsZUFBQUEsQ0FBQSxnQkFBQUssT0FBQSxDQUFBTCxDQUFBLDBCQUFBQSxDQUFBLHNCQUFBQSxDQUFBLFFBQUFHLENBQUEsR0FBQUosd0JBQUEsQ0FBQUcsQ0FBQSxPQUFBQyxDQUFBLElBQUFBLENBQUEsQ0FBQUcsR0FBQSxDQUFBTixDQUFBLFVBQUFHLENBQUEsQ0FBQUksR0FBQSxDQUFBUCxDQUFBLE9BQUFRLENBQUEsS0FBQUMsU0FBQSxVQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFFLHdCQUFBLFdBQUFDLENBQUEsSUFBQWQsQ0FBQSxvQkFBQWMsQ0FBQSxPQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWhCLENBQUEsRUFBQWMsQ0FBQSxTQUFBRyxDQUFBLEdBQUFQLENBQUEsR0FBQUMsTUFBQSxDQUFBRSx3QkFBQSxDQUFBYixDQUFBLEVBQUFjLENBQUEsVUFBQUcsQ0FBQSxLQUFBQSxDQUFBLENBQUFWLEdBQUEsSUFBQVUsQ0FBQSxDQUFBQyxHQUFBLElBQUFQLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSixDQUFBLEVBQUFNLENBQUEsRUFBQUcsQ0FBQSxJQUFBVCxDQUFBLENBQUFNLENBQUEsSUFBQWQsQ0FBQSxDQUFBYyxDQUFBLFlBQUFOLENBQUEsY0FBQVIsQ0FBQSxFQUFBRyxDQUFBLElBQUFBLENBQUEsQ0FBQWUsR0FBQSxDQUFBbEIsQ0FBQSxFQUFBUSxDQUFBLEdBQUFBLENBQUE7QUFLQSxJQUFNVyxPQUFPLEdBQUdDLDRCQUFNLENBQUNDLEdBQUcsQ0FBQXZCLGVBQUEsS0FBQUEsZUFBQSxPQUFBd0IsdUJBQUEscUxBRWYsVUFBQUMsS0FBSztFQUFBLE9BQUlBLEtBQUssQ0FBQ0MsS0FBSyxDQUFDQyxXQUFXO0FBQUEsRUFRMUM7QUFDRCxJQUFNQyxVQUFVLEdBQUc7RUFBQ0MsT0FBTyxFQUFFO0FBQU0sQ0FBQztBQU9wQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1DLFlBQXlDLEdBQUcsU0FBNUNBLFlBQXlDQSxDQUFBQyxJQUFBLEVBQTZCO0VBQUEsSUFBeEJDLFFBQVEsR0FBQUQsSUFBQSxDQUFSQyxRQUFRO0lBQUVDLFFBQVEsR0FBQUYsSUFBQSxDQUFSRSxRQUFRO0VBQ3BFLElBQU1DLFVBQVUsR0FBRyxJQUFBQyxhQUFNLEVBQUMsSUFBSSxDQUFDO0VBRS9CLElBQU1DLFFBQVEsR0FBRyxJQUFBQyxrQkFBVyxFQUFDLFlBQU07SUFDakMsSUFBSUgsVUFBVSxDQUFDSSxPQUFPLEVBQUU7TUFDdEI7TUFDQUosVUFBVSxDQUFDSSxPQUFPLENBQUNDLEtBQUssR0FBRyxJQUFJO01BQy9CO01BQ0FMLFVBQVUsQ0FBQ0ksT0FBTyxDQUFDRSxLQUFLLENBQUMsQ0FBQztJQUM1QjtFQUNGLENBQUMsRUFBRSxDQUFDTixVQUFVLENBQUMsQ0FBQztFQUVoQixJQUFNTyxTQUFTLEdBQUcsSUFBQUosa0JBQVcsRUFDM0IsVUFBQUssS0FBSyxFQUFJO0lBQ1AsSUFDV0MsS0FBSyxHQUNaRCxLQUFLLENBRFBFLE1BQU0sQ0FBR0QsS0FBSztJQUdoQixJQUFJLENBQUNBLEtBQUssRUFBRTtNQUNWO0lBQ0Y7SUFFQVgsUUFBUSxDQUFDVyxLQUFLLEVBQUVELEtBQUssQ0FBQztFQUN4QixDQUFDLEVBQ0QsQ0FBQ1YsUUFBUSxDQUNYLENBQUM7RUFFRCxvQkFDRXJDLE1BQUEsWUFBQWtELGFBQUEsQ0FBQ3hCLE9BQU87SUFBQ3lCLFNBQVMsRUFBQztFQUFlLGdCQUNoQ25ELE1BQUEsWUFBQWtELGFBQUE7SUFDRUUsSUFBSSxFQUFDLE1BQU07SUFDWEMsR0FBRyxFQUFFZCxVQUFXO0lBQ2hCZSxLQUFLLEVBQUVyQixVQUFXO0lBQ2xCc0IsUUFBUSxFQUFFVCxTQUFVO0lBQ3BCSyxTQUFTLEVBQUM7RUFBcUIsQ0FDaEMsQ0FBQyxlQUNGbkQsTUFBQSxZQUFBa0QsYUFBQTtJQUFNQyxTQUFTLEVBQUMsaUNBQWlDO0lBQUNLLE9BQU8sRUFBRWY7RUFBUyxHQUNqRUgsUUFDRyxDQUNDLENBQUM7QUFFZCxDQUFDO0FBQUMsSUFBQW1CLFFBQUEsR0FBQUMsT0FBQSxjQUVhdkIsWUFBWSIsImlnbm9yZUxpc3QiOltdfQ==