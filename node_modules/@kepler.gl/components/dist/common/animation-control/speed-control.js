"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _iconButton = _interopRequireDefault(require("../icon-button"));
var _styles = require("@kepler.gl/styles");
var _utils = require("@kepler.gl/utils");
var _tippyTooltip = _interopRequireDefault(require("../tippy-tooltip"));
var _templateObject, _templateObject2; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var StyledSpeedControl = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  align-items: center;\n\n  .animation-control__speed-slider {\n    left: 0;\n    ", "\n  }\n"])), _styles.media.palm(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n      left: 60px;\n    "]))));
var PRECISE_SPEED_ROUND = 1;
function SpeedControlFactory(AnimationSpeedSlider) {
  var SpeedControl = function SpeedControl(_ref) {
    var showAnimationWindowControl = _ref.showAnimationWindowControl,
      updateAnimationSpeed = _ref.updateAnimationSpeed,
      btnStyle = _ref.btnStyle,
      hideAndShowSpeedControl = _ref.hideAndShowSpeedControl,
      buttonHeight = _ref.buttonHeight,
      playbackIcons = _ref.playbackIcons,
      speed = _ref.speed,
      isSpeedControlVisible = _ref.isSpeedControlVisible;
    return showAnimationWindowControl || !updateAnimationSpeed ? null : /*#__PURE__*/_react["default"].createElement(StyledSpeedControl, null, /*#__PURE__*/_react["default"].createElement(_tippyTooltip["default"], {
      placement: "top",
      delay: [500, 0],
      render: function render() {
        return /*#__PURE__*/_react["default"].createElement("span", null, (0, _utils.preciseRound)(speed, PRECISE_SPEED_ROUND), "x");
      }
    }, /*#__PURE__*/_react["default"].createElement(_iconButton["default"], (0, _extends2["default"])({
      className: "playback-control-button"
    }, btnStyle, {
      onClick: hideAndShowSpeedControl
    }), /*#__PURE__*/_react["default"].createElement(playbackIcons.speed, {
      height: buttonHeight
    }))), isSpeedControlVisible ? /*#__PURE__*/_react["default"].createElement(AnimationSpeedSlider, {
      onHide: hideAndShowSpeedControl,
      updateAnimationSpeed: updateAnimationSpeed,
      speed: speed
    }) : null);
  };
  return SpeedControl;
}
var _default = exports["default"] = SpeedControlFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zdHlsZWRDb21wb25lbnRzIiwiX2ljb25CdXR0b24iLCJfc3R5bGVzIiwiX3V0aWxzIiwiX3RpcHB5VG9vbHRpcCIsIl90ZW1wbGF0ZU9iamVjdCIsIl90ZW1wbGF0ZU9iamVjdDIiLCJTdHlsZWRTcGVlZENvbnRyb2wiLCJzdHlsZWQiLCJkaXYiLCJfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsMiIsIm1lZGlhIiwicGFsbSIsIlBSRUNJU0VfU1BFRURfUk9VTkQiLCJTcGVlZENvbnRyb2xGYWN0b3J5IiwiQW5pbWF0aW9uU3BlZWRTbGlkZXIiLCJTcGVlZENvbnRyb2wiLCJfcmVmIiwic2hvd0FuaW1hdGlvbldpbmRvd0NvbnRyb2wiLCJ1cGRhdGVBbmltYXRpb25TcGVlZCIsImJ0blN0eWxlIiwiaGlkZUFuZFNob3dTcGVlZENvbnRyb2wiLCJidXR0b25IZWlnaHQiLCJwbGF5YmFja0ljb25zIiwic3BlZWQiLCJpc1NwZWVkQ29udHJvbFZpc2libGUiLCJjcmVhdGVFbGVtZW50IiwicGxhY2VtZW50IiwiZGVsYXkiLCJyZW5kZXIiLCJwcmVjaXNlUm91bmQiLCJfZXh0ZW5kczIiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwiaGVpZ2h0Iiwib25IaWRlIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi9hbmltYXRpb24tY29udHJvbC9zcGVlZC1jb250cm9sLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgSWNvbkJ1dHRvbiBmcm9tICcuLi9pY29uLWJ1dHRvbic7XG5pbXBvcnQge21lZGlhfSBmcm9tICdAa2VwbGVyLmdsL3N0eWxlcyc7XG5pbXBvcnQge3ByZWNpc2VSb3VuZH0gZnJvbSAnQGtlcGxlci5nbC91dGlscyc7XG5pbXBvcnQgVGlwcHlUb29sdGlwIGZyb20gJy4uL3RpcHB5LXRvb2x0aXAnO1xuXG5jb25zdCBTdHlsZWRTcGVlZENvbnRyb2wgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIC5hbmltYXRpb24tY29udHJvbF9fc3BlZWQtc2xpZGVyIHtcbiAgICBsZWZ0OiAwO1xuICAgICR7bWVkaWEucGFsbWBcbiAgICAgIGxlZnQ6IDYwcHg7XG4gICAgYH1cbiAgfVxuYDtcblxuY29uc3QgUFJFQ0lTRV9TUEVFRF9ST1VORCA9IDE7XG5cbmZ1bmN0aW9uIFNwZWVkQ29udHJvbEZhY3RvcnkoQW5pbWF0aW9uU3BlZWRTbGlkZXIpIHtcbiAgY29uc3QgU3BlZWRDb250cm9sID0gKHtcbiAgICBzaG93QW5pbWF0aW9uV2luZG93Q29udHJvbCxcbiAgICB1cGRhdGVBbmltYXRpb25TcGVlZCxcbiAgICBidG5TdHlsZSxcbiAgICBoaWRlQW5kU2hvd1NwZWVkQ29udHJvbCxcbiAgICBidXR0b25IZWlnaHQsXG4gICAgcGxheWJhY2tJY29ucyxcbiAgICBzcGVlZCxcbiAgICBpc1NwZWVkQ29udHJvbFZpc2libGVcbiAgfSkgPT4ge1xuICAgIHJldHVybiBzaG93QW5pbWF0aW9uV2luZG93Q29udHJvbCB8fCAhdXBkYXRlQW5pbWF0aW9uU3BlZWQgPyBudWxsIDogKFxuICAgICAgPFN0eWxlZFNwZWVkQ29udHJvbD5cbiAgICAgICAgPFRpcHB5VG9vbHRpcFxuICAgICAgICAgIHBsYWNlbWVudD1cInRvcFwiXG4gICAgICAgICAgZGVsYXk9e1s1MDAsIDBdfVxuICAgICAgICAgIHJlbmRlcj17KCkgPT4gPHNwYW4+e3ByZWNpc2VSb3VuZChzcGVlZCwgUFJFQ0lTRV9TUEVFRF9ST1VORCl9eDwvc3Bhbj59XG4gICAgICAgID5cbiAgICAgICAgICA8SWNvbkJ1dHRvblxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicGxheWJhY2stY29udHJvbC1idXR0b25cIlxuICAgICAgICAgICAgey4uLmJ0blN0eWxlfVxuICAgICAgICAgICAgb25DbGljaz17aGlkZUFuZFNob3dTcGVlZENvbnRyb2x9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHBsYXliYWNrSWNvbnMuc3BlZWQgaGVpZ2h0PXtidXR0b25IZWlnaHR9IC8+XG4gICAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgICA8L1RpcHB5VG9vbHRpcD5cbiAgICAgICAge2lzU3BlZWRDb250cm9sVmlzaWJsZSA/IChcbiAgICAgICAgICA8QW5pbWF0aW9uU3BlZWRTbGlkZXJcbiAgICAgICAgICAgIG9uSGlkZT17aGlkZUFuZFNob3dTcGVlZENvbnRyb2x9XG4gICAgICAgICAgICB1cGRhdGVBbmltYXRpb25TcGVlZD17dXBkYXRlQW5pbWF0aW9uU3BlZWR9XG4gICAgICAgICAgICBzcGVlZD17c3BlZWR9XG4gICAgICAgICAgLz5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L1N0eWxlZFNwZWVkQ29udHJvbD5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBTcGVlZENvbnRyb2w7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNwZWVkQ29udHJvbEZhY3Rvcnk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGlCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxXQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxPQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxNQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxhQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFBNEMsSUFBQU0sZUFBQSxFQUFBQyxnQkFBQSxFQVI1QztBQUNBO0FBU0EsSUFBTUMsa0JBQWtCLEdBQUdDLDRCQUFNLENBQUNDLEdBQUcsQ0FBQUosZUFBQSxLQUFBQSxlQUFBLE9BQUFLLHVCQUFBLHNJQU0vQkMsYUFBSyxDQUFDQyxJQUFJLENBQUFOLGdCQUFBLEtBQUFBLGdCQUFBLE9BQUFJLHVCQUFBLDhDQUlmO0FBRUQsSUFBTUcsbUJBQW1CLEdBQUcsQ0FBQztBQUU3QixTQUFTQyxtQkFBbUJBLENBQUNDLG9CQUFvQixFQUFFO0VBQ2pELElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFBQyxJQUFBLEVBU1o7SUFBQSxJQVJKQywwQkFBMEIsR0FBQUQsSUFBQSxDQUExQkMsMEJBQTBCO01BQzFCQyxvQkFBb0IsR0FBQUYsSUFBQSxDQUFwQkUsb0JBQW9CO01BQ3BCQyxRQUFRLEdBQUFILElBQUEsQ0FBUkcsUUFBUTtNQUNSQyx1QkFBdUIsR0FBQUosSUFBQSxDQUF2QkksdUJBQXVCO01BQ3ZCQyxZQUFZLEdBQUFMLElBQUEsQ0FBWkssWUFBWTtNQUNaQyxhQUFhLEdBQUFOLElBQUEsQ0FBYk0sYUFBYTtNQUNiQyxLQUFLLEdBQUFQLElBQUEsQ0FBTE8sS0FBSztNQUNMQyxxQkFBcUIsR0FBQVIsSUFBQSxDQUFyQlEscUJBQXFCO0lBRXJCLE9BQU9QLDBCQUEwQixJQUFJLENBQUNDLG9CQUFvQixHQUFHLElBQUksZ0JBQy9EdEIsTUFBQSxZQUFBNkIsYUFBQSxDQUFDbkIsa0JBQWtCLHFCQUNqQlYsTUFBQSxZQUFBNkIsYUFBQSxDQUFDdEIsYUFBQSxXQUFZO01BQ1h1QixTQUFTLEVBQUMsS0FBSztNQUNmQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFFO01BQ2hCQyxNQUFNLEVBQUUsU0FBUkEsTUFBTUEsQ0FBQTtRQUFBLG9CQUFRaEMsTUFBQSxZQUFBNkIsYUFBQSxlQUFPLElBQUFJLG1CQUFZLEVBQUNOLEtBQUssRUFBRVgsbUJBQW1CLENBQUMsRUFBQyxHQUFPLENBQUM7TUFBQTtJQUFDLGdCQUV2RWhCLE1BQUEsWUFBQTZCLGFBQUEsQ0FBQ3pCLFdBQUEsV0FBVSxNQUFBOEIsU0FBQTtNQUNUQyxTQUFTLEVBQUM7SUFBeUIsR0FDL0JaLFFBQVE7TUFDWmEsT0FBTyxFQUFFWjtJQUF3QixpQkFFakN4QixNQUFBLFlBQUE2QixhQUFBLENBQUNILGFBQWEsQ0FBQ0MsS0FBSztNQUFDVSxNQUFNLEVBQUVaO0lBQWEsQ0FBRSxDQUNsQyxDQUNBLENBQUMsRUFDZEcscUJBQXFCLGdCQUNwQjVCLE1BQUEsWUFBQTZCLGFBQUEsQ0FBQ1gsb0JBQW9CO01BQ25Cb0IsTUFBTSxFQUFFZCx1QkFBd0I7TUFDaENGLG9CQUFvQixFQUFFQSxvQkFBcUI7TUFDM0NLLEtBQUssRUFBRUE7SUFBTSxDQUNkLENBQUMsR0FDQSxJQUNjLENBQ3JCO0VBQ0gsQ0FBQztFQUVELE9BQU9SLFlBQVk7QUFDckI7QUFBQyxJQUFBb0IsUUFBQSxHQUFBQyxPQUFBLGNBRWN2QixtQkFBbUIiLCJpZ25vcmVMaXN0IjpbXX0=