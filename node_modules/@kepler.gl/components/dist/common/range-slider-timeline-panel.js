"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _rangeSliderTimeline = _interopRequireDefault(require("./range-slider-timeline"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function RangeSliderSubAnimationPanelFactory(RangeSliderTimeline) {
  var RangeSliderSubAnimationPanel = function RangeSliderSubAnimationPanel(_ref) {
    var subAnimations = _ref.subAnimations,
      scaledValue = _ref.scaledValue,
      style = _ref.style;
    var containerStyle = (0, _react.useMemo)(function () {
      return _objectSpread({
        display: 'flex',
        justifyContent: 'spaceBetween',
        flexWrap: 'wrap'
      }, style);
    }, [style]);
    return /*#__PURE__*/_react["default"].createElement("div", {
      style: containerStyle
    }, subAnimations.map(function (subAnimation, index) {
      return /*#__PURE__*/_react["default"].createElement(RangeSliderTimeline, {
        key: index,
        subAnimation: subAnimation,
        scaledValue: scaledValue
      });
    }));
  };
  return RangeSliderSubAnimationPanel;
}
RangeSliderSubAnimationPanelFactory.deps = [_rangeSliderTimeline["default"]];
var _default = exports["default"] = RangeSliderSubAnimationPanelFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmFuZ2VTbGlkZXJUaW1lbGluZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJvd25LZXlzIiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJSYW5nZVNsaWRlclN1YkFuaW1hdGlvblBhbmVsRmFjdG9yeSIsIlJhbmdlU2xpZGVyVGltZWxpbmUiLCJSYW5nZVNsaWRlclN1YkFuaW1hdGlvblBhbmVsIiwiX3JlZiIsInN1YkFuaW1hdGlvbnMiLCJzY2FsZWRWYWx1ZSIsInN0eWxlIiwiY29udGFpbmVyU3R5bGUiLCJ1c2VNZW1vIiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiZmxleFdyYXAiLCJjcmVhdGVFbGVtZW50IiwibWFwIiwic3ViQW5pbWF0aW9uIiwiaW5kZXgiLCJrZXkiLCJkZXBzIiwiUmFuZ2VTbGlkZXJUaW1lbGluZUZhY3RvcnkiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbW9uL3JhbmdlLXNsaWRlci10aW1lbGluZS1wYW5lbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7dXNlTWVtb30gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJhbmdlU2xpZGVyVGltZWxpbmVGYWN0b3J5IGZyb20gJy4vcmFuZ2Utc2xpZGVyLXRpbWVsaW5lJztcblxuZnVuY3Rpb24gUmFuZ2VTbGlkZXJTdWJBbmltYXRpb25QYW5lbEZhY3RvcnkoUmFuZ2VTbGlkZXJUaW1lbGluZSkge1xuICBjb25zdCBSYW5nZVNsaWRlclN1YkFuaW1hdGlvblBhbmVsID0gKHtzdWJBbmltYXRpb25zLCBzY2FsZWRWYWx1ZSwgc3R5bGV9KSA9PiB7XG4gICAgY29uc3QgY29udGFpbmVyU3R5bGUgPSB1c2VNZW1vKFxuICAgICAgKCkgPT4gKHtcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlQmV0d2VlbicsXG4gICAgICAgIGZsZXhXcmFwOiAnd3JhcCcsXG4gICAgICAgIC4uLnN0eWxlXG4gICAgICB9KSxcbiAgICAgIFtzdHlsZV1cbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgc3R5bGU9e2NvbnRhaW5lclN0eWxlfT5cbiAgICAgICAge3N1YkFuaW1hdGlvbnMubWFwKChzdWJBbmltYXRpb24sIGluZGV4KSA9PiAoXG4gICAgICAgICAgPFJhbmdlU2xpZGVyVGltZWxpbmUga2V5PXtpbmRleH0gc3ViQW5pbWF0aW9uPXtzdWJBbmltYXRpb259IHNjYWxlZFZhbHVlPXtzY2FsZWRWYWx1ZX0gLz5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBSYW5nZVNsaWRlclN1YkFuaW1hdGlvblBhbmVsO1xufVxuXG5SYW5nZVNsaWRlclN1YkFuaW1hdGlvblBhbmVsRmFjdG9yeS5kZXBzID0gW1JhbmdlU2xpZGVyVGltZWxpbmVGYWN0b3J5XTtcblxuZXhwb3J0IGRlZmF1bHQgUmFuZ2VTbGlkZXJTdWJBbmltYXRpb25QYW5lbEZhY3Rvcnk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLG9CQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFBaUUsU0FBQUcseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFMLHdCQUFBSyxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxTQUFBSixDQUFBLGVBQUFBLENBQUEsZ0JBQUFLLE9BQUEsQ0FBQUwsQ0FBQSwwQkFBQUEsQ0FBQSxzQkFBQUEsQ0FBQSxRQUFBRyxDQUFBLEdBQUFKLHdCQUFBLENBQUFHLENBQUEsT0FBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQSxPQUFBUSxDQUFBLEtBQUFDLFNBQUEsVUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLENBQUEsU0FBQUcsQ0FBQSxHQUFBUCxDQUFBLEdBQUFDLE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQWIsQ0FBQSxFQUFBYyxDQUFBLFVBQUFHLENBQUEsS0FBQUEsQ0FBQSxDQUFBVixHQUFBLElBQUFVLENBQUEsQ0FBQUMsR0FBQSxJQUFBUCxNQUFBLENBQUFDLGNBQUEsQ0FBQUosQ0FBQSxFQUFB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