"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _base = _interopRequireDefault(require("./base"));
var _excluded = ["height", "viewBox", "predefinedClassName"]; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var FreeWindow = function FreeWindow(_ref) {
  var _ref$height = _ref.height,
    height = _ref$height === void 0 ? '16px' : _ref$height,
    _ref$viewBox = _ref.viewBox,
    viewBox = _ref$viewBox === void 0 ? '0 0 16 16' : _ref$viewBox,
    _ref$predefinedClassN = _ref.predefinedClassName,
    predefinedClassName = _ref$predefinedClassN === void 0 ? 'data-ex-icons-freewindow' : _ref$predefinedClassN,
    restProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var props = _objectSpread({
    height: height,
    viewBox: viewBox,
    predefinedClassName: predefinedClassName
  }, restProps);
  return /*#__PURE__*/_react["default"].createElement(_base["default"], props, /*#__PURE__*/_react["default"].createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M3.75665 4.67861C3.75665 4.40246 3.98051 4.17861 4.25665 4.17861H11.7433C12.0195 4.17861 12.2433 4.40246 12.2433 4.67861V11.3214C12.2433 11.5975 12.0195 11.8214 11.7433 11.8214H4.25665C3.98051 11.8214 3.75665 11.5975 3.75665 11.3214V4.67861ZM4.75665 5.17861V10.8214H11.2433V5.17861H4.75665Z"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M2.25611 10.2511C2.03735 10.4196 1.7234 10.3789 1.55487 10.1601L0.125822 8.30514C-0.0127244 8.1253 -0.0127244 7.8747 0.125822 7.69486L1.55487 5.83988C1.7234 5.62113 2.03735 5.58041 2.25611 5.74894C2.47486 5.91746 2.51558 6.23142 2.34705 6.45017L1.15308 8L2.34705 9.54983C2.51558 9.76858 2.47486 10.0825 2.25611 10.2511Z"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.7439 5.76226C13.9626 5.59374 14.2766 5.63446 14.4451 5.85321L15.8742 7.70818C16.0127 7.88802 16.0127 8.13863 15.8742 8.31847L14.4451 10.1734C14.2766 10.3922 13.9626 10.4329 13.7439 10.2644C13.5251 10.0959 13.4844 9.78191 13.6529 9.56316L14.8469 8.01333L13.6529 6.4635C13.4844 6.24474 13.5251 5.93079 13.7439 5.76226Z"
  }));
};
var _default = exports["default"] = FreeWindow;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9iYXNlIiwiX2V4Y2x1ZGVkIiwib3duS2V5cyIsImUiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5MiIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJGcmVlV2luZG93IiwiX3JlZiIsIl9yZWYkaGVpZ2h0IiwiaGVpZ2h0IiwiX3JlZiR2aWV3Qm94Iiwidmlld0JveCIsIl9yZWYkcHJlZGVmaW5lZENsYXNzTiIsInByZWRlZmluZWRDbGFzc05hbWUiLCJyZXN0UHJvcHMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyIiwicHJvcHMiLCJjcmVhdGVFbGVtZW50IiwiZmlsbFJ1bGUiLCJjbGlwUnVsZSIsImQiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbW9uL2ljb25zL2ZyZWUtd2luZG93LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEJhc2UsIHtCYXNlUHJvcHN9IGZyb20gJy4vYmFzZSc7XG5cbmNvbnN0IEZyZWVXaW5kb3cgPSAoe1xuICBoZWlnaHQgPSAnMTZweCcsXG4gIHZpZXdCb3ggPSAnMCAwIDE2IDE2JyxcbiAgcHJlZGVmaW5lZENsYXNzTmFtZSA9ICdkYXRhLWV4LWljb25zLWZyZWV3aW5kb3cnLFxuICAuLi5yZXN0UHJvcHNcbn06IFBhcnRpYWw8QmFzZVByb3BzPikgPT4ge1xuICBjb25zdCBwcm9wcyA9IHtcbiAgICBoZWlnaHQsXG4gICAgdmlld0JveCxcbiAgICBwcmVkZWZpbmVkQ2xhc3NOYW1lLFxuICAgIC4uLnJlc3RQcm9wc1xuICB9O1xuICByZXR1cm4gKFxuICAgIDxCYXNlIHsuLi5wcm9wc30+XG4gICAgICA8cGF0aFxuICAgICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgICBjbGlwUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgICBkPVwiTTMuNzU2NjUgNC42Nzg2MUMzLjc1NjY1IDQuNDAyNDYgMy45ODA1MSA0LjE3ODYxIDQuMjU2NjUgNC4xNzg2MUgxMS43NDMzQzEyLjAxOTUgNC4xNzg2MSAxMi4yNDMzIDQuNDAyNDYgMTIuMjQzMyA0LjY3ODYxVjExLjMyMTRDMTIuMjQzMyAxMS41OTc1IDEyLjAxOTUgMTEuODIxNCAxMS43NDMzIDExLjgyMTRINC4yNTY2NUMzLjk4MDUxIDExLjgyMTQgMy43NTY2NSAxMS41OTc1IDMuNzU2NjUgMTEuMzIxNFY0LjY3ODYxWk00Ljc1NjY1IDUuMTc4NjFWMTAuODIxNEgxMS4yNDMzVjUuMTc4NjFINC43NTY2NVpcIlxuICAgICAgLz5cbiAgICAgIDxwYXRoXG4gICAgICAgIGZpbGxSdWxlPVwiZXZlbm9kZFwiXG4gICAgICAgIGNsaXBSdWxlPVwiZXZlbm9kZFwiXG4gICAgICAgIGQ9XCJNMi4yNTYxMSAxMC4yNTExQzIuMDM3MzUgMTAuNDE5NiAxLjcyMzQgMTAuMzc4OSAxLjU1NDg3IDEwLjE2MDFMMC4xMjU4MjIgOC4zMDUxNEMtMC4wMTI3MjQ0IDguMTI1MyAtMC4wMTI3MjQ0IDcuODc0NyAwLjEyNTgyMiA3LjY5NDg2TDEuNTU0ODcgNS44Mzk4OEMxLjcyMzQgNS42MjExMyAyLjAzNzM1IDUuNTgwNDEgMi4yNTYxMSA1Ljc0ODk0QzIuNDc0ODYgNS45MTc0NiAyLjUxNTU4IDYuMjMxNDIgMi4zNDcwNSA2LjQ1MDE3TDEuMTUzMDggOEwyLjM0NzA1IDkuNTQ5ODNDMi41MTU1OCA5Ljc2ODU4IDIuNDc0ODYgMTAuMDgyNSAyLjI1NjExIDEwLjI1MTFaXCJcbiAgICAgIC8+XG4gICAgICA8cGF0aFxuICAgICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgICBjbGlwUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgICBkPVwiTTEzLjc0MzkgNS43NjIyNkMxMy45NjI2IDUuNTkzNzQgMTQuMjc2NiA1LjYzNDQ2IDE0LjQ0NTEgNS44NTMyMUwxNS44NzQyIDcuNzA4MThDMTYuMDEyNyA3Ljg4ODAyIDE2LjAxMjcgOC4xMzg2MyAxNS44NzQyIDguMzE4NDdMMTQuNDQ1MSAxMC4xNzM0QzE0LjI3NjYgMTAuMzkyMiAxMy45NjI2IDEwLjQzMjkgMTMuNzQzOSAxMC4yNjQ0QzEzLjUyNTEgMTAuMDk1OSAxMy40ODQ0IDkuNzgxOTEgMTMuNjUyOSA5LjU2MzE2TDE0Ljg0NjkgOC4wMTMzM0wxMy42NTI5IDYuNDYzNUMxMy40ODQ0IDYuMjQ0NzQgMTMuNTI1MSA1LjkzMDc5IDEzLjc0MzkgNS43NjIyNlpcIlxuICAgICAgLz5cbiAgICA8L0Jhc2U+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBGcmVlV2luZG93O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxLQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBdUMsSUFBQUUsU0FBQSxpREFKdkM7QUFDQTtBQUFBLFNBQUFDLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQUMsQ0FBQSxHQUFBSCxNQUFBLENBQUFFLHFCQUFBLENBQUFMLENBQUEsR0FBQUMsQ0FBQSxLQUFBSyxDQUFBLEdBQUFBLENBQUEsQ0FBQUMsTUFB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