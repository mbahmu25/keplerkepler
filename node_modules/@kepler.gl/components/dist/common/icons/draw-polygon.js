"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _base = _interopRequireDefault(require("./base"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var DrawPolygon = exports["default"] = /*#__PURE__*/function (_Component) {
  function DrawPolygon() {
    (0, _classCallCheck2["default"])(this, DrawPolygon);
    return _callSuper(this, DrawPolygon, arguments);
  }
  (0, _inherits2["default"])(DrawPolygon, _Component);
  return (0, _createClass2["default"])(DrawPolygon, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], this.props, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M5 6L13 2L22 9L21 23L2 17L5 6Z",
        stroke: "currentColor",
        fill: "transparent",
        strokeWidth: "1.5"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M10 11C10.5523 11 11 10.5523 11 10C11 9.44772 10.5523 9 10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M11.5 16C12.3284 16 13 15.3284 13 14.5C13 13.6716 12.3284 13 11.5 13C10.6716 13 10 13.6716 10 14.5C10 15.3284 10.6716 16 11.5 16Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M15.5 12C16.3284 12 17 11.3284 17 10.5C17 9.67157 16.3284 9 15.5 9C14.6716 9 14 9.67157 14 10.5C14 11.3284 14.6716 12 15.5 12Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M22 11C23.1046 11 24 10.1046 24 9C24 7.89543 23.1046 7 22 7C20.8954 7 20 7.89543 20 9C20 10.1046 20.8954 11 22 11Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M21 25C22.1046 25 23 24.1046 23 23C23 21.8954 22.1046 21 21 21C19.8954 21 19 21.8954 19 23C19 24.1046 19.8954 25 21 25Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M2 19C3.10457 19 4 18.1046 4 17C4 15.8954 3.10457 15 2 15C0.89543 15 0 15.8954 0 17C0 18.1046 0.89543 19 2 19Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M13 4C14.1046 4 15 3.10457 15 2C15 0.89543 14.1046 0 13 0C11.8954 0 11 0.89543 11 2C11 3.10457 11.8954 4 13 4Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M5 8C6.10457 8 7 7.10457 7 6C7 4.89543 6.10457 4 5 4C3.89543 4 3 4.89543 3 6C3 7.10457 3.89543 8 5 8Z"
      }));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(DrawPolygon, "defaultProps", {
  height: '16px',
  predefinedClassName: 'data-ex-icons-draw-polygon',
  viewBox: '0 0 24 25'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfYmFzZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJfY2FsbFN1cGVyIiwibyIsIl9nZXRQcm90b3R5cGVPZjIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImNvbnN0cnVjdG9yIiwiYXBwbHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsIkRyYXdQb2x5Z29uIiwiZXhwb3J0cyIsIl9Db21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2syIiwiYXJndW1lbnRzIiwiX2luaGVyaXRzMiIsIl9jcmVhdGVDbGFzczIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wcyIsImQiLCJzdHJva2UiLCJmaWxsIiwic3Ryb2tlV2lkdGgiLCJDb21wb25lbnQiLCJfZGVmaW5lUHJvcGVydHkyIiwiaGVpZ2h0IiwicHJlZGVmaW5lZENsYXNzTmFtZSIsInZpZXdCb3giXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbW9uL2ljb25zL2RyYXctcG9seWdvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQmFzZSwge0Jhc2VQcm9wc30gZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRHJhd1BvbHlnb24gZXh0ZW5kcyBDb21wb25lbnQ8UGFydGlhbDxCYXNlUHJvcHM+PiB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiAnMTZweCcsXG4gICAgcHJlZGVmaW5lZENsYXNzTmFtZTogJ2RhdGEtZXgtaWNvbnMtZHJhdy1wb2x5Z29uJyxcbiAgICB2aWV3Qm94OiAnMCAwIDI0IDI1J1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEJhc2Ugey4uLnRoaXMucHJvcHN9PlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGQ9XCJNNSA2TDEzIDJMMjIgOUwyMSAyM0wyIDE3TDUgNlpcIlxuICAgICAgICAgIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgZmlsbD1cInRyYW5zcGFyZW50XCJcbiAgICAgICAgICBzdHJva2VXaWR0aD1cIjEuNVwiXG4gICAgICAgIC8+XG4gICAgICAgIDxwYXRoIGQ9XCJNMTAgMTFDMTAuNTUyMyAxMSAxMSAxMC41NTIzIDExIDEwQzExIDkuNDQ3NzIgMTAuNTUyMyA5IDEwIDlDOS40NDc3MiA5IDkgOS40NDc3MiA5IDEwQzkgMTAuNTUyMyA5LjQ0NzcyIDExIDEwIDExWlwiIC8+XG4gICAgICAgIDxwYXRoIGQ9XCJNMTEuNSAxNkMxMi4zMjg0IDE2IDEzIDE1LjMyODQgMTMgMTQuNUMxMyAxMy42NzE2IDEyLjMyODQgMTMgMTEuNSAxM0MxMC42NzE2IDEzIDEwIDEzLjY3MTYgMTAgMTQuNUMxMCAxNS4zMjg0IDEwLjY3MTYgMTYgMTEuNSAxNlpcIiAvPlxuICAgICAgICA8cGF0aCBkPVwiTTE1LjUgMTJDMTYuMzI4NCAxMiAxNyAxMS4zMjg0IDE3IDEwLjVDMTcgOS42NzE1NyAxNi4zMjg0IDkgMTUuNSA5QzE0LjY3MTYgOSAxNCA5LjY3MTU3IDE0IDEwLjVDMTQgMTEuMzI4NCAxNC42NzE2IDEyIDE1LjUgMTJaXCIgLz5cbiAgICAgICAgPHBhdGggZD1cIk0yMiAxMUMyMy4xMDQ2IDExIDI0IDEwLjEwNDYgMjQgOUMyNCA3Ljg5NTQzIDIzLjEwNDYgNyAyMiA3QzIwLjg5NTQgNyAyMCA3Ljg5NTQzIDIwIDlDMjAgMTAuMTA0NiAyMC44OTU0IDExIDIyIDExWlwiIC8+XG4gICAgICAgIDxwYXRoIGQ9XCJNMjEgMjVDMjIuMTA0NiAyNSAyMyAyNC4xMDQ2IDIzIDIzQzIzIDIxLjg5NTQgMjIuMTA0NiAyMSAyMSAyMUMxOS44OTU0IDIxIDE5IDIxLjg5NTQgMTkgMjNDMTkgMjQuMTA0NiAxOS44OTU0IDI1IDIxIDI1WlwiIC8+XG4gICAgICAgIDxwYXRoIGQ9XCJNMiAxOUMzLjEwNDU3IDE5IDQgMTguMTA0NiA0IDE3QzQgMTUuODk1NCAzLjEwNDU3IDE1IDIgMTVDMC44OTU0MyAxNSAwIDE1Ljg5NTQgMCAxN0MwIDE4LjEwNDYgMC44OTU0MyAxOSAyIDE5WlwiIC8+XG4gICAgICAgIDxwYXRoIGQ9XCJNMTMgNEMxNC4xMDQ2IDQgMTUgMy4xMDQ1NyAxNSAyQzE1IDAuODk1NDMgMTQuMTA0NiAwIDEzIDBDMTEuODk1NCAwIDExIDAuODk1NDMgMTEgMkMxMSAzLjEwNDU3IDExLjg5NTQgNCAxMyA0WlwiIC8+XG4gICAgICAgIDxwYXRoIGQ9XCJNNSA4QzYuMTA0NTcgOCA3IDcuMTA0NTcgNyA2QzcgNC44OTU0MyA2LjEwNDU3IDQgNSA0QzMuODk1NDMgNCAzIDQuODk1NDMgMyA2QzMgNy4xMDQ1NyAzLjg5NTQzIDggNSA4WlwiIC8+XG4gICAgICA8L0Jhc2U+XG4gICAgKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLEtBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUF1QyxTQUFBRyx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FB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