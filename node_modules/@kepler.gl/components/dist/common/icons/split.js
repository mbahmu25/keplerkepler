"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _base = _interopRequireDefault(require("./base"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var Split = exports["default"] = /*#__PURE__*/function (_Component) {
  function Split() {
    (0, _classCallCheck2["default"])(this, Split);
    return _callSuper(this, Split, arguments);
  }
  (0, _inherits2["default"])(Split, _Component);
  return (0, _createClass2["default"])(Split, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], this.props, /*#__PURE__*/_react["default"].createElement("g", {
        transform: "translate(7.500000, 7.500000)"
      }, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M19.5,47.4137931 C19.5,48.8421157 20.6192881,50 22,50 C23.3807119,50 24.5,48.8421157 24.5,47.4137931 L24.5,2.5862069 C24.5,1.15788427 23.3807119,0 22,0 C20.6192881,0 19.5,1.15788427 19.5,2.5862069 L19.5,47.4137931 Z"
      }), /*#__PURE__*/_react["default"].createElement("rect", {
        x: "0",
        y: "4",
        width: "44",
        height: "5",
        rx: "2.5"
      }), /*#__PURE__*/_react["default"].createElement("rect", {
        transform: "translate(2.500000, 24.500000) rotate(90.000000) translate(-2.500000, -24.500000) ",
        x: "-18",
        y: "22",
        width: "41",
        height: "5",
        rx: "2.5"
      }), /*#__PURE__*/_react["default"].createElement("rect", {
        transform: "translate(41.500000, 25.000000) rotate(90.000000) translate(-41.500000, -25.000000) ",
        x: "20.5",
        y: "22.5",
        width: "42",
        height: "5",
        rx: "2.5"
      }), /*#__PURE__*/_react["default"].createElement("rect", {
        x: "0",
        y: "41",
        width: "44",
        height: "5",
        rx: "2.5"
      })));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(Split, "defaultProps", {
  height: '16px',
  predefinedClassName: 'data-ex-icons-split'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfYmFzZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJfY2FsbFN1cGVyIiwibyIsIl9nZXRQcm90b3R5cGVPZjIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImNvbnN0cnVjdG9yIiwiYXBwbHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsIlNwbGl0IiwiZXhwb3J0cyIsIl9Db21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2syIiwiYXJndW1lbnRzIiwiX2luaGVyaXRzMiIsIl9jcmVhdGVDbGFzczIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wcyIsInRyYW5zZm9ybSIsImQiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwicngiLCJDb21wb25lbnQiLCJfZGVmaW5lUHJvcGVydHkyIiwicHJlZGVmaW5lZENsYXNzTmFtZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vaWNvbnMvc3BsaXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEJhc2UsIHtCYXNlUHJvcHN9IGZyb20gJy4vYmFzZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwbGl0IGV4dGVuZHMgQ29tcG9uZW50PFBhcnRpYWw8QmFzZVByb3BzPj4ge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogJzE2cHgnLFxuICAgIHByZWRlZmluZWRDbGFzc05hbWU6ICdkYXRhLWV4LWljb25zLXNwbGl0J1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEJhc2Ugey4uLnRoaXMucHJvcHN9PlxuICAgICAgICA8ZyB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoNy41MDAwMDAsIDcuNTAwMDAwKVwiPlxuICAgICAgICAgIDxwYXRoIGQ9XCJNMTkuNSw0Ny40MTM3OTMxIEMxOS41LDQ4Ljg0MjExNTcgMjAuNjE5Mjg4MSw1MCAyMiw1MCBDMjMuMzgwNzExOSw1MCAyNC41LDQ4Ljg0MjExNTcgMjQuNSw0Ny40MTM3OTMxIEwyNC41LDIuNTg2MjA2OSBDMjQuNSwxLjE1Nzg4NDI3IDIzLjM4MDcxMTksMCAyMiwwIEMyMC42MTkyODgxLDAgMTkuNSwxLjE1Nzg4NDI3IDE5LjUsMi41ODYyMDY5IEwxOS41LDQ3LjQxMzc5MzEgWlwiIC8+XG4gICAgICAgICAgPHJlY3QgeD1cIjBcIiB5PVwiNFwiIHdpZHRoPVwiNDRcIiBoZWlnaHQ9XCI1XCIgcng9XCIyLjVcIiAvPlxuICAgICAgICAgIDxyZWN0XG4gICAgICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMi41MDAwMDAsIDI0LjUwMDAwMCkgcm90YXRlKDkwLjAwMDAwMCkgdHJhbnNsYXRlKC0yLjUwMDAwMCwgLTI0LjUwMDAwMCkgXCJcbiAgICAgICAgICAgIHg9XCItMThcIlxuICAgICAgICAgICAgeT1cIjIyXCJcbiAgICAgICAgICAgIHdpZHRoPVwiNDFcIlxuICAgICAgICAgICAgaGVpZ2h0PVwiNVwiXG4gICAgICAgICAgICByeD1cIjIuNVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cmVjdFxuICAgICAgICAgICAgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDQxLjUwMDAwMCwgMjUuMDAwMDAwKSByb3RhdGUoOTAuMDAwMDAwKSB0cmFuc2xhdGUoLTQxLjUwMDAwMCwgLTI1LjAwMDAwMCkgXCJcbiAgICAgICAgICAgIHg9XCIyMC41XCJcbiAgICAgICAgICAgIHk9XCIyMi41XCJcbiAgICAgICAgICAgIHdpZHRoPVwiNDJcIlxuICAgICAgICAgICAgaGVpZ2h0PVwiNVwiXG4gICAgICAgICAgICByeD1cIjIuNVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cmVjdCB4PVwiMFwiIHk9XCI0MVwiIHdpZHRoPVwiNDRcIiBoZWlnaHQ9XCI1XCIgcng9XCIyLjVcIiAvPlxuICAgICAgICA8L2c+XG4gICAgICA8L0Jhc2U+XG4gICAgKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLEtBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUF1QyxTQUFBRyx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxtQkFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQSxXQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxLQUFBRixDQUFBO0FBQUEsU0FBQUwsd0JBQUFLLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUEsZUFBQUEsQ0FBQSxnQkFBQUssT0FBQSxDQUFBTCxDQUFBLDBCQUFBQSxDQUFBLHNCQUFBQSxDQUFBLFFBQUFHLENBQUEsR0FBQUosd0JBQUEsQ0FBQUcsQ0FBQSxPQUFBQyxDQUFBLElBQUFBLENBQUEsQ0FBQUcsR0FBQSxDQUFBTixDQUFBLFVBQUFHLENBQUEsQ0FBQUksR0FBQSxDQUFBUCxDQUFBLE9BQUFRLENBQUEsS0FBQUMsU0FBQSxVQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFFLHdCQUFBLFdBQUFDLENBQUEsSUFBQWQsQ0FBQSxvQkFBQWMsQ0FBQSxPQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWhCLENBQUEsRUFBQWMsQ0FBQSxTQUFBRyxDQUFBLEdBQUFQLENBQUEsR0FBQUMsTUFBQSxDQUFBRSx3QkFBQSxDQUFBYixDQUFBLEVBQUFjLENBQUEsVUFBQUcsQ0FBQSxLQUFBQSxDQUFBLENBQUFWLEdBQUEsSUFBQVUsQ0FBQSxDQUFBQyxHQUFBLElBQUFQLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSixDQUFBLEVBQUFNLENBQUEsRUFBQUcsQ0FBQSxJQUFBVCxDQUFBLENBQUFNLENBQUEsSUFBQWQsQ0FBQSxDQUFBYyxDQUFBLFlBQUFOLENBQUEsY0FBQVIsQ0FBQSxFQUFBRyxDQUFBLElBQUFBLENBQUEsQ0FBQWUsR0FBQSxDQUFBbEIsQ0FBQSxFQUFBUSxDQUFBLEdBQUFBLENBQUE7QUFBQSxTQUFBVyxXQUFBaEIsQ0FBQSxFQUFBaUIsQ0FBQSxFQUFBcEIsQ0FBQSxXQUFBb0IsQ0FBQSxPQUFBQyxnQkFBQSxhQUFBRCxDQUFBLE9BQUFFLDJCQUFBLGFBQUFuQixDQUFBLEVBQUFvQix5QkFBQSxLQUFBQyxPQUFBLENBQUFDLFNBQUEsQ0FBQUwsQ0FBQSxFQUFBcEIsQ0FBQSxZQUFBcUIsZ0JBQUEsYUFBQWxCLENBQUEsRUFBQXVCLFdBQUEsSUFBQU4sQ0FBQSxDQUFBTyxLQUFBLENBQUF4QixDQUFBLEVBQUFILENBQUE7QUFBQSxTQUFBdUIsMEJBQUEsY0FBQXBCLENBQUEsSUFBQXlCLE9BQUEsQ0FBQUMsU0FBQSxDQUFBQyxPQUFBLENBQUFkLElBQUEsQ0FBQVEsT0FBQSxDQUFBQyxTQUFBLENBQUFHLE9BQUEsaUNBQUF6QixDQUFBLGFBQUFvQix5QkFBQSxZQUFBQSwwQkFBQSxhQUFBcEIsQ0FBQSxVQUp2QztBQUNBO0FBQUEsSUFLcUI0QixLQUFLLEdBQUFDLE9BQUEscUNBQUFDLFVBQUE7RUFBQSxTQUFBRixNQUFBO0lBQUEsSUFBQUcsZ0JBQUEsbUJBQUFILEtBQUE7SUFBQSxPQUFBWixVQUFBLE9BQUFZLEtBQUEsRUFBQUksU0FBQTtFQUFBO0VBQUEsSUFBQUMsVUFBQSxhQUFBTCxLQUFBLEVBQUFFLFVBQUE7RUFBQSxXQUFBSSxhQUFBLGFBQUFOLEtBQUE7SUFBQU8sR0FBQTtJQUFBQyxLQUFBLEVBTXhCLFNBQUFDLE1BQU1BLENBQUEsRUFBRztNQUNQLG9CQUNFOUMsTUFBQSxZQUFBK0MsYUFBQSxDQUFDNUMsS0FBQSxXQUFJLEVBQUssSUFBSSxDQUFDNkMsS0FBSyxlQUNsQmhELE1BQUEsWUFBQStDLGFBQUE7UUFBR0UsU0FBUyxFQUFDO01BQStCLGdCQUMxQ2pELE1BQUEsWUFBQStDLGFBQUE7UUFBTUcsQ0FBQyxFQUFDO01BQXlOLENBQUUsQ0FBQyxlQUNwT2xELE1BQUEsWUFBQStDLGFBQUE7UUFBTUksQ0FBQyxFQUFDLEdBQUc7UUFBQ0MsQ0FBQyxFQUFDLEdBQUc7UUFBQ0MsS0FBSyxFQUFDLElBQUk7UUFBQ0MsTUFBTSxFQUFDLEdBQUc7UUFBQ0MsRUFBRSxFQUFDO01BQUssQ0FBRSxDQUFDLGVBQ25EdkQsTUFBQSxZQUFBK0MsYUFBQTtRQUNFRSxTQUFTLEVBQUMsb0ZBQW9GO1FBQzlGRSxDQUFDLEVBQUMsS0FBSztRQUNQQyxDQUFDLEVBQUMsSUFBSTtRQUNOQyxLQUFLLEVBQUMsSUFBSTtRQUNWQyxNQUFNLEVBQUMsR0FBRztRQUNWQyxFQUFFLEVBQUM7TUFBSyxDQUNULENBQUMsZUFDRnZELE1BQUEsWUFBQStDLGFBQUE7UUFDRUUsU0FBUyxFQUFDLHNGQUFzRjtRQUNoR0UsQ0FBQyxFQUFDLE1BQU07UUFDUkMsQ0FBQyxFQUFDLE1BQU07UUFDUkMsS0FBSyxFQUFDLElBQUk7UUFDVkMsTUFBTSxFQUFDLEdBQUc7UUFDVkMsRUFBRSxFQUFDO01BQUssQ0FDVCxDQUFDLGVBQ0Z2RCxNQUFBLFlBQUErQyxhQUFBO1FBQU1JLENBQUMsRUFBQyxHQUFHO1FBQUNDLENBQUMsRUFBQyxJQUFJO1FBQUNDLEtBQUssRUFBQyxJQUFJO1FBQUNDLE1BQU0sRUFBQyxHQUFHO1FBQUNDLEVBQUUsRUFBQztNQUFLLENBQUUsQ0FDbEQsQ0FDQyxDQUFDO0lBRVg7RUFBQztBQUFBLEVBaENnQ0MsZ0JBQVM7QUFBQSxJQUFBQyxnQkFBQSxhQUF2QnBCLEtBQUssa0JBQ0Y7RUFDcEJpQixNQUFNLEVBQUUsTUFBTTtFQUNkSSxtQkFBbUIsRUFBRTtBQUN2QixDQUFDIiwiaWdub3JlTGlzdCI6W119