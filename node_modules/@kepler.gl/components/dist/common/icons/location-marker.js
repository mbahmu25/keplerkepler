"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _base = _interopRequireDefault(require("./base"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var LocationMarker = exports["default"] = /*#__PURE__*/function (_Component) {
  function LocationMarker() {
    (0, _classCallCheck2["default"])(this, LocationMarker);
    return _callSuper(this, LocationMarker, arguments);
  }
  (0, _inherits2["default"])(LocationMarker, _Component);
  return (0, _createClass2["default"])(LocationMarker, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], this.props, /*#__PURE__*/_react["default"].createElement("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/_react["default"].createElement("g", {
        clipPath: "url(#clip0_118_4762)"
      }, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M15 7.5H11.965C11.8528 6.62017 11.4517 5.80249 10.8246 5.17529C10.1975 4.54809 9.37982 4.14689 8.5 4.03465V1H7.5V4.03465C6.62018 4.14689 5.80254 4.54809 5.17541 5.17529C4.54827 5.80249 4.14715 6.62017 4.035 7.5H1V8.5H4.035C4.14715 9.37983 4.54827 10.1975 5.17541 10.8247C5.80254 11.4519 6.62018 11.8531 7.5 11.9654V15H8.5V11.9654C9.37986 11.8532 10.1976 11.452 10.8247 10.8248C11.4519 10.1976 11.8531 9.37986 11.9653 8.5H15V7.5ZM8 11C7.40666 11 6.82664 10.8241 6.33329 10.4944C5.83994 10.1648 5.45542 9.69623 5.22836 9.14805C5.0013 8.59987 4.94189 7.99667 5.05764 7.41473C5.1734 6.83279 5.45912 6.29824 5.87868 5.87868C6.29824 5.45912 6.83279 5.1734 7.41473 5.05764C7.99667 4.94189 8.59987 5.0013 9.14805 5.22836C9.69623 5.45542 10.1648 5.83994 10.4944 6.33329C10.8241 6.82664 11 7.40666 11 8C10.9991 8.79538 10.6828 9.55794 10.1204 10.1204C9.55794 10.6828 8.79538 10.9991 8 11Z"
      })), /*#__PURE__*/_react["default"].createElement("defs", null, /*#__PURE__*/_react["default"].createElement("clipPath", {
        id: "clip0_118_4762"
      }, /*#__PURE__*/_react["default"].createElement("rect", {
        width: "16",
        height: "16"
      })))));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(LocationMarker, "propTypes", {
  /** Set the height of the icon, ex. '16px' */
  height: _propTypes["default"].string
});
(0, _defineProperty2["default"])(LocationMarker, "defaultProps", {
  height: '16px',
  viewBox: '0 0 16 16',
  predefinedClassName: 'data-ex-icons-location-marker'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9iYXNlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiX2NhbGxTdXBlciIsIm8iLCJfZ2V0UHJvdG90eXBlT2YyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJMb2NhdGlvbk1hcmtlciIsImV4cG9ydHMiLCJfQ29tcG9uZW50IiwiX2NsYXNzQ2FsbENoZWNrMiIsImFyZ3VtZW50cyIsIl9pbmhlcml0czIiLCJfY3JlYXRlQ2xhc3MyIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwicHJvcHMiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJ4bWxucyIsImNsaXBQYXRoIiwiZCIsImlkIiwiQ29tcG9uZW50IiwiX2RlZmluZVByb3BlcnR5MiIsIlByb3BUeXBlcyIsInN0cmluZyIsInByZWRlZmluZWRDbGFzc05hbWUiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbW9uL2ljb25zL2xvY2F0aW9uLW1hcmtlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEJhc2UgZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9jYXRpb25NYXJrZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKiBTZXQgdGhlIGhlaWdodCBvZiB0aGUgaWNvbiwgZXguICcxNnB4JyAqL1xuICAgIGhlaWdodDogUHJvcFR5cGVzLnN0cmluZ1xuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiAnMTZweCcsXG4gICAgdmlld0JveDogJzAgMCAxNiAxNicsXG4gICAgcHJlZGVmaW5lZENsYXNzTmFtZTogJ2RhdGEtZXgtaWNvbnMtbG9jYXRpb24tbWFya2VyJ1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEJhc2Ugey4uLnRoaXMucHJvcHN9PlxuICAgICAgICA8c3ZnIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgPGcgY2xpcFBhdGg9XCJ1cmwoI2NsaXAwXzExOF80NzYyKVwiPlxuICAgICAgICAgICAgPHBhdGggZD1cIk0xNSA3LjVIMTEuOTY1QzExLjg1MjggNi42MjAxNyAxMS40NTE3IDUuODAyNDkgMTAuODI0NiA1LjE3NTI5QzEwLjE5NzUgNC41NDgwOSA5LjM3OTgyIDQuMTQ2ODkgOC41IDQuMDM0NjVWMUg3LjVWNC4wMzQ2NUM2LjYyMDE4IDQuMTQ2ODkgNS44MDI1NCA0LjU0ODA5IDUuMTc1NDEgNS4xNzUyOUM0LjU0ODI3IDUuODAyNDkgNC4xNDcxNSA2LjYyMDE3IDQuMDM1IDcuNUgxVjguNUg0LjAzNUM0LjE0NzE1IDkuMzc5ODMgNC41NDgyNyAxMC4xOTc1IDUuMTc1NDEgMTAuODI0N0M1LjgwMjU0IDExLjQ1MTkgNi42MjAxOCAxMS44NTMxIDcuNSAxMS45NjU0VjE1SDguNVYxMS45NjU0QzkuMzc5ODYgMTEuODUzMiAxMC4xOTc2IDExLjQ1MiAxMC44MjQ3IDEwLjgyNDhDMTEuNDUxOSAxMC4xOTc2IDExLjg1MzEgOS4zNzk4NiAxMS45NjUzIDguNUgxNVY3LjVaTTggMTFDNy40MDY2NiAxMSA2LjgyNjY0IDEwLjgyNDEgNi4zMzMyOSAxMC40OTQ0QzUuODM5OTQgMTAuMTY0OCA1LjQ1NTQyIDkuNjk2MjMgNS4yMjgzNiA5LjE0ODA1QzUuMDAxMyA4LjU5OTg3IDQuOTQxODkgNy45OTY2NyA1LjA1NzY0IDcuNDE0NzNDNS4xNzM0IDYuODMyNzkgNS40NTkxMiA2LjI5ODI0IDUuODc4NjggNS44Nzg2OEM2LjI5ODI0IDUuNDU5MTIgNi44MzI3OSA1LjE3MzQgNy40MTQ3MyA1LjA1NzY0QzcuOTk2NjcgNC45NDE4OSA4LjU5OTg3IDUuMDAxMyA5LjE0ODA1IDUuMjI4MzZDOS42OTYyMyA1LjQ1NTQyIDEwLjE2NDggNS44Mzk5NCAxMC40OTQ0IDYuMzMzMjlDMTAuODI0MSA2LjgyNjY0IDExIDcuNDA2NjYgMTEgOEMxMC45OTkxIDguNzk1MzggMTAuNjgyOCA5LjU1Nzk0IDEwLjEyMDQgMTAuMTIwNEM5LjU1Nzk0IDEwLjY4MjggOC43OTUzOCAxMC45OTkxIDggMTFaXCIgLz5cbiAgICAgICAgICA8L2c+XG4gICAgICAgICAgPGRlZnM+XG4gICAgICAgICAgICA8Y2xpcFBhdGggaWQ9XCJjbGlwMF8xMThfNDc2MlwiPlxuICAgICAgICAgICAgICA8cmVjdCB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiAvPlxuICAgICAgICAgICAgPC9jbGlwUGF0aD5cbiAgICAgICAgICA8L2RlZnM+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgPC9CYXNlPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7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