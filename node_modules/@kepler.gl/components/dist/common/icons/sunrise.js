"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _base = _interopRequireDefault(require("./base"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var Sunrise = exports["default"] = /*#__PURE__*/function (_Component) {
  function Sunrise() {
    (0, _classCallCheck2["default"])(this, Sunrise);
    return _callSuper(this, Sunrise, arguments);
  }
  (0, _inherits2["default"])(Sunrise, _Component);
  return (0, _createClass2["default"])(Sunrise, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], this.props, /*#__PURE__*/_react["default"].createElement("svg", {
        width: "12",
        height: "12",
        viewBox: "0 0 12 12",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/_react["default"].createElement("g", {
        clipPath: "url(#clip0_85_57889)"
      }, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M11.2494 10.125H0.75V10.875H11.2494V10.125Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M6 7.5C6.39769 7.50045 6.77896 7.65863 7.06017 7.93983C7.34137 8.22104 7.49955 8.60231 7.5 9H8.25C8.25 8.40326 8.01295 7.83097 7.59099 7.40901C7.16903 6.98705 6.59674 6.75 6 6.75C5.40326 6.75 4.83097 6.98705 4.40901 7.40901C3.98705 7.83097 3.75 8.40326 3.75 9H4.5C4.50045 8.60231 4.65863 8.22104 4.93983 7.93983C5.22104 7.65863 5.60231 7.50045 6 7.5Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M11.25 8.25H9.375V9H11.25V8.25Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M9.44701 5.02259L8.13232 6.33728L8.6626 6.86756L9.97729 5.55287L9.44701 5.02259Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M6 1.5L4.125 3.375L4.65375 3.90375L5.625 2.93625V3V5.625H6.375V3V2.93625L7.34625 3.90375L7.875 3.375L6 1.5Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M2.55274 5.02258L2.02246 5.55286L3.33715 6.86754L3.86743 6.33727L2.55274 5.02258Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M2.625 8.25H0.75V9H2.625V8.25Z"
      })), /*#__PURE__*/_react["default"].createElement("defs", null, /*#__PURE__*/_react["default"].createElement("clipPath", {
        id: "clip0_85_57889"
      }, /*#__PURE__*/_react["default"].createElement("rect", {
        width: "12",
        height: "12"
      })))));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(Sunrise, "propTypes", {
  /** Set the height of the icon, ex. '12px' */
  height: _propTypes["default"].string
});
(0, _defineProperty2["default"])(Sunrise, "defaultProps", {
  height: '12px',
  viewBox: '0 0 12 12',
  predefinedClassName: 'data-ex-icons-sunrise'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9iYXNlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiX2NhbGxTdXBlciIsIm8iLCJfZ2V0UHJvdG90eXBlT2YyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJTdW5yaXNlIiwiZXhwb3J0cyIsIl9Db21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2syIiwiYXJndW1lbnRzIiwiX2luaGVyaXRzMiIsIl9jcmVhdGVDbGFzczIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wcyIsIndpZHRoIiwiaGVpZ2h0Iiwidmlld0JveCIsInhtbG5zIiwiY2xpcFBhdGgiLCJkIiwiaWQiLCJDb21wb25lbnQiLCJfZGVmaW5lUHJvcGVydHkyIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwicHJlZGVmaW5lZENsYXNzTmFtZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vaWNvbnMvc3VucmlzZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEJhc2UgZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3VucmlzZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqIFNldCB0aGUgaGVpZ2h0IG9mIHRoZSBpY29uLCBleC4gJzEycHgnICovXG4gICAgaGVpZ2h0OiBQcm9wVHlwZXMuc3RyaW5nXG4gIH07XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBoZWlnaHQ6ICcxMnB4JyxcbiAgICB2aWV3Qm94OiAnMCAwIDEyIDEyJyxcbiAgICBwcmVkZWZpbmVkQ2xhc3NOYW1lOiAnZGF0YS1leC1pY29ucy1zdW5yaXNlJ1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEJhc2Ugey4uLnRoaXMucHJvcHN9PlxuICAgICAgICA8c3ZnIHdpZHRoPVwiMTJcIiBoZWlnaHQ9XCIxMlwiIHZpZXdCb3g9XCIwIDAgMTIgMTJcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgPGcgY2xpcFBhdGg9XCJ1cmwoI2NsaXAwXzg1XzU3ODg5KVwiPlxuICAgICAgICAgICAgPHBhdGggZD1cIk0xMS4yNDk0IDEwLjEyNUgwLjc1VjEwLjg3NUgxMS4yNDk0VjEwLjEyNVpcIiAvPlxuICAgICAgICAgICAgPHBhdGggZD1cIk02IDcuNUM2LjM5NzY5IDcuNTAwNDUgNi43Nzg5NiA3LjY1ODYzIDcuMDYwMTcgNy45Mzk4M0M3LjM0MTM3IDguMjIxMDQgNy40OTk1NSA4LjYwMjMxIDcuNSA5SDguMjVDOC4yNSA4LjQwMzI2IDguMDEyOTUgNy44MzA5NyA3LjU5MDk5IDcuNDA5MDFDNy4xNjkwMyA2Ljk4NzA1IDYuNTk2NzQgNi43NSA2IDYuNzVDNS40MDMyNiA2Ljc1IDQuODMwOTcgNi45ODcwNSA0LjQwOTAxIDcuNDA5MDFDMy45ODcwNSA3LjgzMDk3IDMuNzUgOC40MDMyNiAzLjc1IDlINC41QzQuNTAwNDUgOC42MDIzMSA0LjY1ODYzIDguMjIxMDQgNC45Mzk4MyA3LjkzOTgzQzUuMjIxMDQgNy42NTg2MyA1LjYwMjMxIDcuNTAwNDUgNiA3LjVaXCIgLz5cbiAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTEuMjUgOC4yNUg5LjM3NVY5SDExLjI1VjguMjVaXCIgLz5cbiAgICAgICAgICAgIDxwYXRoIGQ9XCJNOS40NDcwMSA1LjAyMjU5TDguMTMyMzIgNi4zMzcyOEw4LjY2MjYgNi44Njc1Nkw5Ljk3NzI5IDUuNTUyODdMOS40NDcwMSA1LjAyMjU5WlwiIC8+XG4gICAgICAgICAgICA8cGF0aCBkPVwiTTYgMS41TDQuMTI1IDMuMzc1TDQuNjUzNzUgMy45MDM3NUw1LjYyNSAyLjkzNjI1VjNWNS42MjVINi4zNzVWM1YyLjkzNjI1TDcuMzQ2MjUgMy45MDM3NUw3Ljg3NSAzLjM3NUw2IDEuNVpcIiAvPlxuICAgICAgICAgICAgPHBhdGggZD1cIk0yLjU1Mjc0IDUuMDIyNThMMi4wMjI0NiA1LjU1Mjg2TDMuMzM3MTUgNi44Njc1NEwzLjg2NzQzIDYuMzM3MjdMMi41NTI3NCA1LjAyMjU4WlwiIC8+XG4gICAgICAgICAgICA8cGF0aCBkPVwiTTIuNjI1IDguMjVIMC43NVY5SDIuNjI1VjguMjVaXCIgLz5cbiAgICAgICAgICA8L2c+XG4gICAgICAgICAgPGRlZnM+XG4gICAgICAgICAgICA8Y2xpcFBhdGggaWQ9XCJjbGlwMF84NV81Nzg4OVwiPlxuICAgICAgICAgICAgICA8cmVjdCB3aWR0aD1cIjEyXCIgaGVpZ2h0PVwiMTJcIiAvPlxuICAgICAgICAgICAgPC9jbGlwUGF0aD5cbiAgICAgICAgICA8L2RlZnM+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgPC9CYXNlPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxLQUFBLEdBQUFELHNCQUFBLENBQUFGLE9BQUE7QUFBMEIsU0FBQUkseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFOLHdCQUFBTSxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxTQUFBSixDQUFBLGVBQUFBLENBQUEsZ0JBQUFLLE9BQUEsQ0FBQUwsQ0FBQSwwQkFBQUEsQ0FBQSxzQkFBQUEsQ0FBQSxRQUFBRyxDQUFBLEdBQUFKLHdCQUFBLENBQUFHLENBQUEsT0FBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQSxPQUFBUSxDQUFBLEtBQUFDLFNBQUEsVUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLENBQUEsU0FBQUcsQ0FBQSxHQUFBUCxDQUFBLEdBQUFDLE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQWIsQ0FBQSxFQUFBYyxDQUFBLFVBQUFHLENBQUEsS0FBQUEsQ0FBQSxDQUFBVixHQUFBLElBQUFVLENBQUEsQ0FBQUMsR0FBQSxJQUFBUCxNQUFBLENBQUFDLGNBQUEsQ0FBQUosQ0FBQSxFQUFBTSxDQUFBLEVBQUFHLENBQUEsSUFBQVQsQ0FBQSxDQUFBTSxDQUFBLElBQUFkLENBQUEsQ0FBQWMsQ0FBQSxZQUFBTixDQUFBLGNBQUFSLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBQUEsU0FBQVcsV0FBQWhCLENBQUEsRUFBQWlCLENBQUEsRUFBQXBCLENBQUEsV0FBQW9CLENBQUEsT0FBQUMsZ0JBQUEsYUFBQUQsQ0FBQSxPQUFBRSwyQkFBQSxhQUFBbkIsQ0FBQSxFQUFBb0IseUJBQUEsS0FBQUMsT0FBQSxDQUFBQyxTQUFBLENBQUFMLENBQUEsRUFBQXBCLENBQUEsWUFBQXFCLGdCQUFBLGFBQUFsQixDQUFBLEVBQUF1QixXQUFBLElBQUFOLENBQUEsQ0FBQU8sS0FBQSxDQUFBeEIsQ0FBQSxFQUFBSCxDQUFBO0FBQUEsU0FBQXVCLDBCQUFBLGNBQUFwQixDQUFBLElBQUF5QixPQUFBLENBQUFDLFNBQUEsQ0FBQUMsT0FBQSxDQUFBZCxJQUFBLENBQUFRLE9BQUEsQ0FBQUMsU0FBQSxDQUFBRyxPQUFBLGlDQUFBekIsQ0FBQSxhQUFBb0IseUJBQUEsWUFBQUEsMEJBQUEsYUFBQXBCLENBQUEsVUFMMUI7QUFDQTtBQUFBLElBTXFCNEIsT0FBTyxHQUFBQyxPQUFBLHFDQUFBQyxVQUFBO0VBQUEsU0FBQUYsUUFBQTtJQUFBLElBQUFHLGdCQUFBLG1CQUFBSCxPQUFBO0lBQUEsT0FBQVosVUFBQSxPQUFBWSxPQUFBLEVBQUFJLFNBQUE7RUFBQTtFQUFBLElBQUFDLFVBQUEsYUFBQUwsT0FBQSxFQUFBRSxVQUFBO0VBQUEsV0FBQUksYUFBQSxhQUFBTixPQUFBO0lBQUFPLEdBQUE7SUFBQUMsS0FBQSxFQVkxQixTQUFBQyxNQUFNQSxDQUFBLEVBQUc7TUFDUCxvQkFDRS9DLE1BQUEsWUFBQWdELGFBQUEsQ0FBQzNDLEtBQUEsV0FBSSxFQUFLLElBQUksQ0FBQzRDLEtBQUssZUFDbEJqRCxNQUFBLFlBQUFnRCxhQUFBO1FBQUtFLEtBQUssRUFBQyxJQUFJO1FBQUNDLE1BQU0sRUFBQyxJQUFJO1FBQUNDLE9BQU8sRUFBQyxXQUFXO1FBQUNDLEtBQUssRUFBQztNQUE0QixnQkFDaEZyRCxNQUFBLFlBQUFnRCxhQUFBO1FBQUdNLFFBQVEsRUFBQztNQUFzQixnQkFDaEN0RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1PLENBQUMsRUFBQztNQUE2QyxDQUFFLENBQUMsZUFDeER2RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1PLENBQUMsRUFBQztNQUFnVyxDQUFFLENBQUMsZUFDM1d2RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1PLENBQUMsRUFBQztNQUFpQyxDQUFFLENBQUMsZUFDNUN2RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1PLENBQUMsRUFBQztNQUFrRixDQUFFLENBQUMsZUFDN0Z2RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1PLENBQUMsRUFBQztNQUE2RyxDQUFFLENBQUMsZUFDeEh2RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1PLENBQUMsRUFBQztNQUFtRixDQUFFLENBQUMsZUFDOUZ2RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1PLENBQUMsRUFBQztNQUFnQyxDQUFFLENBQ3pDLENBQUMsZUFDSnZELE1BQUEsWUFBQWdELGFBQUEsNEJBQ0VoRCxNQUFBLFlBQUFnRCxhQUFBO1FBQVVRLEVBQUUsRUFBQztNQUFnQixnQkFDM0J4RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1FLEtBQUssRUFBQyxJQUFJO1FBQUNDLE1BQU0sRUFBQztNQUFJLENBQUUsQ0FDdEIsQ0FDTixDQUNILENBQ0QsQ0FBQztJQUVYO0VBQUM7QUFBQSxFQWpDa0NNLGdCQUFTO0FBQUEsSUFBQUMsZ0JBQUEsYUFBekJwQixPQUFPLGVBQ1A7RUFDakI7RUFDQWEsTUFBTSxFQUFFUSxxQkFBUyxDQUFDQztBQUNwQixDQUFDO0FBQUEsSUFBQUYsZ0JBQUEsYUFKa0JwQixPQUFPLGtCQU1KO0VBQ3BCYSxNQUFNLEVBQUUsTUFBTTtFQUNkQyxPQUFPLEVBQUUsV0FBVztFQUNwQlMsbUJBQW1CLEVBQUU7QUFDdkIsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==