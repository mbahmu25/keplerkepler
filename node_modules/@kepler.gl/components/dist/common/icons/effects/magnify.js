"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _base = _interopRequireDefault(require("../base"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var Magnify = exports["default"] = /*#__PURE__*/function (_Component) {
  function Magnify() {
    (0, _classCallCheck2["default"])(this, Magnify);
    return _callSuper(this, Magnify, arguments);
  }
  (0, _inherits2["default"])(Magnify, _Component);
  return (0, _createClass2["default"])(Magnify, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], this.props, /*#__PURE__*/_react["default"].createElement("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M1.90479 10.5143H2.66669V12.1905C2.66669 12.8217 3.17836 13.3334 3.80955 13.3334H5.48574V14.0953H3.80955C2.75758 14.0953 1.90479 13.2425 1.90479 12.1905V10.5143Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M1.90479 9.67621H2.66669V6.32383H1.90479V9.67621Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M1.90479 5.48574H2.66669V3.80955C2.66669 3.17836 3.17836 2.66669 3.80955 2.66669H5.48574V1.90479H3.80955C2.75758 1.90479 1.90479 2.75758 1.90479 3.80955V5.48574Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M6.32383 1.90479V2.66669H9.67621V1.90479H6.32383Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M10.5143 1.90479V2.66669H12.1905C12.8217 2.66669 13.3334 3.17836 13.3334 3.80955V5.48574H14.0953V3.80955C14.0953 2.75758 13.2425 1.90479 12.1905 1.90479H10.5143Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M14.0953 6.32383H13.3334V6.85717H14.0953V6.32383Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M6.32383 13.3334H7.23812V14.0953H6.32383V13.3334Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M11.4286 6.85718C12.5592 7.98786 12.6772 9.74776 11.7824 11.0097L13.9482 13.1755L13.4094 13.7143L11.2712 11.576C10.0014 12.6889 8.06829 12.6398 6.85714 11.4286C5.59478 10.1662 5.59478 8.11954 6.85714 6.85718C8.1195 5.59482 10.1662 5.59482 11.4286 6.85718ZM10.8898 10.8899C11.8546 9.92503 11.8546 8.36075 10.8898 7.39593C9.92498 6.43111 8.3607 6.43111 7.39588 7.39593C6.43107 8.36075 6.43107 9.92503 7.39588 10.8899C8.3607 11.8547 9.92498 11.8547 10.8898 10.8899Z"
      })));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(Magnify, "propTypes", {
  /** Set the height of the icon, ex. '16px' */
  height: _propTypes["default"].string
});
(0, _defineProperty2["default"])(Magnify, "defaultProps", {
  height: '16px',
  viewBox: '0 0 16 16',
  predefinedClassName: 'data-ex-icons-magnify'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9iYXNlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiX2NhbGxTdXBlciIsIm8iLCJfZ2V0UHJvdG90eXBlT2YyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJNYWduaWZ5IiwiZXhwb3J0cyIsIl9Db21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2syIiwiYXJndW1lbnRzIiwiX2luaGVyaXRzMiIsIl9jcmVhdGVDbGFzczIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wcyIsIndpZHRoIiwiaGVpZ2h0Iiwidmlld0JveCIsInhtbG5zIiwiZCIsImZpbGxSdWxlIiwiY2xpcFJ1bGUiLCJDb21wb25lbnQiLCJfZGVmaW5lUHJvcGVydHkyIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwicHJlZGVmaW5lZENsYXNzTmFtZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21tb24vaWNvbnMvZWZmZWN0cy9tYWduaWZ5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQmFzZSBmcm9tICcuLi9iYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFnbmlmeSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqIFNldCB0aGUgaGVpZ2h0IG9mIHRoZSBpY29uLCBleC4gJzE2cHgnICovXG4gICAgaGVpZ2h0OiBQcm9wVHlwZXMuc3RyaW5nXG4gIH07XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBoZWlnaHQ6ICcxNnB4JyxcbiAgICB2aWV3Qm94OiAnMCAwIDE2IDE2JyxcbiAgICBwcmVkZWZpbmVkQ2xhc3NOYW1lOiAnZGF0YS1leC1pY29ucy1tYWduaWZ5J1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEJhc2Ugey4uLnRoaXMucHJvcHN9PlxuICAgICAgICA8c3ZnIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgPHBhdGggZD1cIk0xLjkwNDc5IDEwLjUxNDNIMi42NjY2OVYxMi4xOTA1QzIuNjY2NjkgMTIuODIxNyAzLjE3ODM2IDEzLjMzMzQgMy44MDk1NSAxMy4zMzM0SDUuNDg1NzRWMTQuMDk1M0gzLjgwOTU1QzIuNzU3NTggMTQuMDk1MyAxLjkwNDc5IDEzLjI0MjUgMS45MDQ3OSAxMi4xOTA1VjEwLjUxNDNaXCIgLz5cbiAgICAgICAgICA8cGF0aCBkPVwiTTEuOTA0NzkgOS42NzYyMUgyLjY2NjY5VjYuMzIzODNIMS45MDQ3OVY5LjY3NjIxWlwiIC8+XG4gICAgICAgICAgPHBhdGggZD1cIk0xLjkwNDc5IDUuNDg1NzRIMi42NjY2OVYzLjgwOTU1QzIuNjY2NjkgMy4xNzgzNiAzLjE3ODM2IDIuNjY2NjkgMy44MDk1NSAyLjY2NjY5SDUuNDg1NzRWMS45MDQ3OUgzLjgwOTU1QzIuNzU3NTggMS45MDQ3OSAxLjkwNDc5IDIuNzU3NTggMS45MDQ3OSAzLjgwOTU1VjUuNDg1NzRaXCIgLz5cbiAgICAgICAgICA8cGF0aCBkPVwiTTYuMzIzODMgMS45MDQ3OVYyLjY2NjY5SDkuNjc2MjFWMS45MDQ3OUg2LjMyMzgzWlwiIC8+XG4gICAgICAgICAgPHBhdGggZD1cIk0xMC41MTQzIDEuOTA0NzlWMi42NjY2OUgxMi4xOTA1QzEyLjgyMTcgMi42NjY2OSAxMy4zMzM0IDMuMTc4MzYgMTMuMzMzNCAzLjgwOTU1VjUuNDg1NzRIMTQuMDk1M1YzLjgwOTU1QzE0LjA5NTMgMi43NTc1OCAxMy4yNDI1IDEuOTA0NzkgMTIuMTkwNSAxLjkwNDc5SDEwLjUxNDNaXCIgLz5cbiAgICAgICAgICA8cGF0aCBkPVwiTTE0LjA5NTMgNi4zMjM4M0gxMy4zMzM0VjYuODU3MTdIMTQuMDk1M1Y2LjMyMzgzWlwiIC8+XG4gICAgICAgICAgPHBhdGggZD1cIk02LjMyMzgzIDEzLjMzMzRINy4yMzgxMlYxNC4wOTUzSDYuMzIzODNWMTMuMzMzNFpcIiAvPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgICAgICAgY2xpcFJ1bGU9XCJldmVub2RkXCJcbiAgICAgICAgICAgIGQ9XCJNMTEuNDI4NiA2Ljg1NzE4QzEyLjU1OTIgNy45ODc4NiAxMi42NzcyIDkuNzQ3NzYgMTEuNzgyNCAxMS4wMDk3TDEzLjk0ODIgMTMuMTc1NUwxMy40MDk0IDEzLjcxNDNMMTEuMjcxMiAxMS41NzZDMTAuMDAxNCAxMi42ODg5IDguMDY4MjkgMTIuNjM5OCA2Ljg1NzE0IDExLjQyODZDNS41OTQ3OCAxMC4xNjYyIDUuNTk0NzggOC4xMTk1NCA2Ljg1NzE0IDYuODU3MThDOC4xMTk1IDUuNTk0ODIgMTAuMTY2MiA1LjU5NDgyIDExLjQyODYgNi44NTcxOFpNMTAuODg5OCAxMC44ODk5QzExLjg1NDYgOS45MjUwMyAxMS44NTQ2IDguMzYwNzUgMTAuODg5OCA3LjM5NTkzQzkuOTI0OTggNi40MzExMSA4LjM2MDcgNi40MzExMSA3LjM5NTg4IDcuMzk1OTNDNi40MzEwNyA4LjM2MDc1IDYuNDMxMDcgOS45MjUwMyA3LjM5NTg4IDEwLjg4OTlDOC4zNjA3IDExLjg1NDcgOS45MjQ5OCAxMS44NTQ3IDEwLjg4OTggMTAuODg5OVpcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgPC9CYXNlPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxLQUFBLEdBQUFELHNCQUFBLENBQUFGLE9BQUE7QUFBMkIsU0FBQUkseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFOLHdCQUFBTSxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxTQUFBSixDQUFBLGVBQUFBLENBQUEsZ0JBQUFLLE9BQUEsQ0FBQUwsQ0FBQSwwQkFBQUEsQ0FBQSxzQkFBQUEsQ0FBQSxRQUFBRyxDQUFBLEdBQUFKLHdCQUFBLENBQUFHLENBQUEsT0FBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQSxPQUFBUSxDQUFBLEtBQUFDLFNBQUEsVUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLENBQUEsU0FBQUcsQ0FBQSxHQUFBUCxDQUFBLEdBQUFDLE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQWIsQ0FBQSxFQUFBYyxDQUFBLFVBQUFHLENBQUEsS0FBQUEsQ0FBQSxDQUFBVixHQUFBLElBQUFVLENBQUEsQ0FBQUMsR0FBQSxJQUFBUCxNQUFBLENBQUFDLGNBQUEsQ0FBQUosQ0FBQSxFQUFBTSxDQUFBLEVBQUFHLENBQUEsSUFBQVQsQ0FBQSxDQUFBTSxDQUFBLElBQUFkLENBQUEsQ0FBQWMsQ0FBQSxZQUFBTixDQUFBLGNBQUFSLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBQUEsU0FBQVcsV0FBQWhCLENBQUEsRUFBQWlCLENBQUEsRUFBQXBCLENBQUEsV0FBQW9CLENBQUEsT0FBQUMsZ0JBQUEsYUFBQUQsQ0FBQSxPQUFBRSwyQkFBQSxhQUFBbkIsQ0FBQSxFQUFBb0IseUJBQUEsS0FBQUMsT0FBQSxDQUFBQyxTQUFBLENBQUFMLENBQUEsRUFBQXBCLENBQUEsWUFBQXFCLGdCQUFBLGFBQUFsQixDQUFBLEVBQUF1QixXQUFBLElBQUFOLENBQUEsQ0FBQU8sS0FBQSxDQUFBeEIsQ0FBQSxFQUFBSCxDQUFBO0FBQUEsU0FBQXVCLDBCQUFBLGNBQUFwQixDQUFBLElBQUF5QixPQUFBLENBQUFDLFNBQUEsQ0FBQUMsT0FBQSxDQUFBZCxJQUFBLENBQUFRLE9BQUEsQ0FBQUMsU0FBQSxDQUFBRyxPQUFBLGlDQUFBekIsQ0FBQSxhQUFBb0IseUJBQUEsWUFBQUEsMEJBQUEsYUFBQXBCLENBQUEsVUFMM0I7QUFDQTtBQUFBLElBTXFCNEIsT0FBTyxHQUFBQyxPQUFBLHFDQUFBQyxVQUFBO0VBQUEsU0FBQUYsUUFBQTtJQUFBLElBQUFHLGdCQUFBLG1CQUFBSCxPQUFBO0lBQUEsT0FBQVosVUFBQSxPQUFBWSxPQUFBLEVBQUFJLFNBQUE7RUFBQTtFQUFBLElBQUFDLFVBQUEsYUFBQUwsT0FBQSxFQUFBRSxVQUFBO0VBQUEsV0FBQUksYUFBQSxhQUFBTixPQUFBO0lBQUFPLEdBQUE7SUFBQUMsS0FBQSxFQVkxQixTQUFBQyxNQUFNQSxDQUFBLEVBQUc7TUFDUCxvQkFDRS9DLE1BQUEsWUFBQWdELGFBQUEsQ0FBQzNDLEtBQUEsV0FBSSxFQUFLLElBQUksQ0FBQzRDLEtBQUssZUFDbEJqRCxNQUFBLFlBQUFnRCxhQUFBO1FBQUtFLEtBQUssRUFBQyxJQUFJO1FBQUNDLE1BQU0sRUFBQyxJQUFJO1FBQUNDLE9BQU8sRUFBQyxXQUFXO1FBQUNDLEtBQUssRUFBQztNQUE0QixnQkFDaEZyRCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1NLENBQUMsRUFBQztNQUFtSyxDQUFFLENBQUMsZUFDOUt0RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1NLENBQUMsRUFBQztNQUFtRCxDQUFFLENBQUMsZUFDOUR0RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1NLENBQUMsRUFBQztNQUFtSyxDQUFFLENBQUMsZUFDOUt0RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1NLENBQUMsRUFBQztNQUFtRCxDQUFFLENBQUMsZUFDOUR0RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1NLENBQUMsRUFBQztNQUFtSyxDQUFFLENBQUMsZUFDOUt0RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1NLENBQUMsRUFBQztNQUFtRCxDQUFFLENBQUMsZUFDOUR0RCxNQUFBLFlBQUFnRCxhQUFBO1FBQU1NLENBQUMsRUFBQztNQUFtRCxDQUFFLENBQUMsZUFDOUR0RCxNQUFBLFlBQUFnRCxhQUFBO1FBQ0VPLFFBQVEsRUFBQyxTQUFTO1FBQ2xCQyxRQUFRLEVBQUMsU0FBUztRQUNsQkYsQ0FBQyxFQUFDO01BQWdkLENBQ25kLENBQ0UsQ0FDRCxDQUFDO0lBRVg7RUFBQztBQUFBLEVBL0JrQ0csZ0JBQVM7QUFBQSxJQUFBQyxnQkFBQSxhQUF6QnBCLE9BQU8sZUFDUDtFQUNqQjtFQUNBYSxNQUFNLEVBQUVRLHFCQUFTLENBQUNDO0FBQ3BCLENBQUM7QUFBQSxJQUFBRixnQkFBQSxhQUprQnBCLE9BQU8sa0JBTUo7RUFDcEJhLE1BQU0sRUFBRSxNQUFNO0VBQ2RDLE9BQU8sRUFBRSxXQUFXO0VBQ3BCUyxtQkFBbUIsRUFBRTtBQUN2QixDQUFDIiwiaWdub3JlTGlzdCI6W119