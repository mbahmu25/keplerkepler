"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _base = _interopRequireDefault(require("../base"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var LightAndShadow = exports["default"] = /*#__PURE__*/function (_Component) {
  function LightAndShadow() {
    (0, _classCallCheck2["default"])(this, LightAndShadow);
    return _callSuper(this, LightAndShadow, arguments);
  }
  (0, _inherits2["default"])(LightAndShadow, _Component);
  return (0, _createClass2["default"])(LightAndShadow, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], this.props, /*#__PURE__*/_react["default"].createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M1.91925 7.57675C2.13661 4.40791 4.776 1.90479 8.00002 1.90479C11.3663 1.90479 14.0953 4.63372 14.0953 8.00002C14.0953 11.3663 11.3663 14.0953 8.00002 14.0953C4.74735 14.0953 2.08974 11.5475 1.91403 8.33866H1.90479V7.57675H1.91925ZM8.00002 12.4021V13.4701C6.784 13.4701 5.66065 13.0733 4.75239 12.4021H8.00002ZM8.00002 11.6402V10.3704H3.0688C3.29618 10.8426 3.58938 11.2771 3.9365 11.662V11.6402H8.00002ZM8.00002 9.60849V8.33866H2.54025C2.56708 8.77796 2.64576 9.20325 2.77025 9.60849H8.00002ZM8.00002 7.57675V6.3069H2.79701C2.66543 6.71153 2.57974 7.13686 2.54607 7.57675H8.00002ZM8.00002 2.52994V3.51325H4.87018C5.75697 2.8935 6.83604 2.52994 8.00002 2.52994ZM3.9941 4.27516H8.00002V5.54499H3.11048C3.34449 5.07982 3.64294 4.65264 3.9941 4.27516Z"
      }));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(LightAndShadow, "propTypes", {
  /** Set the height of the icon, ex. '16px' */
  height: _propTypes["default"].string
});
(0, _defineProperty2["default"])(LightAndShadow, "defaultProps", {
  height: '16px',
  viewBox: '0 0 16 16',
  predefinedClassName: 'data-ex-icons-light-and-shadow'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9iYXNlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiX2NhbGxTdXBlciIsIm8iLCJfZ2V0UHJvdG90eXBlT2YyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJMaWdodEFuZFNoYWRvdyIsImV4cG9ydHMiLCJfQ29tcG9uZW50IiwiX2NsYXNzQ2FsbENoZWNrMiIsImFyZ3VtZW50cyIsIl9pbmhlcml0czIiLCJfY3JlYXRlQ2xhc3MyIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwicHJvcHMiLCJmaWxsUnVsZSIsImNsaXBSdWxlIiwiZCIsIkNvbXBvbmVudCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJoZWlnaHQiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJ2aWV3Qm94IiwicHJlZGVmaW5lZENsYXNzTmFtZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21tb24vaWNvbnMvZWZmZWN0cy9saWdodC1hbmQtc2hhZG93LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQmFzZSBmcm9tICcuLi9iYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGlnaHRBbmRTaGFkb3cgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKiBTZXQgdGhlIGhlaWdodCBvZiB0aGUgaWNvbiwgZXguICcxNnB4JyAqL1xuICAgIGhlaWdodDogUHJvcFR5cGVzLnN0cmluZ1xuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiAnMTZweCcsXG4gICAgdmlld0JveDogJzAgMCAxNiAxNicsXG4gICAgcHJlZGVmaW5lZENsYXNzTmFtZTogJ2RhdGEtZXgtaWNvbnMtbGlnaHQtYW5kLXNoYWRvdydcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCYXNlIHsuLi50aGlzLnByb3BzfT5cbiAgICAgICAgPHBhdGhcbiAgICAgICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgICAgIGNsaXBSdWxlPVwiZXZlbm9kZFwiXG4gICAgICAgICAgZD1cIk0xLjkxOTI1IDcuNTc2NzVDMi4xMzY2MSA0LjQwNzkxIDQuNzc2IDEuOTA0NzkgOC4wMDAwMiAxLjkwNDc5QzExLjM2NjMgMS45MDQ3OSAxNC4wOTUzIDQuNjMzNzIgMTQuMDk1MyA4LjAwMDAyQzE0LjA5NTMgMTEuMzY2MyAxMS4zNjYzIDE0LjA5NTMgOC4wMDAwMiAxNC4wOTUzQzQuNzQ3MzUgMTQuMDk1MyAyLjA4OTc0IDExLjU0NzUgMS45MTQwMyA4LjMzODY2SDEuOTA0NzlWNy41NzY3NUgxLjkxOTI1Wk04LjAwMDAyIDEyLjQwMjFWMTMuNDcwMUM2Ljc4NCAxMy40NzAxIDUuNjYwNjUgMTMuMDczMyA0Ljc1MjM5IDEyLjQwMjFIOC4wMDAwMlpNOC4wMDAwMiAxMS42NDAyVjEwLjM3MDRIMy4wNjg4QzMuMjk2MTggMTAuODQyNiAzLjU4OTM4IDExLjI3NzEgMy45MzY1IDExLjY2MlYxMS42NDAySDguMDAwMDJaTTguMDAwMDIgOS42MDg0OVY4LjMzODY2SDIuNTQwMjVDMi41NjcwOCA4Ljc3Nzk2IDIuNjQ1NzYgOS4yMDMyNSAyLjc3MDI1IDkuNjA4NDlIOC4wMDAwMlpNOC4wMDAwMiA3LjU3Njc1VjYuMzA2OUgyLjc5NzAxQzIuNjY1NDMgNi43MTE1MyAyLjU3OTc0IDcuMTM2ODYgMi41NDYwNyA3LjU3Njc1SDguMDAwMDJaTTguMDAwMDIgMi41Mjk5NFYzLjUxMzI1SDQuODcwMThDNS43NTY5NyAyLjg5MzUgNi44MzYwNCAyLjUyOTk0IDguMDAwMDIgMi41Mjk5NFpNMy45OTQxIDQuMjc1MTZIOC4wMDAwMlY1LjU0NDk5SDMuMTEwNDhDMy4zNDQ0OSA1LjA3OTgyIDMuNjQyOTQgNC42NTI2NCAzLjk5NDEgNC4yNzUxNlpcIlxuICAgICAgICAvPlxuICAgICAgPC9CYXNlPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxLQUFBLEdBQUFELHNCQUFBLENBQUFGLE9BQUE7QUFBMkIsU0FBQUkseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFOLHdCQUFBTSxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxTQUFBSixDQUFBLGVBQUFBLENBQUEsZ0JBQUFLLE9B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