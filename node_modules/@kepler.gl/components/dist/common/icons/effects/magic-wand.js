"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _base = _interopRequireDefault(require("../base"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var MagicWand = exports["default"] = /*#__PURE__*/function (_Component) {
  function MagicWand() {
    (0, _classCallCheck2["default"])(this, MagicWand);
    return _callSuper(this, MagicWand, arguments);
  }
  (0, _inherits2["default"])(MagicWand, _Component);
  return (0, _createClass2["default"])(MagicWand, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], this.props, /*#__PURE__*/_react["default"].createElement("g", {
        clipPath: "url(#clip0_129_11251)"
      }, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M18.7071 16L10 7.29298C9.80957 7.11112 9.55636 7.00964 9.29301 7.00964C9.02967 7.00964 8.77645 7.11112 8.58599 7.29298L7.29299 8.58598C7.10576 8.77365 7.00061 9.02792 7.00061 9.29301C7.00061 9.5581 7.10576 9.81237 7.29299 10L15.9995 18.7071C16.1872 18.8943 16.4415 18.9994 16.7066 18.9994C16.9716 18.9994 17.2259 18.8943 17.4136 18.7071L18.7071 17.4138C18.8 17.321 18.8736 17.2108 18.9239 17.0895C18.9742 16.9682 19 16.8381 19 16.7068C19 16.5755 18.9742 16.4455 18.9239 16.3242C18.8736 16.2028 18.8 16.0929 18.7071 16ZM8.00004 9.29298L9.29299 8.00003L11.793 10.5L10.4997 11.7935L7.99969 9.29348L8.00004 9.29298ZM16.7066 18L11.2066 12.5005L12.5 11.2071L18 16.7071L16.7066 18Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M5.99999 11L5 12L5.99999 13L6.99998 12L5.99999 11Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M12 5.00001L11 6L12 6.99999L13 6L12 5.00001Z"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M5.99999 5.00001L5 6L5.99999 6.99999L6.99998 6L5.99999 5.00001Z"
      })), /*#__PURE__*/_react["default"].createElement("defs", null, /*#__PURE__*/_react["default"].createElement("clipPath", {
        id: "clip0_129_11251"
      }, /*#__PURE__*/_react["default"].createElement("rect", {
        width: "16",
        height: "16",
        transform: "translate(4 4)"
      }))), ' ');
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(MagicWand, "propTypes", {
  /** Set the height of the icon, ex. '16px' */
  height: _propTypes["default"].string
});
(0, _defineProperty2["default"])(MagicWand, "defaultProps", {
  height: '16px',
  viewBox: '2 2 20 20',
  predefinedClassName: 'data-ex-icons-effects-magic-wand'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9iYXNlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiX2NhbGxTdXBlciIsIm8iLCJfZ2V0UHJvdG90eXBlT2YyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJNYWdpY1dhbmQiLCJleHBvcnRzIiwiX0NvbXBvbmVudCIsIl9jbGFzc0NhbGxDaGVjazIiLCJhcmd1bWVudHMiLCJfaW5oZXJpdHMyIiwiX2NyZWF0ZUNsYXNzMiIsImtleSIsInZhbHVlIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsInByb3BzIiwiY2xpcFBhdGgiLCJkIiwiaWQiLCJ3aWR0aCIsImhlaWdodCIsInRyYW5zZm9ybSIsIkNvbXBvbmVudCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJ2aWV3Qm94IiwicHJlZGVmaW5lZENsYXNzTmFtZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21tb24vaWNvbnMvZWZmZWN0cy9tYWdpYy13YW5kLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgQmFzZSBmcm9tICcuLi9iYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFnaWNXYW5kIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAvKiogU2V0IHRoZSBoZWlnaHQgb2YgdGhlIGljb24sIGV4LiAnMTZweCcgKi9cbiAgICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmdcbiAgfTtcblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogJzE2cHgnLFxuICAgIHZpZXdCb3g6ICcyIDIgMjAgMjAnLFxuICAgIHByZWRlZmluZWRDbGFzc05hbWU6ICdkYXRhLWV4LWljb25zLWVmZmVjdHMtbWFnaWMtd2FuZCdcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCYXNlIHsuLi50aGlzLnByb3BzfT5cbiAgICAgICAgPGcgY2xpcFBhdGg9XCJ1cmwoI2NsaXAwXzEyOV8xMTI1MSlcIj5cbiAgICAgICAgICA8cGF0aCBkPVwiTTE4LjcwNzEgMTZMMTAgNy4yOTI5OEM5LjgwOTU3IDcuMTExMTIgOS41NTYzNiA3LjAwOTY0IDkuMjkzMDEgNy4wMDk2NEM5LjAyOTY3IDcuMDA5NjQgOC43NzY0NSA3LjExMTEyIDguNTg1OTkgNy4yOTI5OEw3LjI5Mjk5IDguNTg1OThDNy4xMDU3NiA4Ljc3MzY1IDcuMDAwNjEgOS4wMjc5MiA3LjAwMDYxIDkuMjkzMDFDNy4wMDA2MSA5LjU1ODEgNy4xMDU3NiA5LjgxMjM3IDcuMjkyOTkgMTBMMTUuOTk5NSAxOC43MDcxQzE2LjE4NzIgMTguODk0MyAxNi40NDE1IDE4Ljk5OTQgMTYuNzA2NiAxOC45OTk0QzE2Ljk3MTYgMTguOTk5NCAxNy4yMjU5IDE4Ljg5NDMgMTcuNDEzNiAxOC43MDcxTDE4LjcwNzEgMTcuNDEzOEMxOC44IDE3LjMyMSAxOC44NzM2IDE3LjIxMDggMTguOTIzOSAxNy4wODk1QzE4Ljk3NDIgMTYuOTY4MiAxOSAxNi44MzgxIDE5IDE2LjcwNjhDMTkgMTYuNTc1NSAxOC45NzQyIDE2LjQ0NTUgMTguOTIzOSAxNi4zMjQyQzE4Ljg3MzYgMTYuMjAyOCAxOC44IDE2LjA5MjkgMTguNzA3MSAxNlpNOC4wMDAwNCA5LjI5Mjk4TDkuMjkyOTkgOC4wMDAwM0wxMS43OTMgMTAuNUwxMC40OTk3IDExLjc5MzVMNy45OTk2OSA5LjI5MzQ4TDguMDAwMDQgOS4yOTI5OFpNMTYuNzA2NiAxOEwxMS4yMDY2IDEyLjUwMDVMMTIuNSAxMS4yMDcxTDE4IDE2LjcwNzFMMTYuNzA2NiAxOFpcIiAvPlxuICAgICAgICAgIDxwYXRoIGQ9XCJNNS45OTk5OSAxMUw1IDEyTDUuOTk5OTkgMTNMNi45OTk5OCAxMkw1Ljk5OTk5IDExWlwiIC8+XG4gICAgICAgICAgPHBhdGggZD1cIk0xMiA1LjAwMDAxTDExIDZMMTIgNi45OTk5OUwxMyA2TDEyIDUuMDAwMDFaXCIgLz5cbiAgICAgICAgICA8cGF0aCBkPVwiTTUuOTk5OTkgNS4wMDAwMUw1IDZMNS45OTk5OSA2Ljk5OTk5TDYuOTk5OTggNkw1Ljk5OTk5IDUuMDAwMDFaXCIgLz5cbiAgICAgICAgPC9nPlxuICAgICAgICA8ZGVmcz5cbiAgICAgICAgICA8Y2xpcFBhdGggaWQ9XCJjbGlwMF8xMjlfMTEyNTFcIj5cbiAgICAgICAgICAgIDxyZWN0IHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSg0IDQpXCIgLz5cbiAgICAgICAgICA8L2NsaXBQYXRoPlxuICAgICAgICA8L2RlZnM+eycgJ31cbiAgICAgIDwvQmFzZT5cbiAgICApO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsVUFB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