"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _base = _interopRequireDefault(require("./base"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var Clipboard = exports["default"] = /*#__PURE__*/function (_Component) {
  function Clipboard() {
    (0, _classCallCheck2["default"])(this, Clipboard);
    return _callSuper(this, Clipboard, arguments);
  }
  (0, _inherits2["default"])(Clipboard, _Component);
  return (0, _createClass2["default"])(Clipboard, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], this.props, /*#__PURE__*/_react["default"].createElement("path", {
        transform: "translate(6.000000, 0.000000)",
        d: "M46.8184484,5.81818182 L34.5871288,5.81818182 C33.3581445,2.44363636 30.1393762,7.10542736e-15 26.3353772,7.10542736e-15 C22.5313783,7.10542736e-15 19.31261,2.44363636 18.0836257,5.81818182 L5.85230605,5.81818182 C2.63353772,5.81818182 0,8.43636364 0,11.6363636 L0,58.1818182 C0,61.3818182 2.63353772,64 5.85230605,64 L46.8184484,64 C50.0372167,64 52.6707545,61.3818182 52.6707545,58.1818182 L52.6707545,11.6363636 C52.6707545,8.43636364 50.0372167,5.81818182 46.8184484,5.81818182 L46.8184484,5.81818182 Z M26.3353772,5.81818182 C27.9447614,5.81818182 29.2615303,7.12727273 29.2615303,8.72727273 C29.2615303,10.3272727 27.9447614,11.6363636 26.3353772,11.6363636 C24.7259931,11.6363636 23.4092242,10.3272727 23.4092242,8.72727273 C23.4092242,7.12727273 24.7259931,5.81818182 26.3353772,5.81818182 L26.3353772,5.81818182 Z M46.8184484,58.1818182 L5.85230605,58.1818182 L5.85230605,11.6363636 L11.7046121,11.6363636 L11.7046121,20.3636364 L40.9661424,20.3636364 L40.9661424,11.6363636 L46.8184484,11.6363636 L46.8184484,58.1818182 L46.8184484,58.1818182 Z"
      }));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(Clipboard, "defaultProps", {
  height: '16px',
  predefinedClassName: 'data-ex-icons-clipboard'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfYmFzZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJfY2FsbFN1cGVyIiwibyIsIl9nZXRQcm90b3R5cGVPZjIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImNvbnN0cnVjdG9yIiwiYXBwbHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsIkNsaXBib2FyZCIsImV4cG9ydHMiLCJfQ29tcG9uZW50IiwiX2NsYXNzQ2FsbENoZWNrMiIsImFyZ3VtZW50cyIsIl9pbmhlcml0czIiLCJfY3JlYXRlQ2xhc3MyIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwicHJvcHMiLCJ0cmFuc2Zvcm0iLCJkIiwiQ29tcG9uZW50IiwiX2RlZmluZVByb3BlcnR5MiIsImhlaWdodCIsInByZWRlZmluZWRDbGFzc05hbWUiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbW9uL2ljb25zL2NsaXBib2FyZC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQmFzZSwge0Jhc2VQcm9wc30gZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2xpcGJvYXJkIGV4dGVuZHMgQ29tcG9uZW50PFBhcnRpYWw8QmFzZVByb3BzPj4ge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogJzE2cHgnLFxuICAgIHByZWRlZmluZWRDbGFzc05hbWU6ICdkYXRhLWV4LWljb25zLWNsaXBib2FyZCdcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCYXNlIHsuLi50aGlzLnByb3BzfT5cbiAgICAgICAgPHBhdGhcbiAgICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoNi4wMDAwMDAsIDAuMDAwMDAwKVwiXG4gICAgICAgICAgZD1cIk00Ni44MTg0NDg0LDUuODE4MTgxODIgTDM0LjU4NzEyODgsNS44MTgxODE4MiBDMzMuMzU4MTQ0NSwyLjQ0MzYzNjM2IDMwLjEzOTM3NjIsNy4xMDU0MjczNmUtMTUgMjYuMzM1Mzc3Miw3LjEwNTQyNzM2ZS0xNSBDMjIuNTMxMzc4Myw3LjEwNTQyNzM2ZS0xNSAxOS4zMTI2MSwyLjQ0MzYzNjM2IDE4LjA4MzYyNTcsNS44MTgxODE4MiBMNS44NTIzMDYwNSw1LjgxODE4MTgyIEMyLjYzMzUzNzcyLDUuODE4MTgxODIgMCw4LjQzNjM2MzY0IDAsMTEuNjM2MzYzNiBMMCw1OC4xODE4MTgyIEMwLDYxLjM4MTgxODIgMi42MzM1Mzc3Miw2NCA1Ljg1MjMwNjA1LDY0IEw0Ni44MTg0NDg0LDY0IEM1MC4wMzcyMTY3LDY0IDUyLjY3MDc1NDUsNjEuMzgxODE4MiA1Mi42NzA3NTQ1LDU4LjE4MTgxODIgTDUyLjY3MDc1NDUsMTEuNjM2MzYzNiBDNTIuNjcwNzU0NSw4LjQzNjM2MzY0IDUwLjAzNzIxNjcsNS44MTgxODE4MiA0Ni44MTg0NDg0LDUuODE4MTgxODIgTDQ2LjgxODQ0ODQsNS44MTgxODE4MiBaIE0yNi4zMzUzNzcyLDUuODE4MTgxODIgQzI3Ljk0NDc2MTQsNS44MTgxODE4MiAyOS4yNjE1MzAzLDcuMTI3MjcyNzMgMjkuMjYxNTMwMyw4LjcyNzI3MjczIEMyOS4yNjE1MzAzLDEwLjMyNzI3MjcgMjcuOTQ0NzYxNCwxMS42MzYzNjM2IDI2LjMzNTM3NzIsMTEuNjM2MzYzNiBDMjQuNzI1OTkzMSwxMS42MzYzNjM2IDIzLjQwOTIyNDIsMTAuMzI3MjcyNyAyMy40MDkyMjQyLDguNzI3MjcyNzMgQzIzLjQwOTIyNDIsNy4xMjcyNzI3MyAyNC43MjU5OTMxLDUuODE4MTgxODIgMjYuMzM1Mzc3Miw1LjgxODE4MTgyIEwyNi4zMzUzNzcyLDUuODE4MTgxODIgWiBNNDYuODE4NDQ4NCw1OC4xODE4MTgyIEw1Ljg1MjMwNjA1LDU4LjE4MTgxODIgTDUuODUyMzA2MDUsMTEuNjM2MzYzNiBMMTEuNzA0NjEyMSwxMS42MzYzNjM2IEwxMS43MDQ2MTIxLDIwLjM2MzYzNjQgTDQwLjk2NjE0MjQsMjAuMzYzNjM2NCBMNDAuOTY2MTQyNCwxMS42MzYzNjM2IEw0Ni44MTg0NDg0LDExLjYzNjM2MzYgTDQ2LjgxODQ0ODQsNTguMTgxODE4MiBMNDYuODE4NDQ4NCw1OC4xODE4MTgyIFpcIlxuICAgICAgICAvPlxuICAgICAgPC9CYXNlPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxLQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFBdUMsU0FBQUcseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFMLHdCQUFBSyxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxTQUFBSixD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