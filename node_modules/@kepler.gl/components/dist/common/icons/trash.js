"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _base = _interopRequireDefault(require("./base"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var Trash = exports["default"] = /*#__PURE__*/function (_Component) {
  function Trash() {
    (0, _classCallCheck2["default"])(this, Trash);
    return _callSuper(this, Trash, arguments);
  }
  (0, _inherits2["default"])(Trash, _Component);
  return (0, _createClass2["default"])(Trash, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base["default"], this.props, /*#__PURE__*/_react["default"].createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M6.09647 1.76979C6.21891 1.64735 6.38496 1.57857 6.55811 1.57857H9.4424C9.61554 1.57857 9.7816 1.64735 9.90404 1.76979C10.0265 1.89222 10.0953 2.05828 10.0953 2.23143V2.88429H5.90525V2.23143C5.90525 2.05828 5.97404 1.89222 6.09647 1.76979ZM4.32668 2.88429V2.23143C4.32668 1.63962 4.56178 1.07204 4.98025 0.65357C5.39873 0.235096 5.9663 0 6.55811 0H9.4424C10.0342 0 10.6018 0.235096 11.0203 0.65357C11.4387 1.07204 11.6738 1.63962 11.6738 2.23143V2.88429L14.4896 2.88429C14.9256 2.88429 15.2789 3.23766 15.2789 3.67357C15.2789 4.10948 14.9256 4.46286 14.4896 4.46286H13.837V13.7686C13.837 14.3604 13.6019 14.928 13.1835 15.3464C12.765 15.7649 12.1974 16 11.6056 16H4.3949C3.80308 16 3.23551 15.7649 2.81704 15.3464C2.39856 14.928 2.16347 14.3604 2.16347 13.7686V4.46286H1.51035C1.07444 4.46286 0.721069 4.10948 0.721069 3.67357C0.721069 3.23766 1.07444 2.88429 1.51035 2.88429L4.32668 2.88429ZM3.74204 13.7686V4.46286H12.2585V13.7686C12.2585 13.9417 12.1897 14.1078 12.0673 14.2302C11.9448 14.3526 11.7788 14.4214 11.6056 14.4214H4.3949C4.22175 14.4214 4.05569 14.3526 3.93326 14.2302C3.81082 14.1078 3.74204 13.9417 3.74204 13.7686Z"
      }));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(Trash, "defaultProps", {
  height: '16px',
  viewBox: '0 0 16 16',
  predefinedClassName: 'data-ex-icons-trash'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfYmFzZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJfY2FsbFN1cGVyIiwibyIsIl9nZXRQcm90b3R5cGVPZjIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImNvbnN0cnVjdG9yIiwiYXBwbHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsIlRyYXNoIiwiZXhwb3J0cyIsIl9Db21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2syIiwiYXJndW1lbnRzIiwiX2luaGVyaXRzMiIsIl9jcmVhdGVDbGFzczIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wcyIsImZpbGxSdWxlIiwiY2xpcFJ1bGUiLCJkIiwiQ29tcG9uZW50IiwiX2RlZmluZVByb3BlcnR5MiIsImhlaWdodCIsInZpZXdCb3giLCJwcmVkZWZpbmVkQ2xhc3NOYW1lIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1vbi9pY29ucy90cmFzaC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQmFzZSwge0Jhc2VQcm9wc30gZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJhc2ggZXh0ZW5kcyBDb21wb25lbnQ8UGFydGlhbDxCYXNlUHJvcHM+PiB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiAnMTZweCcsXG4gICAgdmlld0JveDogJzAgMCAxNiAxNicsXG4gICAgcHJlZGVmaW5lZENsYXNzTmFtZTogJ2RhdGEtZXgtaWNvbnMtdHJhc2gnXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8QmFzZSB7Li4udGhpcy5wcm9wc30+XG4gICAgICAgIDxwYXRoXG4gICAgICAgICAgZmlsbFJ1bGU9XCJldmVub2RkXCJcbiAgICAgICAgICBjbGlwUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgICAgIGQ9XCJNNi4wOTY0NyAxLjc2OTc5QzYuMjE4OTEgMS42NDczNSA2LjM4NDk2IDEuNTc4NTcgNi41NTgxMSAxLjU3ODU3SDkuNDQyNEM5LjYxNTU0IDEuNTc4NTcgOS43ODE2IDEuNjQ3MzUgOS45MDQwNCAxLjc2OTc5QzEwLjAyNjUgMS44OTIyMiAxMC4wOTUzIDIuMDU4MjggMTAuMDk1MyAyLjIzMTQzVjIuODg0MjlINS45MDUyNVYyLjIzMTQzQzUuOTA1MjUgMi4wNTgyOCA1Ljk3NDA0IDEuODkyMjIgNi4wOTY0NyAxLjc2OTc5Wk00LjMyNjY4IDIuODg0MjlWMi4yMzE0M0M0LjMyNjY4IDEuNjM5NjIgNC41NjE3OCAxLjA3MjA0IDQuOTgwMjUgMC42NTM1N0M1LjM5ODczIDAuMjM1MDk2IDUuOTY2MyAwIDYuNTU4MTEgMEg5LjQ0MjRDMTAuMDM0MiAwIDEwLjYwMTggMC4yMzUwOTYgMTEuMDIwMyAwLjY1MzU3QzExLjQzODcgMS4wNzIwNCAxMS42NzM4IDEuNjM5NjIgMTEuNjczOCAyLjIzMTQzVjIuODg0MjlMMTQuNDg5NiAyLjg4NDI5QzE0LjkyNTYgMi44ODQyOSAxNS4yNzg5IDMuMjM3NjYgMTUuMjc4OSAzLjY3MzU3QzE1LjI3ODkgNC4xMDk0OCAxNC45MjU2IDQuNDYyODYgMTQuNDg5NiA0LjQ2Mjg2SDEzLjgzN1YxMy43Njg2QzEzLjgzNyAxNC4zNjA0IDEzLjYwMTkgMTQuOTI4IDEzLjE4MzUgMTUuMzQ2NEMxMi43NjUgMTUuNzY0OSAxMi4xOTc0IDE2IDExLjYwNTYgMTZINC4zOTQ5QzMuODAzMDggMTYgMy4yMzU1MSAxNS43NjQ5IDIuODE3MDQgMTUuMzQ2NEMyLjM5ODU2IDE0LjkyOCAyLjE2MzQ3IDE0LjM2MDQgMi4xNjM0NyAxMy43Njg2VjQuNDYyODZIMS41MTAzNUMxLjA3NDQ0IDQuNDYyODYgMC43MjEwNjkgNC4xMDk0OCAwLjcyMTA2OSAzLjY3MzU3QzAuNzIxMDY5IDMuMjM3NjYgMS4wNzQ0NCAyLjg4NDI5IDEuNTEwMzUgMi44ODQyOUw0LjMyNjY4IDIuODg0MjlaTTMuNzQyMDQgMTMuNzY4NlY0LjQ2Mjg2SDEyLjI1ODVWMTMuNzY4NkMxMi4yNTg1IDEzLjk0MTcgMTIuMTg5NyAxNC4xMDc4IDEyLjA2NzMgMTQuMjMwMkMxMS45NDQ4IDE0LjM1MjYgMTEuNzc4OCAxNC40MjE0IDExLjYwNTYgMTQuNDIxNEg0LjM5NDlDNC4yMjE3NSAxNC40MjE0IDQuMDU1NjkgMTQuMzUyNiAzLjkzMzI2IDE0LjIzMDJDMy44MTA4MiAxNC4xMDc4IDMuNzQyMDQgMTMuOTQxNyAzLjc0MjA0IDEzLjc2ODZaXCJcbiAgICAgICAgLz5cbiAgICAgIDwvQmFzZT5cbiAgICApO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsS0FBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQXVDLFNBQUFHLHlCQUFBQyxDQUFBLDZCQUFBQyxPQUFBLG1CQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxDQUFBLFdBQUFBLENBQUEs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