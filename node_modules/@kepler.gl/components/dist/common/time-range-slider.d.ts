import React from 'react';
import RangeSliderFactory from './range-slider';
import TimeSliderMarkerFactory from './time-slider-marker';
import PlaybackControlsFactory from './animation-control/playback-controls';
import TimeRangeSliderTimeTitleFactory from './time-range-slider-time-title';
import { LineChart, Timeline, AnimationConfig, TimeBins } from '@kepler.gl/types';
import { ActionHandler, setFilterPlot } from '@kepler.gl/actions';
import AnimationControlFactory from './animation-control/animation-control';
import { BaseComponentProps } from '../types';
declare type TimeRangeSliderProps = {
    domain?: [number, number];
    value: [number, number];
    isEnlarged?: boolean;
    isMinified?: boolean;
    hideTimeTitle?: boolean;
    isAnimating: boolean;
    timeFormat: string;
    timezone?: string | null;
    timeBins?: TimeBins;
    plotType?: {
        [key: string]: any;
    };
    lineChart?: LineChart;
    step: number;
    isAnimatable?: boolean;
    speed: number;
    animationWindow: string;
    resetAnimation?: () => void;
    toggleAnimation: () => void;
    updateAnimationSpeed?: (val: number) => void;
    setFilterAnimationWindow?: (id: string) => void;
    setFilterPlot?: ActionHandler<typeof setFilterPlot>;
    onChange: (v: number[]) => void;
    timeline: Timeline;
    invertTrendColor?: boolean;
    animationConfig?: AnimationConfig;
};
export declare type StyledSliderContainerProps = BaseComponentProps & {
    isEnlarged?: boolean;
};
export declare function getTimeBinsForInterval(timeBins: TimeBins | undefined, interval: number): {};
declare function TimeRangeSliderFactory(PlaybackControls: ReturnType<typeof PlaybackControlsFactory>, RangeSlider: ReturnType<typeof RangeSliderFactory>, TimeSliderMarker: ReturnType<typeof TimeSliderMarkerFactory>, TimeRangeSliderTimeTitle: ReturnType<typeof TimeRangeSliderTimeTitleFactory>, AnimationControl: ReturnType<typeof AnimationControlFactory>): React.NamedExoticComponent<TimeRangeSliderProps>;
declare namespace TimeRangeSliderFactory {
    var deps: (typeof RangeSliderFactory | typeof TimeSliderMarkerFactory | typeof PlaybackControlsFactory | typeof TimeRangeSliderTimeTitleFactory | typeof AnimationControlFactory)[];
}
export default TimeRangeSliderFactory;
