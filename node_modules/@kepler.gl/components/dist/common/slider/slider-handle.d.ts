import React, { Component, RefObject } from 'react';
import MouseEventHandler from './mouse-event';
import { StyleRangeSliderType } from './slider';
import { BaseComponentProps } from '../../types';
export declare type StyledSliderHandleProps = StyledSliderTooltipProps & {
    vertical?: boolean;
    active?: boolean;
    ref: RefObject<Element>;
};
export declare type StyledSliderTooltipProps = BaseComponentProps & {
    sliderHandleWidth: number;
};
declare type SliderHandleProps = {
    sliderHandleWidth: number;
    left: string;
    display: boolean;
    valueListener: (distance: number) => void;
    vertical: boolean;
    track: RefObject<StyleRangeSliderType>;
    showTooltip: boolean;
    value?: number;
};
export default class SliderHandle extends Component {
    props: SliderHandleProps;
    static defaultProps: {
        sliderHandleWidth: number;
        left: string;
        display: boolean;
        vertical: boolean;
        valueListener: () => void;
        showTooltip: boolean;
    };
    mouseEvent: MouseEventHandler;
    constructor(props: SliderHandleProps);
    state: {
        mouseOver: boolean;
    };
    ref: React.RefObject<HTMLSpanElement>;
    toggleMouseOver: () => void;
    render(): React.JSX.Element;
}
export {};
