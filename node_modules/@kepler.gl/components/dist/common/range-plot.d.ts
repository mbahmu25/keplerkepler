import React, { CSSProperties } from 'react';
import RangeBrushFactory, { OnBrush, RangeBrushProps } from './range-brush';
import HistogramPlotFactory from './histogram-plot';
import LineChartFactory from './line-chart';
import { LineChart as LineChartType, Filter, Bins } from '@kepler.gl/types';
import { Datasets } from '@kepler.gl/table';
interface RangePlotProps {
    onBrush: OnBrush;
    range: number[];
    value: number[];
    width: number;
    plotType: {
        [key: string]: any;
    };
    lineChart?: LineChartType;
    bins?: Bins;
    isEnlarged?: boolean;
    isRanged?: boolean;
    theme: any;
    timeFormat?: string;
    timezone?: string | null;
    playbackControlWidth?: number;
    animationWindow?: string;
    filter?: Filter;
    datasets?: Datasets;
    invertTrendColor?: boolean;
    style: CSSProperties;
}
declare type WithPlotLoadingProps = RangePlotProps & Partial<RangeBrushProps> & {
    setFilterPlot: any;
};
declare function RangePlotFactory(RangeBrush: ReturnType<typeof RangeBrushFactory>, HistogramPlot: ReturnType<typeof HistogramPlotFactory>, LineChartPlot: ReturnType<typeof LineChartFactory>): React.FC<Omit<WithPlotLoadingProps, "theme">>;
declare namespace RangePlotFactory {
    var deps: (typeof RangeBrushFactory | typeof HistogramPlotFactory | typeof LineChartFactory)[];
}
export default RangePlotFactory;
