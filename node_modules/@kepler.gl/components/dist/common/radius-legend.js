"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _d3Scale = require("d3-scale");
var _constants = require("@kepler.gl/constants");
var _utils = require("@kepler.gl/utils");
var _d3Array = require("d3-array");
var _window = require("global/window");
var _templateObject, _templateObject2, _templateObject3; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var StyledLegend = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  width: ", "px;\n  height: ", "px;\n  position: relative;\n  svg {\n    circle {\n      stroke: ", ";\n      fill: none;\n    }\n    line {\n      stroke: ", ";\n      stroke-dasharray: 2, 1;\n    }\n  }\n"])), function (props) {
  return props.width;
}, function (props) {
  return props.height;
}, function (props) {
  return props.theme.borderColorLT;
}, function (props) {
  return props.theme.borderColor;
});
var LabelsOuter = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  text-align: right;\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: ", "px;\n  height: ", "px;\n"])), function (props) {
  return props.width;
}, function (props) {
  return props.height;
});
var tickHeight = 9;
var ValueLabel = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  position: absolute;\n  font-size: ", "px;\n  height: ", "px;\n  line-height: ", "px;\n  margin-top: -", "px;\n  color: ", ";\n  background-color: ", ";\n  padding: 0 2px;\n  border-radius: 2px;\n"])), tickHeight, tickHeight, tickHeight, tickHeight / 2, function (props) {
  return props.theme.textColor;
}, function (props) {
  return props.theme.mapPanelBackgroundColor;
});
var margin = {
  left: 1,
  top: 5,
  right: 2,
  bottom: 5
};
var RadiusLegend = function RadiusLegend(_ref) {
  var scaleType = _ref.scaleType,
    width = _ref.width,
    domain = _ref.domain,
    range = _ref.range,
    fieldType = _ref.fieldType;
  var radiusScale = (0, _react.useMemo)(function () {
    if (scaleType !== _constants.SCALE_TYPES.sqrt) {
      _window.console.warn("Unsupported radius scale type: ".concat(scaleType));
      return undefined;
    }
    if (!Array.isArray(domain) || !domain.every(Number.isFinite)) {
      return undefined;
    }
    return (0, _d3Scale.scaleSqrt)().domain(domain).range(range);
  }, [domain, range, scaleType]);
  var radiusTicks = (0, _react.useMemo)(function () {
    if (radiusScale === undefined) return [];
    var numTicksToFit = Math.min(10, (range[1] - range[0]) * 2 / tickHeight);
    var ticks = radiusScale.ticks(numTicksToFit);
    // Add min and max values
    if (ticks[0] > domain[0]) {
      ticks.unshift(domain[0]);
    }
    if (ticks[ticks.length - 1] < domain[1]) {
      ticks.push(domain[1]);
    }
    // Make sure there is no overlap
    return ticks.reduceRight(function (acc, v) {
      if (acc.length === 0 || Math.abs(radiusScale(acc[0]) - radiusScale(v)) * 2 > tickHeight) {
        // @ts-ignore
        acc.unshift(v);
      }
      return acc;
    }, new Array());
  }, [radiusScale, domain, range]);
  if (!radiusScale || !radiusTicks.length) {
    return null;
  }
  var maxR = Math.ceil(radiusScale((0, _d3Array.max)(radiusTicks) || 0));
  var w = width - margin.left - margin.right;
  var h = maxR * 2;
  var height = h + margin.top + margin.bottom;
  return /*#__PURE__*/_react["default"].createElement(StyledLegend, {
    width: width,
    height: height
  }, /*#__PURE__*/_react["default"].createElement("svg", {
    width: width,
    height: height
  }, /*#__PURE__*/_react["default"].createElement("g", {
    transform: "translate(".concat(margin.left, ",").concat(margin.top, ")")
  }, /*#__PURE__*/_react["default"].createElement("g", null, radiusTicks.map(function (v, i) {
    return /*#__PURE__*/_react["default"].createElement("g", {
      key: i
    }, /*#__PURE__*/_react["default"].createElement("g", {
      transform: "translate(".concat(w, ",").concat(h - radiusScale(v) * 2, ")")
    }, /*#__PURE__*/_react["default"].createElement("line", {
      x1: 0,
      x2: maxR - w
    })));
  })), /*#__PURE__*/_react["default"].createElement("g", null, radiusTicks.map(function (v, i) {
    var r = radiusScale(v);
    return /*#__PURE__*/_react["default"].createElement("g", {
      key: i
    }, /*#__PURE__*/_react["default"].createElement("g", {
      transform: "translate(0,".concat(h - r * 2, ")")
    }, /*#__PURE__*/_react["default"].createElement("circle", {
      cx: maxR,
      cy: r,
      r: Math.max(0, r - 1) /* stroke is drawn outside, hence r-1 */
    })));
  })))), /*#__PURE__*/_react["default"].createElement(LabelsOuter, {
    width: width,
    height: height
  }, radiusTicks.map(function (v, i) {
    return /*#__PURE__*/_react["default"].createElement(ValueLabel, {
      key: i,
      style: {
        right: margin.right,
        top: margin.top + h - radiusScale(v) * 2
      }
    }, (0, _utils.formatNumber)(v, fieldType));
  })));
};
var _default = exports["default"] = RadiusLegend;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,