import { MouseEvent, ReactNode } from 'react';
import { ButtonProps } from './styled-components';
interface IconButtonProps extends ButtonProps {
    collapsed?: boolean;
    theme?: object;
    className?: string;
    onClick?: (event: MouseEvent<HTMLButtonElement>) => void;
    children?: ReactNode;
}
export declare const IconButton: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").Substitute<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, Omit<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
    ref?: ((instance: HTMLButtonElement | null) => void) | import("react").RefObject<HTMLButtonElement> | null | undefined;
}>, never>, "ref" | "link" | "small" | "width" | keyof import("react").ButtonHTMLAttributes<HTMLButtonElement> | "size" | "negative" | "secondary" | "floating" | "cta" | "large" | "inactive"> & import("react").ButtonHTMLAttributes<HTMLButtonElement> & {
    className?: string | undefined;
    ref?: import("react").ForwardedRef<HTMLElement> | undefined;
    children?: ReactNode;
    negative?: boolean | undefined;
    secondary?: boolean | undefined;
    link?: boolean | undefined;
    floating?: boolean | undefined;
    cta?: boolean | undefined;
    large?: boolean | undefined;
    small?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: string | undefined;
    inactive?: boolean | undefined;
    size?: string | undefined;
}, IconButtonProps>> & Omit<import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").Substitute<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, Omit<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
    ref?: ((instance: HTMLButtonElement | null) => void) | import("react").RefObject<HTMLButtonElement> | null | undefined;
}>, never>, ButtonProps>>, keyof import("react").Component<any, {}, any>>;
export default IconButton;
