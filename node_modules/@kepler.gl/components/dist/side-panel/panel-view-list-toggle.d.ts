import React from 'react';
import { PanelListView } from '@kepler.gl/types';
declare type ToggleOptionProps = {
    isActive: boolean;
    onClick: () => void;
    option: (typeof TOGGLE_OPTIONS)[0];
};
declare type PanelViewListToggleProps = {
    mode: PanelListView;
    togglePanelListView: (view: string) => void;
};
export declare const StyledToggleOption: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").Substitute<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void) | React.RefObject<HTMLDivElement> | null | undefined;
}>, never>, {
    active: boolean;
}>>;
declare function ToggleOptionFactory(): React.FC<ToggleOptionProps>;
declare const TOGGLE_OPTIONS: ({
    id: "list";
    iconComponent: ({ height, fill, viewBox, predefinedClassName, ...restProps }: Partial<import("../common/icons").BaseProps>) => React.JSX.Element;
    label: string;
} | {
    id: "byDataset";
    iconComponent: ({ height, fill, viewBox, predefinedClassName, ...restProps }: Partial<import("../common/icons").BaseProps>) => React.JSX.Element;
    label: string;
})[];
declare function PanelViewListToggleFactory(ToggleOption: ReturnType<typeof ToggleOptionFactory>): React.FC<PanelViewListToggleProps>;
declare namespace PanelViewListToggleFactory {
    var deps: (typeof ToggleOptionFactory)[];
}
export default PanelViewListToggleFactory;
