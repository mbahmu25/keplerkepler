"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _panelTab = _interopRequireDefault(require("./panel-tab"));
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var PanelHeaderBottom = _styledComponents["default"].div.attrs({
  className: 'side-side-panel__header__bottom'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: ", ";\n  border-bottom: 1px solid ", ";\n  padding: 0 16px;\n  display: flex;\n  min-height: 30px;\n"])), function (props) {
  return props.theme.sidePanelHeaderBg;
}, function (props) {
  return props.theme.sidePanelHeaderBorder;
});
PanelToggleFactory.deps = [_panelTab["default"]];
function PanelToggleFactory(PanelTab) {
  var PanelToggle = function PanelToggle(_ref) {
    var activePanel = _ref.activePanel,
      panels = _ref.panels,
      togglePanel = _ref.togglePanel;
    var _onClick = (0, _react.useCallback)(function (panel) {
      var callback = panel.onClick || togglePanel;
      callback(panel.id);
    }, [togglePanel]);
    return /*#__PURE__*/_react["default"].createElement(PanelHeaderBottom, null, panels.map(function (panel) {
      return /*#__PURE__*/_react["default"].createElement(PanelTab, {
        key: panel.id,
        panel: panel,
        isActive: activePanel === panel.id,
        onClick: function onClick() {
          return _onClick(panel);
        }
      });
    }));
  };
  return PanelToggle;
}
var _default = exports["default"] = PanelToggleFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcGFuZWxUYWIiLCJfdGVtcGxhdGVPYmplY3QiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJQYW5lbEhlYWRlckJvdHRvbSIsInN0eWxlZCIsImRpdiIsImF0dHJzIiwiY2xhc3NOYW1lIiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbDIiLCJwcm9wcyIsInRoZW1lIiwic2lkZVBhbmVsSGVhZGVyQmciLCJzaWRlUGFuZWxIZWFkZXJCb3JkZXIiLCJQYW5lbFRvZ2dsZUZhY3RvcnkiLCJkZXBzIiwiUGFuZWxUYWJGYWN0b3J5IiwiUGFuZWxUYWIiLCJQYW5lbFRvZ2dsZSIsIl9yZWYiLCJhY3RpdmVQYW5lbCIsInBhbmVscyIsInRvZ2dsZVBhbmVsIiwib25DbGljayIsInVzZUNhbGxiYWNrIiwicGFuZWwiLCJjYWxsYmFjayIsImlkIiwiY3JlYXRlRWxlbWVudCIsIm1hcCIsImtleSIsImlzQWN0aXZlIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NpZGUtcGFuZWwvcGFuZWwtdG9nZ2xlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHt1c2VDYWxsYmFja30gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgUGFuZWxUYWJGYWN0b3J5LCB7UGFuZWxJdGVtfSBmcm9tICcuL3BhbmVsLXRhYic7XG5pbXBvcnQge3RvZ2dsZVNpZGVQYW5lbCwgQWN0aW9uSGFuZGxlcn0gZnJvbSAnQGtlcGxlci5nbC9hY3Rpb25zJztcblxudHlwZSBQYW5lbFRvZ2dsZVByb3BzID0ge1xuICBwYW5lbHM6IFBhbmVsSXRlbVtdO1xuICBhY3RpdmVQYW5lbDogc3RyaW5nIHwgbnVsbDtcbiAgdG9nZ2xlUGFuZWw6IEFjdGlvbkhhbmRsZXI8dHlwZW9mIHRvZ2dsZVNpZGVQYW5lbD47XG59O1xuXG5jb25zdCBQYW5lbEhlYWRlckJvdHRvbSA9IHN0eWxlZC5kaXYuYXR0cnMoe1xuICBjbGFzc05hbWU6ICdzaWRlLXNpZGUtcGFuZWxfX2hlYWRlcl9fYm90dG9tJ1xufSlgXG4gIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuc2lkZVBhbmVsSGVhZGVyQmd9O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5zaWRlUGFuZWxIZWFkZXJCb3JkZXJ9O1xuICBwYWRkaW5nOiAwIDE2cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1pbi1oZWlnaHQ6IDMwcHg7XG5gO1xuXG5QYW5lbFRvZ2dsZUZhY3RvcnkuZGVwcyA9IFtQYW5lbFRhYkZhY3RvcnldO1xuXG5mdW5jdGlvbiBQYW5lbFRvZ2dsZUZhY3RvcnkoUGFuZWxUYWI6IFJldHVyblR5cGU8dHlwZW9mIFBhbmVsVGFiRmFjdG9yeT4pIHtcbiAgY29uc3QgUGFuZWxUb2dnbGU6IFJlYWN0LkZDPFBhbmVsVG9nZ2xlUHJvcHM+ID0gKHthY3RpdmVQYW5lbCwgcGFuZWxzLCB0b2dnbGVQYW5lbH0pID0+IHtcbiAgICBjb25zdCBvbkNsaWNrID0gdXNlQ2FsbGJhY2soXG4gICAgICBwYW5lbCA9PiB7XG4gICAgICAgIGNvbnN0IGNhbGxiYWNrID0gcGFuZWwub25DbGljayB8fCB0b2dnbGVQYW5lbDtcbiAgICAgICAgY2FsbGJhY2socGFuZWwuaWQpO1xuICAgICAgfSxcbiAgICAgIFt0b2dnbGVQYW5lbF1cbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQYW5lbEhlYWRlckJvdHRvbT5cbiAgICAgICAge3BhbmVscy5tYXAocGFuZWwgPT4gKFxuICAgICAgICAgIDxQYW5lbFRhYlxuICAgICAgICAgICAga2V5PXtwYW5lbC5pZH1cbiAgICAgICAgICAgIHBhbmVsPXtwYW5lbH1cbiAgICAgICAgICAgIGlzQWN0aXZlPXthY3RpdmVQYW5lbCA9PT0gcGFuZWwuaWR9XG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbkNsaWNrKHBhbmVsKX1cbiAgICAgICAgICAvPlxuICAgICAgICApKX1cbiAgICAgIDwvUGFuZWxIZWFkZXJCb3R0b20+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gUGFuZWxUb2dnbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBhbmVsVG9nZ2xlRmFjdG9yeTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsaUJBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLFNBQUEsR0FBQUQsc0JBQUEsQ0FBQUYsT0FBQTtBQUF1RCxJQUFBSSxlQUFBLEVBTHZEO0FBQ0E7QUFBQSxTQUFBQyx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxtQkFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQSxXQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxLQUFBRixDQUFBO0FBQUEsU0FBQVAsd0JBQUFPLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENB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