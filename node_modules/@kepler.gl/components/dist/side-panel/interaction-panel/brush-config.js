"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _rangeSlider = _interopRequireDefault(require("../../common/range-slider"));
var _styledComponents = require("../../common/styled-components");
var _reducers = require("@kepler.gl/reducers");
var _localization = require("@kepler.gl/localization");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
BrushConfigFactory.deps = [_rangeSlider["default"]];
function BrushConfigFactory(RangeSlider) {
  var BrushConfig = function BrushConfig(_ref) {
    var config = _ref.config,
      _onChange = _ref.onChange;
    return /*#__PURE__*/_react["default"].createElement(_styledComponents.SidePanelSection, null, /*#__PURE__*/_react["default"].createElement(_styledComponents.PanelLabel, null, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'misc.brushRadius'
    })), /*#__PURE__*/_react["default"].createElement(RangeSlider, {
      range: _reducers.BRUSH_CONFIG.range,
      value0: 0,
      value1: config.size || 10 / 2,
      step: 0.1,
      isRanged: false,
      onChange: function onChange(value) {
        return _onChange(_objectSpread(_objectSpread({}, config), {}, {
          size: value[1]
        }));
      },
      inputTheme: "secondary"
    }));
  };
  return BrushConfig;
}
var _default = exports["default"] = BrushConfigFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yYW5nZVNsaWRlciIsIl9zdHlsZWRDb21wb25lbnRzIiwiX3JlZHVjZXJzIiwiX2xvY2FsaXphdGlvbiIsIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5IiwiQnJ1c2hDb25maWdGYWN0b3J5IiwiZGVwcyIsIlJhbmdlU2xpZGVyRmFjdG9yeSIsIlJhbmdlU2xpZGVyIiwiQnJ1c2hDb25maWciLCJfcmVmIiwiY29uZmlnIiwib25DaGFuZ2UiLCJjcmVhdGVFbGVtZW50IiwiU2lkZVBhbmVsU2VjdGlvbiIsIlBhbmVsTGFiZWwiLCJGb3JtYXR0ZWRNZXNzYWdlIiwiaWQiLCJyYW5nZSIsIkJSVVNIX0NPTkZJRyIsInZhbHVlMCIsInZhbHVlMSIsInNpemUiLCJzdGVwIiwiaXNSYW5nZWQiLCJ2YWx1ZSIsImlucHV0VGhlbWUiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2lkZS1wYW5lbC9pbnRlcmFjdGlvbi1wYW5lbC9icnVzaC1jb25maWcudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmFuZ2VTbGlkZXJGYWN0b3J5IGZyb20gJy4uLy4uL2NvbW1vbi9yYW5nZS1zbGlkZXInO1xuXG5pbXBvcnQge1BhbmVsTGFiZWwsIFNpZGVQYW5lbFNlY3Rpb259IGZyb20gJy4uLy4uL2NvbW1vbi9zdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQge0JSVVNIX0NPTkZJR30gZnJvbSAnQGtlcGxlci5nbC9yZWR1Y2Vycyc7XG5pbXBvcnQge0Zvcm1hdHRlZE1lc3NhZ2V9IGZyb20gJ0BrZXBsZXIuZ2wvbG9jYWxpemF0aW9uJztcblxuQnJ1c2hDb25maWdGYWN0b3J5LmRlcHMgPSBbUmFuZ2VTbGlkZXJGYWN0b3J5XTtcblxudHlwZSBCcnVzaENvbmZpZ1Byb3BzID0ge1xuICBjb25maWc6IHtcbiAgICBzaXplOiBudW1iZXI7XG4gIH07XG4gIG9uQ2hhbmdlOiAoY29uZmlnOiB7c2l6ZTogbnVtYmVyfSkgPT4gdm9pZDtcbn07XG5cbmZ1bmN0aW9uIEJydXNoQ29uZmlnRmFjdG9yeShSYW5nZVNsaWRlcjogUmV0dXJuVHlwZTx0eXBlb2YgUmFuZ2VTbGlkZXJGYWN0b3J5Pikge1xuICBjb25zdCBCcnVzaENvbmZpZyA9ICh7Y29uZmlnLCBvbkNoYW5nZX06IEJydXNoQ29uZmlnUHJvcHMpID0+IChcbiAgICA8U2lkZVBhbmVsU2VjdGlvbj5cbiAgICAgIDxQYW5lbExhYmVsPlxuICAgICAgICA8Rm9ybWF0dGVkTWVzc2FnZSBpZD17J21pc2MuYnJ1c2hSYWRpdXMnfSAvPlxuICAgICAgPC9QYW5lbExhYmVsPlxuICAgICAgPFJhbmdlU2xpZGVyXG4gICAgICAgIHJhbmdlPXtCUlVTSF9DT05GSUcucmFuZ2V9XG4gICAgICAgIHZhbHVlMD17MH1cbiAgICAgICAgdmFsdWUxPXtjb25maWcuc2l6ZSB8fCAxMCAvIDJ9XG4gICAgICAgIHN0ZXA9ezAuMX1cbiAgICAgICAgaXNSYW5nZWQ9e2ZhbHNlfVxuICAgICAgICBvbkNoYW5nZT17dmFsdWUgPT4gb25DaGFuZ2Uoey4uLmNvbmZpZywgc2l6ZTogdmFsdWVbMV19KX1cbiAgICAgICAgaW5wdXRUaGVtZT1cInNlY29uZGFyeVwiXG4gICAgICAvPlxuICAgIDwvU2lkZVBhbmVsU2VjdGlvbj5cbiAgKTtcblxuICByZXR1cm4gQnJ1c2hDb25maWc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJydXNoQ29uZmlnRmFjdG9yeTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBRSxpQkFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsU0FBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksYUFBQSxHQUFBSixPQUFBO0FBQXlELFNBQUFLLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQUMsQ0FBQSxHQUFBSCxNQUFBLENBQUFFLHFCQUFBLENBQUFMLENBQUEsR0FBQUMsQ0FBQSxLQUFBSyxDQUFBLEdBQUFBLENBQUEsQ0FBQUMsTUFBQSxXQUFBTixDQUFBLFdBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQVIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFRLFVBQUEsT0FBQVAsQ0FBQSxDQUFBUSxJQUFBLENBQUFDLEtBQUEsQ0FBQVQsQ0FBQSxFQUFBSSxDQUFBLFlBQUFKLENBQUE7QUFBQSxTQUFBVSxjQUFBWixDQUFBLGFBQUFDLENBQUEsTUFBQUEsQ0FBQSxHQUFBWSxTQUFBLENBQUFDLE1BQUEsRUFBQWIsQ0FBQSxVQUFBQyxDQUFBLFdBQUFXLFNBQUEsQ0FBQVosQ0FBQSxJQUFBWSxTQUFBLENBQUFaLENBQUEsUUFBQUEsQ0FBQSxPQUFBRixPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxPQUFBYSxPQUFBLFdBQUFkLENBQUEsUUFBQWUsZ0JBQUEsYUFBQWhCLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLENBQUFELENBQUEsU0FBQUUsTUFBQSxDQUFBYyx5QkFBQSxHQUFBZCxNQUFBLENBQUFlLGdCQUFBLENBQUFsQixDQUFBLEVBQUFHLE1BQUEsQ0FBQWMseUJBQUEsQ0FBQWYsQ0FBQSxLQUFBSCxPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxHQUFBYSxPQUFBLFdBQUFkLENBQUEsSUFBQUUsTUFBQSxDQUFBZ0IsY0FBQSxDQUFBbkIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQU4sQ0FBQSxFQUFBRCxDQUFBLGlCQUFBRCxDQUFBLElBUnpEO0FBQ0E7QUFTQW9CLGtCQUFrQixDQUFDQyxJQUFJLEdBQUcsQ0FBQ0MsdUJBQWtCLENBQUM7QUFTOUMsU0FBU0Ysa0JBQWtCQSxDQUFDRyxXQUFrRCxFQUFFO0VBQzlFLElBQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFXQSxDQUFBQyxJQUFBO0lBQUEsSUFBS0MsTUFBTSxHQUFBRCxJQUFBLENBQU5DLE1BQU07TUFBRUMsU0FBUSxHQUFBRixJQUFBLENBQVJFLFFBQVE7SUFBQSxvQkFDcENuQyxNQUFBLFlBQUFvQyxhQUFBLENBQUNoQyxpQkFBQSxDQUFBaUMsZ0JBQWdCLHFCQUNmckMsTUFBQSxZQUFBb0MsYUFBQSxDQUFDaEMsaUJBQUEsQ0FBQWtDLFVBQVUscUJBQ1R0QyxNQUFBLFlBQUFvQyxhQUFBLENBQUM5QixhQUFBLENBQUFpQyxnQkFBZ0I7TUFBQ0MsRUFBRSxFQUFFO0lBQW1CLENBQUUsQ0FDakMsQ0FBQyxlQUNieEMsTUFBQSxZQUFBb0MsYUFBQSxDQUFDTCxXQUFXO01BQ1ZVLEtBQUssRUFBRUMsc0JBQVksQ0FBQ0QsS0FBTTtNQUMxQkUsTUFBTSxFQUFFLENBQUU7TUFDVkMsTUFBTSxFQUFFVixNQUFNLENBQUNXLElBQUksSUFBSSxFQUFFLEdBQUcsQ0FBRTtNQUM5QkMsSUFBSSxFQUFFLEdBQUk7TUFDVkMsUUFBUSxFQUFFLEtBQU07TUFDaEJaLFFBQVEsRUFBRSxTQUFWQSxRQUFRQSxDQUFFYSxLQUFLO1FBQUEsT0FBSWIsU0FBUSxDQUFBZixhQUFBLENBQUFBLGFBQUEsS0FBS2MsTUFBTTtVQUFFVyxJQUFJLEVBQUVHLEtBQUssQ0FBQyxDQUFDO1FBQUMsRUFBQyxDQUFDO01BQUEsQ0FBQztNQUN6REMsVUFBVSxFQUFDO0lBQVcsQ0FDdkIsQ0FDZSxDQUFDO0VBQUEsQ0FDcEI7RUFFRCxPQUFPakIsV0FBVztBQUNwQjtBQUFDLElBQUFrQixRQUFBLEdBQUFDLE9BQUEsY0FFY3ZCLGtCQUFrQiIsImlnbm9yZUxpc3QiOltdfQ==