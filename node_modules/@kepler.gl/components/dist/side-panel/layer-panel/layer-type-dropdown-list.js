"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LayerTypeDropdownListFactory = LayerTypeDropdownListFactory;
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _classnames = _interopRequireDefault(require("classnames"));
var _dropdownList = require("../../common/item-selector/dropdown-list");
var _templateObject, _templateObject2; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var DropdownListWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  ", ";\n  background-color: ", ";\n  border-top: 1px solid ", ";\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  padding: ", "px 0 0 ", "px;\n"])), function (props) {
  return props.theme.dropdownList;
}, function (props) {
  return props.theme.dropdownListBgd;
}, function (props) {
  return props.theme.dropdownListBorderTop;
}, function (props) {
  return props.theme.layerTypeIconPdL;
}, function (props) {
  return props.theme.layerTypeIconPdL;
});
var StyledDropdownListItem = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  padding-bottom: ", "px;\n  padding-right: ", "px;\n\n  &.disabled {\n    pointer-events: none;\n    opacity: 0.3;\n  }\n\n  &.selected {\n    .layer-type-selector__item__icon {\n      border: 1px solid #caf2f4;\n    }\n  }\n\n  &:hover,\n  &.selected {\n    cursor: pointer;\n    .layer-type-selector__item__icon {\n      color: ", ";\n    }\n\n    .layer-type-selector__item__label {\n      color: ", ";\n    }\n  }\n"])), function (props) {
  return props.theme.layerTypeIconPdL;
}, function (props) {
  return props.theme.layerTypeIconPdL;
}, function (props) {
  return props.theme.activeColor;
}, function (props) {
  return props.theme.textColor;
});
function LayerTypeDropdownListFactory() {
  var LayerTypeDropdownList = function LayerTypeDropdownList(_ref) {
    var onOptionSelected = _ref.onOptionSelected,
      options = _ref.options,
      selectedItems = _ref.selectedItems,
      selectionIndex = _ref.selectionIndex,
      customListItemComponent = _ref.customListItemComponent;
    var onSelectOption = (0, _react.useCallback)(function (e, value) {
      e.preventDefault();
      onOptionSelected(value, e);
    }, [onOptionSelected]);
    var ListItemComponent = customListItemComponent;
    return /*#__PURE__*/_react["default"].createElement(DropdownListWrapper, {
      className: _dropdownList.classList.list
    }, options.map(function (value, i) {
      return /*#__PURE__*/_react["default"].createElement(StyledDropdownListItem, {
        className: (0, _classnames["default"])('layer-type-selector__item', {
          selected: selectedItems.find(function (it) {
            return it.id === value.id;
          }),
          hover: selectionIndex === i,
          disabled: value.disabled
        }),
        key: "".concat(value.id, "_").concat(i),
        onMouseDown: function onMouseDown(e) {
          return onSelectOption(e, value);
        },
        onClick: function onClick(e) {
          return onSelectOption(e, value);
        }
      }, /*#__PURE__*/_react["default"].createElement(ListItemComponent, {
        value: value,
        isTile: true
      }));
    }));
  };
  return LayerTypeDropdownList;
}
var _default = exports["default"] = LayerTypeDropdownListFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfY2xhc3NuYW1lcyIsIl9kcm9wZG93bkxpc3QiLCJfdGVtcGxhdGVPYmplY3QiLCJfdGVtcGxhdGVPYmplY3QyIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiRHJvcGRvd25MaXN0V3JhcHBlciIsInN0eWxlZCIsImRpdiIsIl90YWdnZWRUZW1wbGF0ZUxpdGVyYWwyIiwicHJvcHMiLCJ0aGVtZSIsImRyb3Bkb3duTGlzdCIsImRyb3Bkb3duTGlzdEJnZCIsImRyb3Bkb3duTGlzdEJvcmRlclRvcCIsImxheWVyVHlwZUljb25QZEwiLCJTdHlsZWREcm9wZG93bkxpc3RJdGVtIiwiYWN0aXZlQ29sb3IiLCJ0ZXh0Q29sb3IiLCJMYXllclR5cGVEcm9wZG93bkxpc3RGYWN0b3J5IiwiTGF5ZXJUeXBlRHJvcGRvd25MaXN0IiwiX3JlZiIsIm9uT3B0aW9uU2VsZWN0ZWQiLCJvcHRpb25zIiwic2VsZWN0ZWRJdGVtcyIsInNlbGVjdGlvbkluZGV4IiwiY3VzdG9tTGlzdEl0ZW1Db21wb25lbnQiLCJvblNlbGVjdE9wdGlvbiIsInVzZUNhbGxiYWNrIiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsIkxpc3RJdGVtQ29tcG9uZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsImNsYXNzTGlzdCIsImxpc3QiLCJtYXAiLCJjbGFzc05hbWVzIiwic2VsZWN0ZWQiLCJmaW5kIiwiaXQiLCJpZCIsImhvdmVyIiwiZGlzYWJsZWQiLCJrZXkiLCJjb25jYXQiLCJvbk1vdXNlRG93biIsIm9uQ2xpY2siLCJpc1RpbGUiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2lkZS1wYW5lbC9sYXllci1wYW5lbC9sYXllci10eXBlLWRyb3Bkb3duLWxpc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrLCBNb3VzZUV2ZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHtjbGFzc0xpc3R9IGZyb20gJy4uLy4uL2NvbW1vbi9pdGVtLXNlbGVjdG9yL2Ryb3Bkb3duLWxpc3QnO1xuXG5leHBvcnQgdHlwZSBMYXllclR5cGVPcHRpb24gPSB7XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgaWQ6IHN0cmluZztcbiAgbGFiZWw6IHN0cmluZztcbiAgaWNvbjogUmVhY3QuRWxlbWVudFR5cGU7XG59O1xuXG50eXBlIExheWVyVHlwZURyb3Bkb3duTGlzdFByb3BzID0ge1xuICBvbk9wdGlvblNlbGVjdGVkOiAoXG4gICAgdmFsdWU6IHtcbiAgICAgIGljb246IFJlYWN0LkVsZW1lbnRUeXBlO1xuICAgICAgbGFiZWw6IHN0cmluZztcbiAgICB9LFxuICAgIGU6IE1vdXNlRXZlbnRcbiAgKSA9PiB2b2lkO1xuICBvcHRpb25zOiBMYXllclR5cGVPcHRpb25bXTtcbiAgc2VsZWN0ZWRJdGVtczogTGF5ZXJUeXBlT3B0aW9uW107XG4gIHNlbGVjdGlvbkluZGV4OiBudW1iZXIgfCBudWxsO1xuICBjdXN0b21MaXN0SXRlbUNvbXBvbmVudDogUmVhY3QuRkM8e3ZhbHVlOiBMYXllclR5cGVPcHRpb247IGlzVGlsZT86IGJvb2xlYW59Pjtcbn07XG5cbmNvbnN0IERyb3Bkb3duTGlzdFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICAke3Byb3BzID0+IHByb3BzLnRoZW1lLmRyb3Bkb3duTGlzdH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuZHJvcGRvd25MaXN0QmdkfTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuZHJvcGRvd25MaXN0Qm9yZGVyVG9wfTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgcGFkZGluZzogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5sYXllclR5cGVJY29uUGRMfXB4IDAgMCAke3Byb3BzID0+IHByb3BzLnRoZW1lLmxheWVyVHlwZUljb25QZEx9cHg7XG5gO1xuXG5jb25zdCBTdHlsZWREcm9wZG93bkxpc3RJdGVtID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZy1ib3R0b206ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUubGF5ZXJUeXBlSWNvblBkTH1weDtcbiAgcGFkZGluZy1yaWdodDogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5sYXllclR5cGVJY29uUGRMfXB4O1xuXG4gICYuZGlzYWJsZWQge1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIG9wYWNpdHk6IDAuMztcbiAgfVxuXG4gICYuc2VsZWN0ZWQge1xuICAgIC5sYXllci10eXBlLXNlbGVjdG9yX19pdGVtX19pY29uIHtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjYWYyZjQ7XG4gICAgfVxuICB9XG5cbiAgJjpob3ZlcixcbiAgJi5zZWxlY3RlZCB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIC5sYXllci10eXBlLXNlbGVjdG9yX19pdGVtX19pY29uIHtcbiAgICAgIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmFjdGl2ZUNvbG9yfTtcbiAgICB9XG5cbiAgICAubGF5ZXItdHlwZS1zZWxlY3Rvcl9faXRlbV9fbGFiZWwge1xuICAgICAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUudGV4dENvbG9yfTtcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBmdW5jdGlvbiBMYXllclR5cGVEcm9wZG93bkxpc3RGYWN0b3J5KCkge1xuICBjb25zdCBMYXllclR5cGVEcm9wZG93bkxpc3Q6IFJlYWN0LkZDPExheWVyVHlwZURyb3Bkb3duTGlzdFByb3BzPiA9ICh7XG4gICAgb25PcHRpb25TZWxlY3RlZCxcbiAgICBvcHRpb25zLFxuICAgIHNlbGVjdGVkSXRlbXMsXG4gICAgc2VsZWN0aW9uSW5kZXgsXG4gICAgY3VzdG9tTGlzdEl0ZW1Db21wb25lbnRcbiAgfSkgPT4ge1xuICAgIGNvbnN0IG9uU2VsZWN0T3B0aW9uID0gdXNlQ2FsbGJhY2soXG4gICAgICAoZSwgdmFsdWUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBvbk9wdGlvblNlbGVjdGVkKHZhbHVlLCBlKTtcbiAgICAgIH0sXG4gICAgICBbb25PcHRpb25TZWxlY3RlZF1cbiAgICApO1xuXG4gICAgY29uc3QgTGlzdEl0ZW1Db21wb25lbnQgPSBjdXN0b21MaXN0SXRlbUNvbXBvbmVudDtcblxuICAgIHJldHVybiAoXG4gICAgICA8RHJvcGRvd25MaXN0V3JhcHBlciBjbGFzc05hbWU9e2NsYXNzTGlzdC5saXN0fT5cbiAgICAgICAge29wdGlvbnMubWFwKCh2YWx1ZSwgaSkgPT4gKFxuICAgICAgICAgIDxTdHlsZWREcm9wZG93bkxpc3RJdGVtXG4gICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2xheWVyLXR5cGUtc2VsZWN0b3JfX2l0ZW0nLCB7XG4gICAgICAgICAgICAgIHNlbGVjdGVkOiBzZWxlY3RlZEl0ZW1zLmZpbmQoaXQgPT4gaXQuaWQgPT09IHZhbHVlLmlkKSxcbiAgICAgICAgICAgICAgaG92ZXI6IHNlbGVjdGlvbkluZGV4ID09PSBpLFxuICAgICAgICAgICAgICBkaXNhYmxlZDogdmFsdWUuZGlzYWJsZWRcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAga2V5PXtgJHt2YWx1ZS5pZH1fJHtpfWB9XG4gICAgICAgICAgICBvbk1vdXNlRG93bj17KGU6IE1vdXNlRXZlbnQpID0+IG9uU2VsZWN0T3B0aW9uKGUsIHZhbHVlKX1cbiAgICAgICAgICAgIG9uQ2xpY2s9eyhlOiBNb3VzZUV2ZW50KSA9PiBvblNlbGVjdE9wdGlvbihlLCB2YWx1ZSl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPExpc3RJdGVtQ29tcG9uZW50IHZhbHVlPXt2YWx1ZX0gaXNUaWxlIC8+XG4gICAgICAgICAgPC9TdHlsZWREcm9wZG93bkxpc3RJdGVtPlxuICAgICAgICApKX1cbiAgICAgIDwvRHJvcGRvd25MaXN0V3JhcHBlcj5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBMYXllclR5cGVEcm9wZG93bkxpc3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IExheWVyVHlwZURyb3Bkb3duTGlzdEZhY3Rvcnk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxpQkFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsV0FBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUksYUFBQSxHQUFBSixPQUFBO0FBQW1FLElBQUFLLGVBQUEsRUFBQUMsZ0JBQUEsRUFObkU7QUFDQTtBQUFBLFNBQUFDLHlCQUFBQyxDQUFBLDZCQUFBQyxPQUFBLG1CQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxDQUFBLFdBQUFBLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLEtBQUFGLENBQUE7QUFBQSxTQUFBVCx3QkFBQVMsQ0FBQSxFQUFBRSxDQUFBLFNBQUFBLENBQUEsSUFBQUYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJLFVBQUEsU0FBQUosQ0FBQSxlQUFBQSxDQUFBLGdCQUFBSyxPQUFBLENBQUFMLENBQUEsMEJBQUFBLENBQUEsc0JBQUFBLENBQUEsUUFBQUcsQ0FBQSxHQUFBSix3QkFBQSxDQUFBRyxDQUFBLE9BQUFDLENBQUEsSUFBQUEsQ0FBQSxDQUFBRyxHQUFBLENBQUFOLENBQUEsVUFBQUcsQ0FBQSxDQUFBSSxHQUFBLENBQUFQLENBQUEsT0FBQVEsQ0FBQSxLQUFBQyxTQUFBLFVBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUEsV0FBQUMsQ0FBQSxJQUFBZCxDQUFBLG9CQUFBYyxDQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxDQUFBLFNBQUFHLENBQUEsR0FBQVAsQ0FBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFiLENBQUEsRUFBQWMsQ0FBQSxVQUFBRyxDQUFBLEtBQUFBLENBQUEsQ0FBQVYsR0FBQSxJQUFBVSxDQUFBLENBQUFDLEdBQUEsSUFBQVAsTUFBQSxDQUFBQyxjQUFBLENBQUFKLENBQUEsRUFBQU0sQ0FBQSxFQUFBRyxDQUFBLElBQUFULENBQUEsQ0FBQU0sQ0FBQSxJQUFBZCxDQUFBLENBQUFjLENBQUEsWUFBQU4sQ0FBQSxjQUFBUixDQUFBLEVBQUFHLENBQUEsSUFBQUEsQ0FBQSxDQUFBZSxHQUFBLENBQUFsQixDQUFBLEVBQUFRLENBQUEsR0FBQUEsQ0FBQTtBQTRCQSxJQUFNVyxtQkFBbUIsR0FBR0MsNEJBQU0sQ0FBQ0MsR0FBRyxDQUFBeEIsZUFBQSxLQUFBQSxlQUFBLE9BQUF5Qix1QkFBQSwyTEFDbEMsVUFBQUMsS0FBSztFQUFBLE9BQUlBLEtBQUssQ0FBQ0MsS0FBSyxDQUFDQyxZQUFZO0FBQUEsR0FDZixVQUFBRixLQUFLO0VBQUEsT0FBSUEsS0FBSyxDQUFDQyxLQUFLLENBQUNFLGVBQWU7QUFBQSxHQUNoQyxVQUFBSCxLQUFLO0VBQUEsT0FBSUEsS0FBSyxDQUFDQyxLQUFLLENBQUNHLHFCQUFxQjtBQUFBLEdBSXZELFVBQUFKLEtBQUs7RUFBQSxPQUFJQSxLQUFLLENBQUNDLEtBQUssQ0FBQ0ksZ0JBQWdCO0FBQUEsR0FBVSxVQUFBTCxLQUFLO0VBQUEsT0FBSUEsS0FBSyxDQUFDQyxLQUFLLENBQUNJLGdCQUFnQjtBQUFBLEVBQ2hHO0FBRUQsSUFBTUMsc0JBQXNCLEdBQUdULDRCQUFNLENBQUNDLEdBQUcsQ0FBQXZCLGdCQUFBLEtBQUFBLGdCQUFBLE9BQUF3Qix1QkFBQSwyYkFDckIsVUFBQUMsS0FBSztFQUFBLE9BQUlBLEtBQUssQ0FBQ0MsS0FBSyxDQUFDSSxnQkFBZ0I7QUFBQSxHQUN0QyxVQUFBTCxLQUFLO0VBQUEsT0FBSUEsS0FBSyxDQUFDQyxLQUFLLENBQUNJLGdCQUFnQjtBQUFBLEdBaUJ6QyxVQUFBTCxLQUFLO0VBQUEsT0FBSUEsS0FBSyxDQUFDQyxLQUFLLENBQUNNLFdBQVc7QUFBQSxHQUloQyxVQUFBUCxLQUFLO0VBQUEsT0FBSUEsS0FBSyxDQUFDQyxLQUFLLENBQUNPLFNBQVM7QUFBQSxFQUc1QztBQUVNLFNBQVNDLDRCQUE0QkEsQ0FBQSxFQUFHO0VBQzdDLElBQU1DLHFCQUEyRCxHQUFHLFNBQTlEQSxxQkFBMkRBLENBQUFDLElBQUEsRUFNM0Q7SUFBQSxJQUxKQyxnQkFBZ0IsR0FBQUQsSUFBQSxDQUFoQkMsZ0JBQWdCO01BQ2hCQyxPQUFPLEdBQUFGLElBQUEsQ0FBUEUsT0FBTztNQUNQQyxhQUFhLEdBQUFILElBQUEsQ0FBYkcsYUFBYTtNQUNiQyxjQUFjLEdBQUFKLElBQUEsQ0FBZEksY0FBYztNQUNkQyx1QkFBdUIsR0FBQUwsSUFBQSxDQUF2QkssdUJBQXVCO0lBRXZCLElBQU1DLGNBQWMsR0FBRyxJQUFBQyxrQkFBVyxFQUNoQyxVQUFDekMsQ0FBQyxFQUFFMEMsS0FBSyxFQUFLO01BQ1oxQyxDQUFDLENBQUMyQyxjQUFjLENBQUMsQ0FBQztNQUNsQlIsZ0JBQWdCLENBQUNPLEtBQUssRUFBRTFDLENBQUMsQ0FBQztJQUM1QixDQUFDLEVBQ0QsQ0FBQ21DLGdCQUFnQixDQUNuQixDQUFDO0lBRUQsSUFBTVMsaUJBQWlCLEdBQUdMLHVCQUF1QjtJQUVqRCxvQkFDRWpELE1BQUEsWUFBQXVELGFBQUEsQ0FBQzFCLG1CQUFtQjtNQUFDMkIsU0FBUyxFQUFFQyx1QkFBUyxDQUFDQztJQUFLLEdBQzVDWixPQUFPLENBQUNhLEdBQUcsQ0FBQyxVQUFDUCxLQUFLLEVBQUV6QixDQUFDO01BQUEsb0JBQ3BCM0IsTUFBQSxZQUFBdUQsYUFBQSxDQUFDaEIsc0JBQXNCO1FBQ3JCaUIsU0FBUyxFQUFFLElBQUFJLHNCQUFVLEVBQUMsMkJBQTJCLEVBQUU7VUFDakRDLFFBQVEsRUFBRWQsYUFBYSxDQUFDZSxJQUFJLENBQUMsVUFBQUMsRUFBRTtZQUFBLE9BQUlBLEVBQUUsQ0FBQ0MsRUFBRSxLQUFLWixLQUFLLENBQUNZLEVBQUU7VUFBQSxFQUFDO1VBQ3REQyxLQUFLLEVBQUVqQixjQUFjLEtBQUtyQixDQUFDO1VBQzNCdUMsUUFBUSxFQUFFZCxLQUFLLENBQUNjO1FBQ2xCLENBQUMsQ0FBRTtRQUNIQyxHQUFHLEtBQUFDLE1BQUEsQ0FBS2hCLEtBQUssQ0FBQ1ksRUFBRSxPQUFBSSxNQUFBLENBQUl6QyxDQUFDLENBQUc7UUFDeEIwQyxXQUFXLEVBQUUsU0FBYkEsV0FBV0EsQ0FBRzNELENBQWE7VUFBQSxPQUFLd0MsY0FBYyxDQUFDeEMsQ0FBQyxFQUFFMEMsS0FBSyxDQUFDO1FBQUEsQ0FBQztRQUN6RGtCLE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFHNUQsQ0FBYTtVQUFBLE9BQUt3QyxjQUFjLENBQUN4QyxDQUFDLEVBQUUwQyxLQUFLLENBQUM7UUFBQTtNQUFDLGdCQUVyRHBELE1BQUEsWUFBQXVELGFBQUEsQ0FBQ0QsaUJBQWlCO1FBQUNGLEtBQUssRUFBRUEsS0FBTTtRQUFDbUIsTUFBTTtNQUFBLENBQUUsQ0FDbkIsQ0FBQztJQUFBLENBQzFCLENBQ2tCLENBQUM7RUFFMUIsQ0FBQztFQUVELE9BQU81QixxQkFBcUI7QUFDOUI7QUFBQyxJQUFBNkIsUUFBQSxHQUFBQyxPQUFBLGNBRWMvQiw0QkFBNEIiLCJpZ25vcmVMaXN0IjpbXX0=