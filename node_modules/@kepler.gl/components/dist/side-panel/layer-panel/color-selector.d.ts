import React from 'react';
import { ColorRange } from '@kepler.gl/types';
import { ColorUI, NestedPartial, RGBAColor, RGBColor } from '@kepler.gl/types';
import RangeSliderFactory from '../../common/range-slider';
import ColorRangeSelectorFactory from './color-range-selector';
declare type ColorSelectorInputProps = {
    active: boolean;
    disabled?: boolean;
    inputTheme?: string;
};
export declare type ColorSet = {
    selectedColor: RGBColor | RGBAColor | ColorRange;
    setColor: (v: RGBColor | RGBAColor | ColorRange) => void;
    isRange?: boolean;
    label?: string;
};
declare type ColorSelectorProps = {
    colorSets: ColorSet[];
    colorUI?: ColorUI;
    inputTheme?: string;
    disabled?: boolean;
    useOpacity?: boolean;
    setColorUI?: (newConfig: NestedPartial<ColorUI>) => void;
};
export declare const ColorBlock: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").Substitute<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {
    backgroundcolor: RGBColor;
}>>;
export declare const ColorSelectorInput: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").Substitute<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, ColorSelectorInputProps>>;
export declare const InputBoxContainer: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>>;
declare function ColorSelectorFactory(ColorRangeSelector: ReturnType<typeof ColorRangeSelectorFactory>, RangeSlider: ReturnType<typeof RangeSliderFactory>): React.FC<ColorSelectorProps>;
declare namespace ColorSelectorFactory {
    var deps: (typeof RangeSliderFactory | typeof ColorRangeSelectorFactory)[];
}
export default ColorSelectorFactory;
