import { ColorUI, LayerVisConfig } from '@kepler.gl/types';
import { Layer, VisualChannel } from '@kepler.gl/layers';
import { default as React } from 'react';
import { Field } from '@kepler.gl/types';
import ColorScaleSelectorFactory from './color-scale-selector';
import { KeplerTable } from '@kepler.gl/table';
export declare type DimensionScaleSelectorProps = {
    layer: Layer;
    channel: VisualChannel;
    label?: string;
    dataset: KeplerTable | undefined;
    onChange: (newConfig: {
        [key: string]: Field | null | string;
    }, key: string, newVisConfig?: Partial<LayerVisConfig>) => void;
    setColorUI: (range: string, newConfig: {
        [key in keyof ColorUI]: ColorUI[key];
    }) => void;
};
declare function DimensionScaleSelectorFactory(ColorScaleSelector: ReturnType<typeof ColorScaleSelectorFactory>): React.FC<DimensionScaleSelectorProps>;
declare namespace DimensionScaleSelectorFactory {
    var deps: (typeof ColorScaleSelectorFactory)[];
}
export default DimensionScaleSelectorFactory;
