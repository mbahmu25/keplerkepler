import React, { MouseEvent } from 'react';
import { ColorPalette } from '@kepler.gl/constants';
import { ColorRange, ColorUI, NestedPartial } from '@kepler.gl/types';
import CustomPaletteFactory from './custom-palette';
declare type ColorRangeSelectorProps = {
    colorPalettes?: ColorPalette[];
    colorPaletteUI: ColorUI;
    selectedColorRange: ColorRange;
    onSelectColorRange: (p: ColorRange, e: MouseEvent) => void;
    setColorPaletteUI: (newConfig: NestedPartial<ColorUI>) => void;
};
declare type PaletteConfigProps = {
    label: string;
    value: string | number | boolean;
    config: {
        type: string;
        options: (string | number | boolean)[];
    };
    onChange: (v: any) => void;
    disabled?: boolean;
    prop: string;
    reason?: string;
};
export declare const ALL_TYPES: ("sequential" | "qualitative" | "diverging" | "cyclical")[];
declare function ColorRangeSelectorFactory(CustomPalette: ReturnType<typeof CustomPaletteFactory>): React.FC<ColorRangeSelectorProps>;
declare namespace ColorRangeSelectorFactory {
    var deps: (typeof CustomPaletteFactory)[];
}
export declare const PaletteConfig: React.FC<PaletteConfigProps>;
declare type ColorPaletteItemProps = {
    reversed?: boolean;
    selected?: ColorRange;
    colorPalette: ColorPalette;
    selectedColorRange: ColorRange;
    onSelect: (colorPalette: ColorPalette, e: MouseEvent) => void;
    steps: number;
};
export declare const ColorPaletteItem: React.FC<ColorPaletteItemProps>;
export default ColorRangeSelectorFactory;
