"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _infoHelper = _interopRequireDefault(require("../../common/info-helper"));
var _switch = _interopRequireDefault(require("../../common/switch"));
var _styledComponents2 = require("../../common/styled-components");
var _localization = require("@kepler.gl/localization");
var _utils = require("@kepler.gl/utils");
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var StyledVisConfigSwitch = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  justify-content: space-between;\n\n  .vis-config-switch__title {\n    display: flex;\n  }\n"])));
VisConfigSwitchFactory.deps = [_infoHelper["default"]];
function VisConfigSwitchFactory(InfoHelper) {
  var VisConfigSwitch = function VisConfigSwitch(_ref) {
    var _ref$layer = _ref.layer,
      id = _ref$layer.id,
      config = _ref$layer.config,
      property = _ref.property,
      _onChange2 = _ref.onChange,
      label = _ref.label,
      description = _ref.description,
      disabled = _ref.disabled;
    return /*#__PURE__*/_react["default"].createElement(_styledComponents2.SidePanelSection, {
      disabled: Boolean(disabled)
    }, /*#__PURE__*/_react["default"].createElement(StyledVisConfigSwitch, {
      className: "vis-config-switch"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "vis-config-switch__title"
    }, label ? /*#__PURE__*/_react["default"].createElement(_styledComponents2.PanelLabel, null, label && /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: label
    }) || (0, _utils.capitalizeFirstLetter)(property)) : null, description ? /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(InfoHelper, {
      description: description,
      id: "".concat(id, "-").concat(property, "-description")
    })) : null), /*#__PURE__*/_react["default"].createElement("div", {
      className: "vis-config-switch__switch"
    }, /*#__PURE__*/_react["default"].createElement(_switch["default"], {
      checked: config.visConfig[property],
      id: "".concat(id, "-").concat(property, "-switch"),
      onChange: function onChange() {
        return _onChange2((0, _defineProperty2["default"])({}, property, !config.visConfig[property]));
      }
    }))));
  };
  return VisConfigSwitch;
}
var _default = exports["default"] = VisConfigSwitchFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zdHlsZWRDb21wb25lbnRzIiwiX2luZm9IZWxwZXIiLCJfc3dpdGNoIiwiX3N0eWxlZENvbXBvbmVudHMyIiwiX2xvY2FsaXphdGlvbiIsIl91dGlscyIsIl90ZW1wbGF0ZU9iamVjdCIsIlN0eWxlZFZpc0NvbmZpZ1N3aXRjaCIsInN0eWxlZCIsImRpdiIsIl90YWdnZWRUZW1wbGF0ZUxpdGVyYWwyIiwiVmlzQ29uZmlnU3dpdGNoRmFjdG9yeSIsImRlcHMiLCJJbmZvSGVscGVyRmFjdG9yeSIsIkluZm9IZWxwZXIiLCJWaXNDb25maWdTd2l0Y2giLCJfcmVmIiwiX3JlZiRsYXllciIsImxheWVyIiwiaWQiLCJjb25maWciLCJwcm9wZXJ0eSIsIm9uQ2hhbmdlIiwibGFiZWwiLCJkZXNjcmlwdGlvbiIsImRpc2FibGVkIiwiY3JlYXRlRWxlbWVudCIsIlNpZGVQYW5lbFNlY3Rpb24iLCJCb29sZWFuIiwiY2xhc3NOYW1lIiwiUGFuZWxMYWJlbCIsIkZvcm1hdHRlZE1lc3NhZ2UiLCJjYXBpdGFsaXplRmlyc3RMZXR0ZXIiLCJjb25jYXQiLCJjaGVja2VkIiwidmlzQ29uZmlnIiwiX2RlZmluZVByb3BlcnR5MiIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaWRlLXBhbmVsL2xheWVyLXBhbmVsL3Zpcy1jb25maWctc3dpdGNoLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgSW5mb0hlbHBlckZhY3RvcnkgZnJvbSAnLi4vLi4vY29tbW9uL2luZm8taGVscGVyJztcbmltcG9ydCBTd2l0Y2ggZnJvbSAnLi4vLi4vY29tbW9uL3N3aXRjaCc7XG5pbXBvcnQge1NpZGVQYW5lbFNlY3Rpb24sIFBhbmVsTGFiZWx9IGZyb20gJy4uLy4uL2NvbW1vbi9zdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQge0Zvcm1hdHRlZE1lc3NhZ2V9IGZyb20gJ0BrZXBsZXIuZ2wvbG9jYWxpemF0aW9uJztcbmltcG9ydCB7Y2FwaXRhbGl6ZUZpcnN0TGV0dGVyfSBmcm9tICdAa2VwbGVyLmdsL3V0aWxzJztcbmltcG9ydCB7TGF5ZXJ9IGZyb20gJ0BrZXBsZXIuZ2wvbGF5ZXJzJztcblxudHlwZSBWaXNDb25maWdTd2l0Y2hQcm9wcyA9IHtcbiAgbGF5ZXI6IExheWVyO1xuICBwcm9wZXJ0eTogc3RyaW5nO1xuICBvbkNoYW5nZTogKHY6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+KSA9PiB2b2lkO1xuICBsYWJlbD86IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IFN0eWxlZFZpc0NvbmZpZ1N3aXRjaCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAudmlzLWNvbmZpZy1zd2l0Y2hfX3RpdGxlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5gO1xuXG5WaXNDb25maWdTd2l0Y2hGYWN0b3J5LmRlcHMgPSBbSW5mb0hlbHBlckZhY3RvcnldO1xuZnVuY3Rpb24gVmlzQ29uZmlnU3dpdGNoRmFjdG9yeShJbmZvSGVscGVyOiBSZXR1cm5UeXBlPHR5cGVvZiBJbmZvSGVscGVyRmFjdG9yeT4pIHtcbiAgY29uc3QgVmlzQ29uZmlnU3dpdGNoOiBSZWFjdC5GQzxWaXNDb25maWdTd2l0Y2hQcm9wcz4gPSAoe1xuICAgIGxheWVyOiB7aWQsIGNvbmZpZ30sXG4gICAgcHJvcGVydHksXG4gICAgb25DaGFuZ2UsXG4gICAgbGFiZWwsXG4gICAgZGVzY3JpcHRpb24sXG4gICAgZGlzYWJsZWRcbiAgfSkgPT4gKFxuICAgIDxTaWRlUGFuZWxTZWN0aW9uIGRpc2FibGVkPXtCb29sZWFuKGRpc2FibGVkKX0+XG4gICAgICA8U3R5bGVkVmlzQ29uZmlnU3dpdGNoIGNsYXNzTmFtZT1cInZpcy1jb25maWctc3dpdGNoXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidmlzLWNvbmZpZy1zd2l0Y2hfX3RpdGxlXCI+XG4gICAgICAgICAge2xhYmVsID8gKFxuICAgICAgICAgICAgPFBhbmVsTGFiZWw+XG4gICAgICAgICAgICAgIHsobGFiZWwgJiYgPEZvcm1hdHRlZE1lc3NhZ2UgaWQ9e2xhYmVsfSAvPikgfHwgY2FwaXRhbGl6ZUZpcnN0TGV0dGVyKHByb3BlcnR5KX1cbiAgICAgICAgICAgIDwvUGFuZWxMYWJlbD5cbiAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICB7ZGVzY3JpcHRpb24gPyAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8SW5mb0hlbHBlciBkZXNjcmlwdGlvbj17ZGVzY3JpcHRpb259IGlkPXtgJHtpZH0tJHtwcm9wZXJ0eX0tZGVzY3JpcHRpb25gfSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInZpcy1jb25maWctc3dpdGNoX19zd2l0Y2hcIj5cbiAgICAgICAgICA8U3dpdGNoXG4gICAgICAgICAgICBjaGVja2VkPXtjb25maWcudmlzQ29uZmlnW3Byb3BlcnR5XX1cbiAgICAgICAgICAgIGlkPXtgJHtpZH0tJHtwcm9wZXJ0eX0tc3dpdGNoYH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoKSA9PiBvbkNoYW5nZSh7W3Byb3BlcnR5XTogIWNvbmZpZy52aXNDb25maWdbcHJvcGVydHldfSl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L1N0eWxlZFZpc0NvbmZpZ1N3aXRjaD5cbiAgICA8L1NpZGVQYW5lbFNlY3Rpb24+XG4gICk7XG5cbiAgcmV0dXJuIFZpc0NvbmZpZ1N3aXRjaDtcbn1cbmV4cG9ydCBkZWZhdWx0IFZpc0NvbmZpZ1N3aXRjaEZhY3Rvcnk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGlCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxXQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxPQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSSxrQkFBQSxHQUFBSixPQUFBO0FBQ0EsSUFBQUssYUFBQSxHQUFBTCxPQUFBO0FBQ0EsSUFBQU0sTUFBQSxHQUFBTixPQUFBO0FBQXVELElBQUFPLGVBQUEsRUFUdkQ7QUFDQTtBQW9CQSxJQUFNQyxxQkFBcUIsR0FBR0MsNEJBQU0sQ0FBQ0MsR0FBRyxDQUFBSCxlQUFBLEtBQUFBLGVBQUEsT0FBQUksdUJBQUEscUlBT3ZDO0FBRURDLHNCQUFzQixDQUFDQyxJQUFJLEdBQUcsQ0FBQ0Msc0JBQWlCLENBQUM7QUFDakQsU0FBU0Ysc0JBQXNCQSxDQUFDRyxVQUFnRCxFQUFFO0VBQ2hGLElBQU1DLGVBQStDLEdBQUcsU0FBbERBLGVBQStDQSxDQUFBQyxJQUFBO0lBQUEsSUFBQUMsVUFBQSxHQUFBRCxJQUFBLENBQ25ERSxLQUFLO01BQUdDLEVBQUUsR0FBQUYsVUFBQSxDQUFGRSxFQUFFO01BQUVDLE1BQU0sR0FBQUgsVUFBQSxDQUFORyxNQUFNO01BQ2xCQyxRQUFRLEdBQUFMLElBQUEsQ0FBUkssUUFBUTtNQUNSQyxVQUFRLEdBQUFOLElBQUEsQ0FBUk0sUUFBUTtNQUNSQyxLQUFLLEdBQUFQLElBQUEsQ0FBTE8sS0FBSztNQUNMQyxXQUFXLEdBQUFSLElBQUEsQ0FBWFEsV0FBVztNQUNYQyxRQUFRLEdBQUFULElBQUEsQ0FBUlMsUUFBUTtJQUFBLG9CQUVSNUIsTUFBQSxZQUFBNkIsYUFBQSxDQUFDdkIsa0JBQUEsQ0FBQXdCLGdCQUFnQjtNQUFDRixRQUFRLEVBQUVHLE9BQU8sQ0FBQ0gsUUFBUTtJQUFFLGdCQUM1QzVCLE1BQUEsWUFBQTZCLGFBQUEsQ0FBQ25CLHFCQUFxQjtNQUFDc0IsU0FBUyxFQUFDO0lBQW1CLGdCQUNsRGhDLE1BQUEsWUFBQTZCLGFBQUE7TUFBS0csU0FBUyxFQUFDO0lBQTBCLEdBQ3RDTixLQUFLLGdCQUNKMUIsTUFBQSxZQUFBNkIsYUFBQSxDQUFDdkIsa0JBQUEsQ0FBQTJCLFVBQVUsUUFDUFAsS0FBSyxpQkFBSTFCLE1BQUEsWUFBQTZCLGFBQUEsQ0FBQ3RCLGFBQUEsQ0FBQTJCLGdCQUFnQjtNQUFDWixFQUFFLEVBQUVJO0lBQU0sQ0FBRSxDQUFDLElBQUssSUFBQVMsNEJBQXFCLEVBQUNYLFFBQVEsQ0FDbkUsQ0FBQyxHQUNYLElBQUksRUFDUEcsV0FBVyxnQkFDVjNCLE1BQUEsWUFBQTZCLGFBQUEsMkJBQ0U3QixNQUFBLFlBQUE2QixhQUFBLENBQUNaLFVBQVU7TUFBQ1UsV0FBVyxFQUFFQSxXQUFZO01BQUNMLEVBQUUsS0FBQWMsTUFBQSxDQUFLZCxFQUFFLE9BQUFjLE1BQUEsQ0FBSVosUUFBUTtJQUFlLENBQUUsQ0FDekUsQ0FBQyxHQUNKLElBQ0QsQ0FBQyxlQUNOeEIsTUFBQSxZQUFBNkIsYUFBQTtNQUFLRyxTQUFTLEVBQUM7SUFBMkIsZ0JBQ3hDaEMsTUFBQSxZQUFBNkIsYUFBQSxDQUFDeEIsT0FBQSxXQUFNO01BQ0xnQyxPQUFPLEVBQUVkLE1BQU0sQ0FBQ2UsU0FBUyxDQUFDZCxRQUFRLENBQUU7TUFDcENGLEVBQUUsS0FBQWMsTUFBQSxDQUFLZCxFQUFFLE9BQUFjLE1BQUEsQ0FBSVosUUFBUSxZQUFVO01BQy9CQyxRQUFRLEVBQUUsU0FBVkEsUUFBUUEsQ0FBQTtRQUFBLE9BQVFBLFVBQVEsS0FBQWMsZ0JBQUEsaUJBQUdmLFFBQVEsRUFBRyxDQUFDRCxNQUFNLENBQUNlLFNBQVMsQ0FBQ2QsUUFBUSxDQUFDLENBQUMsQ0FBQztNQUFBO0lBQUMsQ0FDckUsQ0FDRSxDQUNnQixDQUNQLENBQUM7RUFBQSxDQUNwQjtFQUVELE9BQU9OLGVBQWU7QUFDeEI7QUFBQyxJQUFBc0IsUUFBQSxHQUFBQyxPQUFBLGNBQ2MzQixzQkFBc0IiLCJpZ25vcmVMaXN0IjpbXX0=