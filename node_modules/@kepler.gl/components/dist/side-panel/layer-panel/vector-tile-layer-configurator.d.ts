import React from 'react';
import { VectorTileLayer } from '@kepler.gl/layers';
import { KeplerTable as KeplerDataset } from '@kepler.gl/table';
import SourceDataSelectorFactory from '../common/source-data-selector';
import ChannelByValueSelectorFactory from './channel-by-value-selector';
import LayerConfigGroupFactory from './layer-config-group';
import { LayerColorRangeSelectorFactory, LayerColorSelectorFactory } from './layer-color-selector';
import VisConfigSliderFactory from './vis-config-slider';
import VisConfigSwitchFactory from './vis-config-switch';
declare type GetProps<T extends (...args: any[]) => React.FC<any>> = Parameters<ReturnType<T>>[0];
declare type Props = {
    layer: VectorTileLayer;
    dataset?: KeplerDataset;
    visConfiguratorProps: any;
    layerChannelConfigProps: GetProps<typeof ChannelByValueSelectorFactory>;
    layerConfiguratorProps: any;
};
declare function VectorTileLayerConfiguratorFactory(ChannelByValueSelector: ReturnType<typeof ChannelByValueSelectorFactory>, LayerColorRangeSelector: ReturnType<typeof LayerColorRangeSelectorFactory>, LayerColorSelector: ReturnType<typeof LayerColorSelectorFactory>, LayerConfigGroup: ReturnType<typeof LayerConfigGroupFactory>, VisConfigSlider: ReturnType<typeof VisConfigSliderFactory>, VisConfigSwitch: ReturnType<typeof VisConfigSwitchFactory>): React.FC<Props>;
declare namespace VectorTileLayerConfiguratorFactory {
    var deps: (typeof VisConfigSwitchFactory | typeof ChannelByValueSelectorFactory | typeof LayerColorRangeSelectorFactory | typeof LayerColorSelectorFactory | typeof LayerConfigGroupFactory | typeof VisConfigSliderFactory | typeof SourceDataSelectorFactory)[];
}
export default VectorTileLayerConfiguratorFactory;
