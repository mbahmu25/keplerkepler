import React from 'react';
import InfoHelperFactory from '../../common/info-helper';
import { Layer } from '@kepler.gl/layers';
import { LayerVisConfig } from '@kepler.gl/types';
export declare type LayerConfigGroupLabelProps = {
    label?: string;
    description?: string;
    collapsed?: boolean;
};
export declare type LayerConfigGroupProps = {
    layer?: Layer;
    label: string;
    property?: string;
    description?: string;
    collapsible?: boolean;
    expanded?: boolean;
    disabled?: boolean;
    onChange?: (newVisConfig: Partial<LayerVisConfig>) => void;
    IconComponent?: React.ElementType;
    children?: React.ReactNode;
};
export declare const StyledLayerConfigGroupAction: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>>;
export declare const ConfigGroupCollapsibleContent: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void) | React.RefObject<HTMLDivElement> | null | undefined;
}>, never>, never>>;
export declare const ConfigGroupCollapsibleHeader: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void) | React.RefObject<HTMLDivElement> | null | undefined;
}>, never>, never>>;
export declare const StyledLayerConfigGroup: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>>;
interface StyledConfigGroupHeaderProps {
    collapsible?: boolean;
}
export declare const StyledConfigGroupHeader: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").Substitute<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void) | React.RefObject<HTMLDivElement> | null | undefined;
}>, never>, StyledConfigGroupHeaderProps>>;
export declare function LayerConfigGroupLabelFactory(InfoHelper: ReturnType<typeof InfoHelperFactory>): React.FC<LayerConfigGroupLabelProps>;
export declare namespace LayerConfigGroupLabelFactory {
    var deps: (typeof InfoHelperFactory)[];
}
declare function LayerConfigGroupFactory(LayerConfigGroupLabel: ReturnType<typeof LayerConfigGroupLabelFactory>): React.FC<LayerConfigGroupProps>;
declare namespace LayerConfigGroupFactory {
    var deps: (typeof LayerConfigGroupLabelFactory)[];
}
export default LayerConfigGroupFactory;
