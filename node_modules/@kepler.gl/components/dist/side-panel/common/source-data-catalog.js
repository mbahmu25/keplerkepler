"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _styledComponents2 = require("../../common/styled-components");
var _datasetTitle = _interopRequireDefault(require("./dataset-title"));
var _datasetInfo = _interopRequireDefault(require("./dataset-info"));
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var SourceDataCatalogWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  transition: ", ";\n"])), function (props) {
  return props.theme.transition;
});
SourceDataCatalogFactory.deps = [_datasetTitle["default"], _datasetInfo["default"]];
function SourceDataCatalogFactory(DatasetTitle, DatasetInfo) {
  var SourceDataCatalog = function SourceDataCatalog(_ref) {
    var datasets = _ref.datasets,
      showDatasetTable = _ref.showDatasetTable,
      removeDataset = _ref.removeDataset,
      onTitleClick = _ref.onTitleClick,
      updateTableColor = _ref.updateTableColor,
      _ref$showDeleteDatase = _ref.showDeleteDataset,
      showDeleteDataset = _ref$showDeleteDatase === void 0 ? false : _ref$showDeleteDatase;
    return /*#__PURE__*/_react["default"].createElement(SourceDataCatalogWrapper, {
      className: "source-data-catalog"
    }, Object.values(datasets).map(function (dataset) {
      return /*#__PURE__*/_react["default"].createElement(_styledComponents2.SidePanelSection, {
        key: dataset.id
      }, /*#__PURE__*/_react["default"].createElement(DatasetTitle, {
        showDatasetTable: showDatasetTable,
        showDeleteDataset: showDeleteDataset,
        removeDataset: removeDataset,
        dataset: dataset,
        onTitleClick: onTitleClick,
        updateTableColor: updateTableColor
      }), showDatasetTable ? /*#__PURE__*/_react["default"].createElement(DatasetInfo, {
        dataset: dataset
      }) : null);
    }));
  };
  return SourceDataCatalog;
}
var _default = exports["default"] = SourceDataCatalogFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zdHlsZWRDb21wb25lbnRzIiwiX3N0eWxlZENvbXBvbmVudHMyIiwiX2RhdGFzZXRUaXRsZSIsIl9kYXRhc2V0SW5mbyIsIl90ZW1wbGF0ZU9iamVjdCIsIlNvdXJjZURhdGFDYXRhbG9nV3JhcHBlciIsInN0eWxlZCIsImRpdiIsIl90YWdnZWRUZW1wbGF0ZUxpdGVyYWwyIiwicHJvcHMiLCJ0aGVtZSIsInRyYW5zaXRpb24iLCJTb3VyY2VEYXRhQ2F0YWxvZ0ZhY3RvcnkiLCJkZXBzIiwiRGF0YXNldFRpdGxlRmFjdG9yeSIsIkRhdGFzZXRJbmZvRmFjdG9yeSIsIkRhdGFzZXRUaXRsZSIsIkRhdGFzZXRJbmZvIiwiU291cmNlRGF0YUNhdGFsb2ciLCJfcmVmIiwiZGF0YXNldHMiLCJzaG93RGF0YXNldFRhYmxlIiwicmVtb3ZlRGF0YXNldCIsIm9uVGl0bGVDbGljayIsInVwZGF0ZVRhYmxlQ29sb3IiLCJfcmVmJHNob3dEZWxldGVEYXRhc2UiLCJzaG93RGVsZXRlRGF0YXNldCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJPYmplY3QiLCJ2YWx1ZXMiLCJtYXAiLCJkYXRhc2V0IiwiU2lkZVBhbmVsU2VjdGlvbiIsImtleSIsImlkIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NpZGUtcGFuZWwvY29tbW9uL3NvdXJjZS1kYXRhLWNhdGFsb2cudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHtvcGVuRGVsZXRlTW9kYWwsIFZpc1N0YXRlQWN0aW9ucywgQWN0aW9uSGFuZGxlcn0gZnJvbSAnQGtlcGxlci5nbC9hY3Rpb25zJztcbmltcG9ydCB7RGF0YUNvbnRhaW5lckludGVyZmFjZX0gZnJvbSAnQGtlcGxlci5nbC91dGlscyc7XG5pbXBvcnQge1JHQkNvbG9yfSBmcm9tICdAa2VwbGVyLmdsL3R5cGVzJztcblxuaW1wb3J0IHtTaWRlUGFuZWxTZWN0aW9ufSBmcm9tICcuLi8uLi9jb21tb24vc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IERhdGFzZXRUaXRsZUZhY3RvcnkgZnJvbSAnLi9kYXRhc2V0LXRpdGxlJztcbmltcG9ydCBEYXRhc2V0SW5mb0ZhY3RvcnkgZnJvbSAnLi9kYXRhc2V0LWluZm8nO1xuXG5jb25zdCBTb3VyY2VEYXRhQ2F0YWxvZ1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICB0cmFuc2l0aW9uOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRyYW5zaXRpb259O1xuYDtcblxudHlwZSBNaW5pRGF0YXNldCA9IHtcbiAgaWQ6IHN0cmluZztcbiAgY29sb3I6IFJHQkNvbG9yO1xuICBsYWJlbD86IHN0cmluZztcbiAgZGF0YUNvbnRhaW5lcjogRGF0YUNvbnRhaW5lckludGVyZmFjZTtcbiAgdHlwZT86IHN0cmluZztcbn07XG5cbnR5cGUgTWluaURhdGFzZXRzID0ge1xuICBba2V5OiBzdHJpbmddOiBNaW5pRGF0YXNldDtcbn07XG5cbmV4cG9ydCB0eXBlIFNvdXJjZURhdGFDYXRhbG9nUHJvcHMgPSB7XG4gIGRhdGFzZXRzOiBNaW5pRGF0YXNldHM7XG4gIHNob3dEZWxldGVEYXRhc2V0PzogYm9vbGVhbjtcbiAgb25UaXRsZUNsaWNrPzogKCkgPT4gdm9pZDtcbiAgc2hvd0RhdGFzZXRUYWJsZT86IEFjdGlvbkhhbmRsZXI8dHlwZW9mIFZpc1N0YXRlQWN0aW9ucy5zaG93RGF0YXNldFRhYmxlPjtcbiAgdXBkYXRlVGFibGVDb2xvcjogQWN0aW9uSGFuZGxlcjx0eXBlb2YgVmlzU3RhdGVBY3Rpb25zLnVwZGF0ZVRhYmxlQ29sb3I+O1xuICByZW1vdmVEYXRhc2V0PzogQWN0aW9uSGFuZGxlcjx0eXBlb2Ygb3BlbkRlbGV0ZU1vZGFsPjtcbn07XG5cblNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeS5kZXBzID0gW0RhdGFzZXRUaXRsZUZhY3RvcnksIERhdGFzZXRJbmZvRmFjdG9yeV07XG5cbmZ1bmN0aW9uIFNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeShcbiAgRGF0YXNldFRpdGxlOiBSZXR1cm5UeXBlPHR5cGVvZiBEYXRhc2V0VGl0bGVGYWN0b3J5PixcbiAgRGF0YXNldEluZm86IFJldHVyblR5cGU8dHlwZW9mIERhdGFzZXRJbmZvRmFjdG9yeT5cbikge1xuICBjb25zdCBTb3VyY2VEYXRhQ2F0YWxvZzogUmVhY3QuRkM8U291cmNlRGF0YUNhdGFsb2dQcm9wcz4gPSAoe1xuICAgIGRhdGFzZXRzLFxuICAgIHNob3dEYXRhc2V0VGFibGUsXG4gICAgcmVtb3ZlRGF0YXNldCxcbiAgICBvblRpdGxlQ2xpY2ssXG4gICAgdXBkYXRlVGFibGVDb2xvcixcbiAgICBzaG93RGVsZXRlRGF0YXNldCA9IGZhbHNlXG4gIH06IFNvdXJjZURhdGFDYXRhbG9nUHJvcHMpID0+IChcbiAgICA8U291cmNlRGF0YUNhdGFsb2dXcmFwcGVyIGNsYXNzTmFtZT1cInNvdXJjZS1kYXRhLWNhdGFsb2dcIj5cbiAgICAgIHtPYmplY3QudmFsdWVzKGRhdGFzZXRzKS5tYXAoZGF0YXNldCA9PiAoXG4gICAgICAgIDxTaWRlUGFuZWxTZWN0aW9uIGtleT17ZGF0YXNldC5pZH0+XG4gICAgICAgICAgPERhdGFzZXRUaXRsZVxuICAgICAgICAgICAgc2hvd0RhdGFzZXRUYWJsZT17c2hvd0RhdGFzZXRUYWJsZX1cbiAgICAgICAgICAgIHNob3dEZWxldGVEYXRhc2V0PXtzaG93RGVsZXRlRGF0YXNldH1cbiAgICAgICAgICAgIHJlbW92ZURhdGFzZXQ9e3JlbW92ZURhdGFzZXR9XG4gICAgICAgICAgICBkYXRhc2V0PXtkYXRhc2V0fVxuICAgICAgICAgICAgb25UaXRsZUNsaWNrPXtvblRpdGxlQ2xpY2t9XG4gICAgICAgICAgICB1cGRhdGVUYWJsZUNvbG9yPXt1cGRhdGVUYWJsZUNvbG9yfVxuICAgICAgICAgIC8+XG4gICAgICAgICAge3Nob3dEYXRhc2V0VGFibGUgPyA8RGF0YXNldEluZm8gZGF0YXNldD17ZGF0YXNldH0gLz4gOiBudWxsfVxuICAgICAgICA8L1NpZGVQYW5lbFNlY3Rpb24+XG4gICAgICApKX1cbiAgICA8L1NvdXJjZURhdGFDYXRhbG9nV3JhcHBlcj5cbiAgKTtcblxuICByZXR1cm4gU291cmNlRGF0YUNhdGFsb2c7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxpQkFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBTUEsSUFBQUUsa0JBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLGFBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFJLFlBQUEsR0FBQUwsc0JBQUEsQ0FBQUMsT0FBQTtBQUFnRCxJQUFBSyxlQUFBLEVBWmhEO0FBQ0E7QUFhQSxJQUFNQyx3QkFBd0IsR0FBR0MsNEJBQU0sQ0FBQ0MsR0FBRyxDQUFBSCxlQUFBLEtBQUFBLGVBQUEsT0FBQUksdUJBQUEsNENBQzNCLFVBQUFDLEtBQUs7RUFBQSxPQUFJQSxLQUFLLENBQUNDLEtBQUssQ0FBQ0MsVUFBVTtBQUFBLEVBQzlDO0FBdUJEQyx3QkFBd0IsQ0FBQ0MsSUFBSSxHQUFHLENBQUNDLHdCQUFtQixFQUFFQyx1QkFBa0IsQ0FBQztBQUV6RSxTQUFTSCx3QkFBd0JBLENBQy9CSSxZQUFvRCxFQUNwREMsV0FBa0QsRUFDbEQ7RUFDQSxJQUFNQyxpQkFBbUQsR0FBRyxTQUF0REEsaUJBQW1EQSxDQUFBQyxJQUFBO0lBQUEsSUFDdkRDLFFBQVEsR0FBQUQsSUFBQSxDQUFSQyxRQUFRO01BQ1JDLGdCQUFnQixHQUFBRixJQUFBLENBQWhCRSxnQkFBZ0I7TUFDaEJDLGFBQWEsR0FBQUgsSUFBQSxDQUFiRyxhQUFhO01BQ2JDLFlBQVksR0FBQUosSUFBQSxDQUFaSSxZQUFZO01BQ1pDLGdCQUFnQixHQUFBTCxJQUFBLENBQWhCSyxnQkFBZ0I7TUFBQUMscUJBQUEsR0FBQU4sSUFBQSxDQUNoQk8saUJBQWlCO01BQWpCQSxpQkFBaUIsR0FBQUQscUJBQUEsY0FBRyxLQUFLLEdBQUFBLHFCQUFBO0lBQUEsb0JBRXpCNUIsTUFBQSxZQUFBOEIsYUFBQSxDQUFDdEIsd0JBQXdCO01BQUN1QixTQUFTLEVBQUM7SUFBcUIsR0FDdERDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDVixRQUFRLENBQUMsQ0FBQ1csR0FBRyxDQUFDLFVBQUFDLE9BQU87TUFBQSxvQkFDbENuQyxNQUFBLFlBQUE4QixhQUFBLENBQUMxQixrQkFBQSxDQUFBZ0MsZ0JBQWdCO1FBQUNDLEdBQUcsRUFBRUYsT0FBTyxDQUFDRztNQUFHLGdCQUNoQ3RDLE1BQUEsWUFBQThCLGFBQUEsQ0FBQ1gsWUFBWTtRQUNYSyxnQkFBZ0IsRUFBRUEsZ0JBQWlCO1FBQ25DSyxpQkFBaUIsRUFBRUEsaUJBQWtCO1FBQ3JDSixhQUFhLEVBQUVBLGFBQWM7UUFDN0JVLE9BQU8sRUFBRUEsT0FBUTtRQUNqQlQsWUFBWSxFQUFFQSxZQUFhO1FBQzNCQyxnQkFBZ0IsRUFBRUE7TUFBaUIsQ0FDcEMsQ0FBQyxFQUNESCxnQkFBZ0IsZ0JBQUd4QixNQUFBLFlBQUE4QixhQUFBLENBQUNWLFdBQVc7UUFBQ2UsT0FBTyxFQUFFQTtNQUFRLENBQUUsQ0FBQyxHQUFHLElBQ3hDLENBQUM7SUFBQSxDQUNwQixDQUN1QixDQUFDO0VBQUEsQ0FDNUI7RUFFRCxPQUFPZCxpQkFBaUI7QUFDMUI7QUFBQyxJQUFBa0IsUUFBQSxHQUFBQyxPQUFBLGNBRWN6Qix3QkFBd0IiLCJpZ25vcmVMaXN0IjpbXX0=