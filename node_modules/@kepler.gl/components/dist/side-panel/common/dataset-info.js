"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = DatasetInfoFactory;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _d3Format = require("d3-format");
var _constants = require("@kepler.gl/constants");
var _localization = require("@kepler.gl/localization");
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var numFormat = (0, _d3Format.format)(',');
var StyledDataRowCount = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  font-size: 11px;\n  color: ", ";\n  padding-left: 19px;\n"])), function (props) {
  return props.theme.subtextColor;
});
function DatasetInfoFactory() {
  var DatasetInfo = function DatasetInfo(_ref) {
    var dataset = _ref.dataset;
    return /*#__PURE__*/_react["default"].createElement(StyledDataRowCount, {
      className: "source-data-rows"
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: dataset.type === _constants.DatasetType.VECTOR_TILE ? 'datasetInfo.vectorTile' : 'datasetInfo.rowCount',
      values: {
        rowCount: numFormat(dataset.dataContainer.numRows())
      }
    }));
  };
  return DatasetInfo;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zdHlsZWRDb21wb25lbnRzIiwiX2QzRm9ybWF0IiwiX2NvbnN0YW50cyIsIl9sb2NhbGl6YXRpb24iLCJfdGVtcGxhdGVPYmplY3QiLCJudW1Gb3JtYXQiLCJmb3JtYXQiLCJTdHlsZWREYXRhUm93Q291bnQiLCJzdHlsZWQiLCJkaXYiLCJfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsMiIsInByb3BzIiwidGhlbWUiLCJzdWJ0ZXh0Q29sb3IiLCJEYXRhc2V0SW5mb0ZhY3RvcnkiLCJEYXRhc2V0SW5mbyIsIl9yZWYiLCJkYXRhc2V0IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsIkZvcm1hdHRlZE1lc3NhZ2UiLCJpZCIsInR5cGUiLCJEYXRhc2V0VHlwZSIsIlZFQ1RPUl9USUxFIiwidmFsdWVzIiwicm93Q291bnQiLCJkYXRhQ29udGFpbmVyIiwibnVtUm93cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaWRlLXBhbmVsL2NvbW1vbi9kYXRhc2V0LWluZm8udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7Zm9ybWF0fSBmcm9tICdkMy1mb3JtYXQnO1xuXG5pbXBvcnQge0RhdGFzZXRUeXBlfSBmcm9tICdAa2VwbGVyLmdsL2NvbnN0YW50cyc7XG5pbXBvcnQge0Zvcm1hdHRlZE1lc3NhZ2V9IGZyb20gJ0BrZXBsZXIuZ2wvbG9jYWxpemF0aW9uJztcbmltcG9ydCB7RGF0YUNvbnRhaW5lckludGVyZmFjZX0gZnJvbSAnQGtlcGxlci5nbC91dGlscyc7XG5cbmNvbnN0IG51bUZvcm1hdCA9IGZvcm1hdCgnLCcpO1xuXG50eXBlIE1pbmlEYXRhc2V0ID0ge1xuICBkYXRhQ29udGFpbmVyOiBEYXRhQ29udGFpbmVySW50ZXJmYWNlO1xuICB0eXBlPzogc3RyaW5nO1xufTtcblxuZXhwb3J0IHR5cGUgRGF0YXNldEluZm9Qcm9wcyA9IHtcbiAgZGF0YXNldDogTWluaURhdGFzZXQ7XG59O1xuXG5jb25zdCBTdHlsZWREYXRhUm93Q291bnQgPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDExcHg7XG4gIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnN1YnRleHRDb2xvcn07XG4gIHBhZGRpbmctbGVmdDogMTlweDtcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERhdGFzZXRJbmZvRmFjdG9yeSgpIHtcbiAgY29uc3QgRGF0YXNldEluZm86IFJlYWN0LkZDPERhdGFzZXRJbmZvUHJvcHM+ID0gKHtkYXRhc2V0fTogRGF0YXNldEluZm9Qcm9wcykgPT4gKFxuICAgIDxTdHlsZWREYXRhUm93Q291bnQgY2xhc3NOYW1lPVwic291cmNlLWRhdGEtcm93c1wiPlxuICAgICAgPEZvcm1hdHRlZE1lc3NhZ2VcbiAgICAgICAgaWQ9e1xuICAgICAgICAgIGRhdGFzZXQudHlwZSA9PT0gRGF0YXNldFR5cGUuVkVDVE9SX1RJTEVcbiAgICAgICAgICAgID8gJ2RhdGFzZXRJbmZvLnZlY3RvclRpbGUnXG4gICAgICAgICAgICA6ICdkYXRhc2V0SW5mby5yb3dDb3VudCdcbiAgICAgICAgfVxuICAgICAgICB2YWx1ZXM9e3tyb3dDb3VudDogbnVtRm9ybWF0KGRhdGFzZXQuZGF0YUNvbnRhaW5lci5udW1Sb3dzKCkpfX1cbiAgICAgIC8+XG4gICAgPC9TdHlsZWREYXRhUm93Q291bnQ+XG4gICk7XG5cbiAgcmV0dXJuIERhdGFzZXRJbmZvO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGlCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxTQUFBLEdBQUFGLE9BQUE7QUFFQSxJQUFBRyxVQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxhQUFBLEdBQUFKLE9BQUE7QUFBeUQsSUFBQUssZUFBQSxFQVJ6RDtBQUNBO0FBVUEsSUFBTUMsU0FBUyxHQUFHLElBQUFDLGdCQUFNLEVBQUMsR0FBRyxDQUFDO0FBVzdCLElBQU1DLGtCQUFrQixHQUFHQyw0QkFBTSxDQUFDQyxHQUFHLENBQUFMLGVBQUEsS0FBQUEsZUFBQSxPQUFBTSx1QkFBQSxrRkFFMUIsVUFBQUMsS0FBSztFQUFBLE9BQUlBLEtBQUssQ0FBQ0MsS0FBSyxDQUFDQyxZQUFZO0FBQUEsRUFFM0M7QUFFYyxTQUFTQyxrQkFBa0JBLENBQUEsRUFBRztFQUMzQyxJQUFNQyxXQUF1QyxHQUFHLFNBQTFDQSxXQUF1Q0EsQ0FBQUMsSUFBQTtJQUFBLElBQUtDLE9BQU8sR0FBQUQsSUFBQSxDQUFQQyxPQUFPO0lBQUEsb0JBQ3ZEcEIsTUFBQSxZQUFBcUIsYUFBQSxDQUFDWCxrQkFBa0I7TUFBQ1ksU0FBUyxFQUFDO0lBQWtCLGdCQUM5Q3RCLE1BQUEsWUFBQXFCLGFBQUEsQ0FBQ2YsYUFBQSxDQUFBaUIsZ0JBQWdCO01BQ2ZDLEVBQUUsRUFDQUosT0FBTyxDQUFDSyxJQUFJLEtBQUtDLHNCQUFXLENBQUNDLFdBQVcsR0FDcEMsd0JBQXdCLEdBQ3hCLHNCQUNMO01BQ0RDLE1BQU0sRUFBRTtRQUFDQyxRQUFRLEVBQUVyQixTQUFTLENBQUNZLE9BQU8sQ0FBQ1UsYUFBYSxDQUFDQyxPQUFPLENBQUMsQ0FBQztNQUFDO0lBQUUsQ0FDaEUsQ0FDaUIsQ0FBQztFQUFBLENBQ3RCO0VBRUQsT0FBT2IsV0FBVztBQUNwQiIsImlnbm9yZUxpc3QiOltdfQ==