import React from 'react';
import { WrappedComponentProps } from 'react-intl';
import LayerListFactory from './layer-panel/layer-list';
import DatasetLayerGroupFactory from './layer-panel/dataset-layer-group';
import PanelViewListToggleFactory from './panel-view-list-toggle';
import PanelTitleFactory from './panel-title';
import DatasetSectionFactory from './layer-panel/dataset-section';
import AddLayerButtonFactory from './layer-panel/add-layer-button';
import InfoHelperFactory from '../common/info-helper';
import { Layer, LayerClassesType } from '@kepler.gl/layers';
import { UIStateActions, VisStateActions, MapStateActions, ActionHandler } from '@kepler.gl/actions';
import { SidePanelItem } from '../types';
import { PanelListView } from '@kepler.gl/types';
import { Datasets } from '@kepler.gl/table';
declare type LayerBlendingSelectorProps = {
    layerBlending: string;
    updateLayerBlending: ActionHandler<typeof VisStateActions.updateLayerBlending>;
    className?: string;
} & WrappedComponentProps;
declare type LayerManagerProps = {
    datasets: Datasets;
    layers: Layer[];
    layerOrder: string[];
    layerClasses: LayerClassesType;
    layerBlending: string;
    overlayBlending: string;
    uiStateActions: typeof UIStateActions;
    visStateActions: typeof VisStateActions;
    mapStateActions: typeof MapStateActions;
    showAddDataModal: () => void;
    removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;
    showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;
    updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;
    panelListView: PanelListView;
    panelMetadata: SidePanelItem;
} & WrappedComponentProps;
export declare const LayerBlendingSelector: React.MemoExoticComponent<({ layerBlending, updateLayerBlending, intl, className }: LayerBlendingSelectorProps) => React.JSX.Element>;
declare function LayerManagerFactory(LayerList: ReturnType<typeof LayerListFactory>, DatasetLayerGroup: ReturnType<typeof DatasetLayerGroupFactory>, PanelViewListToggle: ReturnType<typeof PanelViewListToggleFactory>, PanelTitle: ReturnType<typeof PanelTitleFactory>, DatasetSection: ReturnType<typeof DatasetSectionFactory>, AddLayerButton: ReturnType<typeof AddLayerButtonFactory>, InfoHelper: ReturnType<typeof InfoHelperFactory>): React.FC<import("react-intl").WithIntlProps<LayerManagerProps>> & {
    WrappedComponent: React.ComponentType<LayerManagerProps>;
};
declare namespace LayerManagerFactory {
    var deps: (typeof InfoHelperFactory | typeof LayerListFactory | typeof DatasetLayerGroupFactory | typeof PanelViewListToggleFactory | (() => React.FC<import("./panel-title").PanelTitleProps>) | typeof DatasetSectionFactory | typeof AddLayerButtonFactory)[];
}
export default LayerManagerFactory;
