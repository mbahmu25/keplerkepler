"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _templateObject, _templateObject2; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var TileIconContainer = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  cursor: pointer;\n"])));
var TileIcon = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: ", ";\n  color: ", ";\n"])), function (props) {
  return props.theme.GREY10;
}, function (props) {
  return props.selected ? props.theme.BLUE : props.theme.AZURE200;
});
var TilesetIcon = function TilesetIcon(_ref) {
  var Icon = _ref.Icon,
    name = _ref.name,
    onClick = _ref.onClick,
    _ref$selected = _ref.selected,
    selected = _ref$selected === void 0 ? false : _ref$selected;
  return /*#__PURE__*/_react["default"].createElement(TileIconContainer, {
    onClick: onClick
  }, /*#__PURE__*/_react["default"].createElement(TileIcon, {
    selected: selected
  }, Icon), /*#__PURE__*/_react["default"].createElement("div", null, name));
};
var _default = exports["default"] = TilesetIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zdHlsZWRDb21wb25lbnRzIiwiX3RlbXBsYXRlT2JqZWN0IiwiX3RlbXBsYXRlT2JqZWN0MiIsIlRpbGVJY29uQ29udGFpbmVyIiwic3R5bGVkIiwiZGl2IiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbDIiLCJUaWxlSWNvbiIsInByb3BzIiwidGhlbWUiLCJHUkVZMTAiLCJzZWxlY3RlZCIsIkJMVUUiLCJBWlVSRTIwMCIsIlRpbGVzZXRJY29uIiwiX3JlZiIsIkljb24iLCJuYW1lIiwib25DbGljayIsIl9yZWYkc2VsZWN0ZWQiLCJjcmVhdGVFbGVtZW50IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZGFscy90aWxlc2V0cy1tb2RhbHMvdGlsZXNldC1pY29uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmNvbnN0IFRpbGVJY29uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG5gO1xuXG50eXBlIFRpbGVJY29uUHJvcHMgPSB7XG4gIHNlbGVjdGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IFRpbGVJY29uID0gc3R5bGVkLmRpdjxUaWxlSWNvblByb3BzPmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5HUkVZMTB9O1xuICBjb2xvcjogJHtwcm9wcyA9PiAocHJvcHMuc2VsZWN0ZWQgPyBwcm9wcy50aGVtZS5CTFVFIDogcHJvcHMudGhlbWUuQVpVUkUyMDApfTtcbmA7XG5cbnR5cGUgVGlsZXNldEljb25Qcm9wcyA9IHtcbiAgSWNvbjogUmVhY3QuUmVhY3ROb2RlO1xuICBuYW1lOiBzdHJpbmc7XG4gIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIHNlbGVjdGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IFRpbGVzZXRJY29uOiBSZWFjdC5GQzxUaWxlc2V0SWNvblByb3BzPiA9ICh7SWNvbiwgbmFtZSwgb25DbGljaywgc2VsZWN0ZWQgPSBmYWxzZX0pID0+IChcbiAgPFRpbGVJY29uQ29udGFpbmVyIG9uQ2xpY2s9e29uQ2xpY2t9PlxuICAgIDxUaWxlSWNvbiBzZWxlY3RlZD17c2VsZWN0ZWR9PntJY29ufTwvVGlsZUljb24+XG4gICAgPGRpdj57bmFtZX08L2Rpdj5cbiAgPC9UaWxlSWNvbkNvbnRhaW5lcj5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IFRpbGVzZXRJY29uO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGlCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBdUMsSUFBQUUsZUFBQSxFQUFBQyxnQkFBQSxFQUp2QztBQUNBO0FBS0EsSUFBTUMsaUJBQWlCLEdBQUdDLDRCQUFNLENBQUNDLEdBQUcsQ0FBQUosZUFBQSxLQUFBQSxlQUFBLE9BQUFLLHVCQUFBLDhHQUtuQztBQU1ELElBQU1DLFFBQVEsR0FBR0gsNEJBQU0sQ0FBQ0MsR0FBRyxDQUFBSCxnQkFBQSxLQUFBQSxnQkFBQSxPQUFBSSx1QkFBQSxrRUFDTCxVQUFBRSxLQUFLO0VBQUEsT0FBSUEsS0FBSyxDQUFDQyxLQUFLLENBQUNDLE1BQU07QUFBQSxHQUN0QyxVQUFBRixLQUFLO0VBQUEsT0FBS0EsS0FBSyxDQUFDRyxRQUFRLEdBQUdILEtBQUssQ0FBQ0MsS0FBSyxDQUFDRyxJQUFJLEdBQUdKLEtBQUssQ0FBQ0MsS0FBSyxDQUFDSSxRQUFRO0FBQUEsQ0FBQyxDQUM3RTtBQVNELElBQU1DLFdBQXVDLEdBQUcsU0FBMUNBLFdBQXVDQSxDQUFBQyxJQUFBO0VBQUEsSUFBS0MsSUFBSSxHQUFBRCxJQUFBLENBQUpDLElBQUk7SUFBRUMsSUFBSSxHQUFBRixJQUFBLENBQUpFLElBQUk7SUFBRUMsT0FBTyxHQUFBSCxJQUFBLENBQVBHLE9BQU87SUFBQUMsYUFBQSxHQUFBSixJQUFBLENBQUVKLFFBQVE7SUFBUkEsUUFBUSxHQUFBUSxhQUFBLGNBQUcsS0FBSyxHQUFBQSxhQUFBO0VBQUEsb0JBQ3JGdEIsTUFBQSxZQUFBdUIsYUFBQSxDQUFDakIsaUJBQWlCO0lBQUNlLE9BQU8sRUFBRUE7RUFBUSxnQkFDbENyQixNQUFBLFlBQUF1QixhQUFBLENBQUNiLFFBQVE7SUFBQ0ksUUFBUSxFQUFFQTtFQUFTLEdBQUVLLElBQWUsQ0FBQyxlQUMvQ25CLE1BQUEsWUFBQXVCLGFBQUEsY0FBTUgsSUFBVSxDQUNDLENBQUM7QUFBQSxDQUNyQjtBQUFDLElBQUFJLFFBQUEsR0FBQUMsT0FBQSxjQUVhUixXQUFXIiwiaWdub3JlTGlzdCI6W119