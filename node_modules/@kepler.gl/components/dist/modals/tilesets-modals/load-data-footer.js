"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("react"));
var _reactIntl = require("react-intl");
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _common = require("../../common");
var _loadingSpinner = _interopRequireDefault(require("../../common/loading-spinner"));
var _templateObject, _templateObject2, _templateObject3; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var AddDataButton = (0, _styledComponents["default"])(_common.Button)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  opacity: ", ";\n  height: 40px;\n  padding: 9px 32px;\n  width: ", ";\n\n  svg {\n    margin-right: ", ";\n  }\n"])), function (props) {
  return props.disabled ? 0.6 : 1;
}, function (props) {
  return props.width;
}, function (props) {
  return props.isLoading ? '0' : '6px';
});
var LoadDataFooterContainer = _styledComponents["default"].div.attrs({
  className: 'load-data-footer'
})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  /* position: absolute; */\n  width: 100%;\n  bottom: 0;\n\n  display: flex;\n  justify-content: space-between;\n  padding: 21px 21px 0px 72px;\n  margin: 24px -72px 0;\n  align-items: center;\n"])));
var ErrorContainer = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  color: red;\n  padding-left: 15px;\n  display: inline-block;\n"])));
var LoadDataFooter = function LoadDataFooter(_ref) {
  var disabled = _ref.disabled,
    intl = _ref.intl,
    isLoading = _ref.isLoading,
    onConfirm = _ref.onConfirm,
    confirmText = _ref.confirmText,
    _ref$prependText = _ref.prependText,
    prependText = _ref$prependText === void 0 ? '' : _ref$prependText,
    _ref$errorText = _ref.errorText,
    errorText = _ref$errorText === void 0 ? '' : _ref$errorText;
  return /*#__PURE__*/_react["default"].createElement(LoadDataFooterContainer, null, /*#__PURE__*/_react["default"].createElement("div", null, prependText, /*#__PURE__*/_react["default"].createElement(AddDataButton, {
    disabled: disabled,
    isLoading: isLoading,
    onClick: onConfirm,
    width: "130px",
    cta: true
  }, isLoading && /*#__PURE__*/_react["default"].createElement(_loadingSpinner["default"], {
    size: 12
  }), isLoading ? null : intl.formatMessage({
    id: confirmText
  })), errorText && /*#__PURE__*/_react["default"].createElement(ErrorContainer, null, errorText)));
};
var _default = exports["default"] = (0, _reactIntl.injectIntl)(LoadDataFooter);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdEludGwiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9jb21tb24iLCJfbG9hZGluZ1NwaW5uZXIiLCJfdGVtcGxhdGVPYmplY3QiLCJfdGVtcGxhdGVPYmplY3QyIiwiX3RlbXBsYXRlT2JqZWN0MyIsIkFkZERhdGFCdXR0b24iLCJzdHlsZWQiLCJCdXR0b24iLCJfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsMiIsInByb3BzIiwiZGlzYWJsZWQiLCJ3aWR0aCIsImlzTG9hZGluZyIsIkxvYWREYXRhRm9vdGVyQ29udGFpbmVyIiwiZGl2IiwiYXR0cnMiLCJjbGFzc05hbWUiLCJFcnJvckNvbnRhaW5lciIsIkxvYWREYXRhRm9vdGVyIiwiX3JlZiIsImludGwiLCJvbkNvbmZpcm0iLCJjb25maXJtVGV4dCIsIl9yZWYkcHJlcGVuZFRleHQiLCJwcmVwZW5kVGV4dCIsIl9yZWYkZXJyb3JUZXh0IiwiZXJyb3JUZXh0IiwiY3JlYXRlRWxlbWVudCIsIm9uQ2xpY2siLCJjdGEiLCJzaXplIiwiZm9ybWF0TWVzc2FnZSIsImlkIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiaW5qZWN0SW50bCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2RhbHMvdGlsZXNldHMtbW9kYWxzL2xvYWQtZGF0YS1mb290ZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2luamVjdEludGwsIFdyYXBwZWRDb21wb25lbnRQcm9wc30gZnJvbSAncmVhY3QtaW50bCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHtCdXR0b259IGZyb20gJy4uLy4uL2NvbW1vbic7XG5pbXBvcnQgTG9hZGluZ1NwaW5uZXIgZnJvbSAnLi4vLi4vY29tbW9uL2xvYWRpbmctc3Bpbm5lcic7XG5cbmNvbnN0IEFkZERhdGFCdXR0b24gPSBzdHlsZWQoQnV0dG9uKTx7aXNMb2FkaW5nPzogYm9vbGVhbn0+YFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBvcGFjaXR5OiAke3Byb3BzID0+IChwcm9wcy5kaXNhYmxlZCA/IDAuNiA6IDEpfTtcbiAgaGVpZ2h0OiA0MHB4O1xuICBwYWRkaW5nOiA5cHggMzJweDtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gcHJvcHMud2lkdGh9O1xuXG4gIHN2ZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAke3Byb3BzID0+IChwcm9wcy5pc0xvYWRpbmcgPyAnMCcgOiAnNnB4Jyl9O1xuICB9XG5gO1xuXG5jb25zdCBMb2FkRGF0YUZvb3RlckNvbnRhaW5lciA9IHN0eWxlZC5kaXYuYXR0cnMoe1xuICBjbGFzc05hbWU6ICdsb2FkLWRhdGEtZm9vdGVyJ1xufSlgXG4gIC8qIHBvc2l0aW9uOiBhYnNvbHV0ZTsgKi9cbiAgd2lkdGg6IDEwMCU7XG4gIGJvdHRvbTogMDtcblxuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDIxcHggMjFweCAwcHggNzJweDtcbiAgbWFyZ2luOiAyNHB4IC03MnB4IDA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuXG5jb25zdCBFcnJvckNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGNvbG9yOiByZWQ7XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuYDtcblxudHlwZSBMb2FkRGF0YUZvb3RlclByb3BzID0ge1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIGlzTG9hZGluZz86IGJvb2xlYW47XG4gIG9uQ29uZmlybTogKCkgPT4gdm9pZDtcbiAgY29uZmlybVRleHQ6IHN0cmluZztcbiAgcHJlcGVuZFRleHQ/OiBzdHJpbmc7XG4gIGVycm9yVGV4dD86IHN0cmluZyB8IG51bGw7XG59O1xuXG5jb25zdCBMb2FkRGF0YUZvb3RlcjogUmVhY3QuRkM8TG9hZERhdGFGb290ZXJQcm9wcyAmIFdyYXBwZWRDb21wb25lbnRQcm9wcz4gPSAoe1xuICBkaXNhYmxlZCxcbiAgaW50bCxcbiAgaXNMb2FkaW5nLFxuICBvbkNvbmZpcm0sXG4gIGNvbmZpcm1UZXh0LFxuICBwcmVwZW5kVGV4dCA9ICcnLFxuICBlcnJvclRleHQgPSAnJ1xufTogTG9hZERhdGFGb290ZXJQcm9wcyAmIFdyYXBwZWRDb21wb25lbnRQcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxMb2FkRGF0YUZvb3RlckNvbnRhaW5lcj5cbiAgICAgIDxkaXY+XG4gICAgICAgIHtwcmVwZW5kVGV4dH1cbiAgICAgICAgPEFkZERhdGFCdXR0b25cbiAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgICAgaXNMb2FkaW5nPXtpc0xvYWRpbmd9XG4gICAgICAgICAgb25DbGljaz17b25Db25maXJtfVxuICAgICAgICAgIHdpZHRoPVwiMTMwcHhcIlxuICAgICAgICAgIGN0YVxuICAgICAgICA+XG4gICAgICAgICAge2lzTG9hZGluZyAmJiA8TG9hZGluZ1NwaW5uZXIgc2l6ZT17MTJ9IC8+fVxuICAgICAgICAgIHtpc0xvYWRpbmdcbiAgICAgICAgICAgID8gbnVsbFxuICAgICAgICAgICAgOiBpbnRsLmZvcm1hdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgIGlkOiBjb25maXJtVGV4dFxuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgPC9BZGREYXRhQnV0dG9uPlxuICAgICAgICB7ZXJyb3JUZXh0ICYmIDxFcnJvckNvbnRhaW5lcj57ZXJyb3JUZXh0fTwvRXJyb3JDb250YWluZXI+fVxuICAgICAgPC9kaXY+XG4gICAgPC9Mb2FkRGF0YUZvb3RlckNvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGluamVjdEludGwoTG9hZERhdGFGb290ZXIpIGFzIFJlYWN0LkZDPExvYWREYXRhRm9vdGVyUHJvcHM+O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFVBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLGlCQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBRyxPQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxlQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFBMEQsSUFBQUssZUFBQSxFQUFBQyxnQkFBQSxFQUFBQyxnQkFBQSxFQVIxRDtBQUNBO0FBU0EsSUFBTUMsYUFBYSxHQUFHLElBQUFDLDRCQUFNLEVBQUNDLGNBQU0sQ0FBQyxDQUFBTCxlQUFBLEtBQUFBLGVBQUEsT0FBQU0sdUJBQUEsaU5BSXZCLFVBQUFDLEtBQUs7RUFBQSxPQUFLQSxLQUFLLENBQUNDLFFBQVEsR0FBRyxHQUFHLEdBQUcsQ0FBQztBQUFBLENBQUMsRUFHckMsVUFBQUQsS0FBSztFQUFBLE9BQUlBLEtBQUssQ0FBQ0UsS0FBSztBQUFBLEdBR1gsVUFBQUYsS0FBSztFQUFBLE9BQUtBLEtBQUssQ0FBQ0csU0FBUyxHQUFHLEdBQUcsR0FBRyxLQUFLO0FBQUEsQ0FBQyxDQUUzRDtBQUVELElBQU1DLHVCQUF1QixHQUFHUCw0QkFBTSxDQUFDUSxHQUFHLENBQUNDLEtBQUssQ0FBQztFQUMvQ0MsU0FBUyxFQUFFO0FBQ2IsQ0FBQyxDQUFDLENBQUFiLGdCQUFBLEtBQUFBLGdCQUFBLE9BQUFLLHVCQUFBLHlOQVVEO0FBRUQsSUFBTVMsY0FBYyxHQUFHWCw0QkFBTSxDQUFDUSxHQUFHLENBQUFWLGdCQUFBLEtBQUFBLGdCQUFBLE9BQUFJLHVCQUFBLHNGQUloQztBQVdELElBQU1VLGNBQXFFLEdBQUcsU0FBeEVBLGNBQXFFQSxDQUFBQyxJQUFBLEVBUXhCO0VBQUEsSUFQakRULFFBQVEsR0FBQVMsSUFBQSxDQUFSVCxRQUFRO0lBQ1JVLElBQUksR0FBQUQsSUFBQSxDQUFKQyxJQUFJO0lBQ0pSLFNBQVMsR0FBQU8sSUFBQSxDQUFUUCxTQUFTO0lBQ1RTLFNBQVMsR0FBQUYsSUFBQSxDQUFURSxTQUFTO0lBQ1RDLFdBQVcsR0FBQUgsSUFBQSxDQUFYRyxXQUFXO0lBQUFDLGdCQUFBLEdBQUFKLElBQUEsQ0FDWEssV0FBVztJQUFYQSxXQUFXLEdBQUFELGdCQUFBLGNBQUcsRUFBRSxHQUFBQSxnQkFBQTtJQUFBRSxjQUFBLEdBQUFOLElBQUEsQ0FDaEJPLFNBQVM7SUFBVEEsU0FBUyxHQUFBRCxjQUFBLGNBQUcsRUFBRSxHQUFBQSxjQUFBO0VBRWQsb0JBQ0U5QixNQUFBLFlBQUFnQyxhQUFBLENBQUNkLHVCQUF1QixxQkFDdEJsQixNQUFBLFlBQUFnQyxhQUFBLGNBQ0dILFdBQVcsZUFDWjdCLE1BQUEsWUFBQWdDLGFBQUEsQ0FBQ3RCLGFBQWE7SUFDWkssUUFBUSxFQUFFQSxRQUFTO0lBQ25CRSxTQUFTLEVBQUVBLFNBQVU7SUFDckJnQixPQUFPLEVBQUVQLFNBQVU7SUFDbkJWLEtBQUssRUFBQyxPQUFPO0lBQ2JrQixHQUFHO0VBQUEsR0FFRmpCLFNBQVMsaUJBQUlqQixNQUFBLFlBQUFnQyxhQUFBLENBQUMxQixlQUFBLFdBQWM7SUFBQzZCLElBQUksRUFBRTtFQUFHLENBQUUsQ0FBQyxFQUN6Q2xCLFNBQVMsR0FDTixJQUFJLEdBQ0pRLElBQUksQ0FBQ1csYUFBYSxDQUFDO0lBQ2pCQyxFQUFFLEVBQUVWO0VBQ04sQ0FBQyxDQUNRLENBQUMsRUFDZkksU0FBUyxpQkFBSS9CLE1BQUEsWUFBQWdDLGFBQUEsQ0FBQ1YsY0FBYyxRQUFFUyxTQUEwQixDQUN0RCxDQUNrQixDQUFDO0FBRTlCLENBQUM7QUFBQyxJQUFBTyxRQUFBLEdBQUFDLE9BQUEsY0FFYSxJQUFBQyxxQkFBVSxFQUFDakIsY0FBYyxDQUFDIiwiaWdub3JlTGlzdCI6W119