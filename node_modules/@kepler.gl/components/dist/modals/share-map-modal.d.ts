import React from 'react';
import { ImageModalContainerProps } from './image-modal-container';
import { Provider } from '@kepler.gl/cloud-providers';
import { cleanupExportImage as cleanupExportImageAction } from '@kepler.gl/actions';
export declare const StyledInputLabel: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<React.DetailedHTMLProps<React.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, never>>;
export declare const StyleSharingUrl: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void) | React.RefObject<HTMLDivElement> | null | undefined;
}>, never>, never>>;
interface SharingUrlProps {
    url: string;
    message?: string;
}
export declare const SharingUrl: React.FC<SharingUrlProps>;
interface ShareMapUrlModalFactoryProps {
    isProviderLoading?: boolean;
    onExport?: (provider: Provider) => void;
    providerError?: string;
    successInfo?: {
        shareUrl?: string;
        folderLink?: string;
    };
    onUpdateImageSetting: ImageModalContainerProps['onUpdateImageSetting'];
    cleanupExportImage: typeof cleanupExportImageAction;
}
export default function ShareMapUrlModalFactory(): React.FC<ShareMapUrlModalFactoryProps>;
export {};
