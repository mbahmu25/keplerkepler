"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProviderSelect = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _cloudTile = _interopRequireDefault(require("../cloud-tile"));
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _constants = require("@kepler.gl/constants");
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var StyledProviderSection = _styledComponents["default"].div.attrs({
  className: 'provider-selection'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  gap: 8px;\n"])));
var ProviderSelect = exports.ProviderSelect = function ProviderSelect(_ref) {
  var _ref$cloudProviders = _ref.cloudProviders,
    cloudProviders = _ref$cloudProviders === void 0 ? [] : _ref$cloudProviders;
  return /*#__PURE__*/_react["default"].createElement("div", {
    "data-testid": _constants.dataTestIds.providerSelect
  }, cloudProviders.length ? /*#__PURE__*/_react["default"].createElement(StyledProviderSection, null, cloudProviders.map(function (provider) {
    return /*#__PURE__*/_react["default"].createElement(_cloudTile["default"], {
      key: provider.name,
      provider: provider
    });
  })) : /*#__PURE__*/_react["default"].createElement("p", null, "No storage provider available"));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2xvdWRUaWxlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9jb25zdGFudHMiLCJfdGVtcGxhdGVPYmplY3QiLCJTdHlsZWRQcm92aWRlclNlY3Rpb24iLCJzdHlsZWQiLCJkaXYiLCJhdHRycyIsImNsYXNzTmFtZSIsIl90YWdnZWRUZW1wbGF0ZUxpdGVyYWwyIiwiUHJvdmlkZXJTZWxlY3QiLCJleHBvcnRzIiwiX3JlZiIsIl9yZWYkY2xvdWRQcm92aWRlcnMiLCJjbG91ZFByb3ZpZGVycyIsImNyZWF0ZUVsZW1lbnQiLCJkYXRhVGVzdElkcyIsInByb3ZpZGVyU2VsZWN0IiwibGVuZ3RoIiwibWFwIiwicHJvdmlkZXIiLCJrZXkiLCJuYW1lIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZGFscy9jbG91ZC1jb21wb25lbnRzL3Byb3ZpZGVyLXNlbGVjdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IENsb3VkVGlsZSBmcm9tICcuLi9jbG91ZC10aWxlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7UHJvdmlkZXJ9IGZyb20gJ0BrZXBsZXIuZ2wvY2xvdWQtcHJvdmlkZXJzJztcbmltcG9ydCB7ZGF0YVRlc3RJZHN9IGZyb20gJ0BrZXBsZXIuZ2wvY29uc3RhbnRzJztcblxuY29uc3QgU3R5bGVkUHJvdmlkZXJTZWN0aW9uID0gc3R5bGVkLmRpdi5hdHRycyh7XG4gIGNsYXNzTmFtZTogJ3Byb3ZpZGVyLXNlbGVjdGlvbidcbn0pYFxuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDhweDtcbmA7XG5cbnR5cGUgUHJvdmlkZXJTZWxlY3RQcm9wcyA9IHtcbiAgY2xvdWRQcm92aWRlcnM6IFByb3ZpZGVyW107XG59O1xuXG5leHBvcnQgY29uc3QgUHJvdmlkZXJTZWxlY3Q6IFJlYWN0LkZDPFByb3ZpZGVyU2VsZWN0UHJvcHM+ID0gKHtjbG91ZFByb3ZpZGVycyA9IFtdfSkgPT4gKFxuICA8ZGl2IGRhdGEtdGVzdGlkPXtkYXRhVGVzdElkcy5wcm92aWRlclNlbGVjdH0+XG4gICAge2Nsb3VkUHJvdmlkZXJzLmxlbmd0aCA/IChcbiAgICAgIDxTdHlsZWRQcm92aWRlclNlY3Rpb24+XG4gICAgICAgIHtjbG91ZFByb3ZpZGVycy5tYXAocHJvdmlkZXIgPT4gKFxuICAgICAgICAgIDxDbG91ZFRpbGUga2V5PXtwcm92aWRlci5uYW1lfSBwcm92aWRlcj17cHJvdmlkZXJ9IC8+XG4gICAgICAgICkpfVxuICAgICAgPC9TdHlsZWRQcm92aWRlclNlY3Rpb24+XG4gICAgKSA6IChcbiAgICAgIDxwPk5vIHN0b3JhZ2UgcHJvdmlkZXIgYXZhaWxhYmxlPC9wPlxuICAgICl9XG4gIDwvZGl2PlxuKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHQSxJQUFBQSxVQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxNQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxpQkFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUcsVUFBQSxHQUFBSCxPQUFBO0FBQWlELElBQUFJLGVBQUEsRUFQakQ7QUFDQTtBQVFBLElBQU1DLHFCQUFxQixHQUFHQyw0QkFBTSxDQUFDQyxHQUFHLENBQUNDLEtBQUssQ0FBQztFQUM3Q0MsU0FBUyxFQUFFO0FBQ2IsQ0FBQyxDQUFDLENBQUFMLGVBQUEsS0FBQUEsZUFBQSxPQUFBTSx1QkFBQSxxREFHRDtBQU1NLElBQU1DLGNBQTZDLEdBQUFDLE9BQUEsQ0FBQUQsY0FBQSxHQUFHLFNBQWhEQSxjQUE2Q0EsQ0FBQUUsSUFBQTtFQUFBLElBQUFDLG1CQUFBLEdBQUFELElBQUEsQ0FBS0UsY0FBYztJQUFkQSxjQUFjLEdBQUFELG1CQUFBLGNBQUcsRUFBRSxHQUFBQSxtQkFBQTtFQUFBLG9CQUNoRmIsTUFBQSxZQUFBZSxhQUFBO0lBQUssZUFBYUMsc0JBQVcsQ0FBQ0M7RUFBZSxHQUMxQ0gsY0FBYyxDQUFDSSxNQUFNLGdCQUNwQmxCLE1BQUEsWUFBQWUsYUFBQSxDQUFDWCxxQkFBcUIsUUFDbkJVLGNBQWMsQ0FBQ0ssR0FBRyxDQUFDLFVBQUFDLFFBQVE7SUFBQSxvQkFDMUJwQixNQUFBLFlBQUFlLGFBQUEsQ0FBQ2xCLFVBQUEsV0FBUztNQUFDd0IsR0FBRyxFQUFFRCxRQUFRLENBQUNFLElBQUs7TUFBQ0YsUUFBUSxFQUFFQTtJQUFTLENBQUUsQ0FBQztFQUFBLENBQ3RELENBQ29CLENBQUMsZ0JBRXhCcEIsTUFBQSxZQUFBZSxhQUFBLFlBQUcsK0JBQWdDLENBRWxDLENBQUM7QUFBQSxDQUNQIiwiaWdub3JlTGlzdCI6W119