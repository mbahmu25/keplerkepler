"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _utils = require("@kepler.gl/utils");
var _icons = require("../common/icons");
var _layerHoverInfo = require("./layer-hover-info");
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

// 6th decimal is worth up to 0.11 m
// https://gis.stackexchange.com/questions/8650/measuring-accuracy-of-latitude-and-longitude
var DECIMAL = 6;
var DECIMAL_Z = 1;
var CoordinateInfoFactory = function CoordinateInfoFactory() {
  var CoordinateInfo = function CoordinateInfo(_ref) {
    var coordinate = _ref.coordinate,
      zoom = _ref.zoom;
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "coordingate-hover-info"
    }, /*#__PURE__*/_react["default"].createElement(_layerHoverInfo.StyledLayerName, {
      className: "map-popover__layer-name"
    }, /*#__PURE__*/_react["default"].createElement(_icons.CursorClick, {
      height: "12px"
    }), "Coordinate"), /*#__PURE__*/_react["default"].createElement("table", null, /*#__PURE__*/_react["default"].createElement("tbody", null, /*#__PURE__*/_react["default"].createElement("tr", {
      className: "row"
    }, /*#__PURE__*/_react["default"].createElement("td", {
      className: "row__value"
    }, (0, _utils.preciseRound)(coordinate[1], DECIMAL), ","), /*#__PURE__*/_react["default"].createElement("td", {
      className: "row__value"
    }, (0, _utils.preciseRound)(coordinate[0], DECIMAL), ","), /*#__PURE__*/_react["default"].createElement("td", {
      className: "row__value"
    }, (0, _utils.preciseRound)(zoom, DECIMAL_Z), "z")))));
  };
  return CoordinateInfo;
};
var _default = exports["default"] = CoordinateInfoFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl91dGlscyIsIl9pY29ucyIsIl9sYXllckhvdmVySW5mbyIsIkRFQ0lNQUwiLCJERUNJTUFMX1oiLCJDb29yZGluYXRlSW5mb0ZhY3RvcnkiLCJDb29yZGluYXRlSW5mbyIsIl9yZWYiLCJjb29yZGluYXRlIiwiem9vbSIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJTdHlsZWRMYXllck5hbWUiLCJDdXJzb3JDbGljayIsImhlaWdodCIsInByZWNpc2VSb3VuZCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYXAvY29vcmRpbmF0ZS1pbmZvLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtwcmVjaXNlUm91bmR9IGZyb20gJ0BrZXBsZXIuZ2wvdXRpbHMnO1xuaW1wb3J0IHtDdXJzb3JDbGlja30gZnJvbSAnLi4vY29tbW9uL2ljb25zJztcbmltcG9ydCB7U3R5bGVkTGF5ZXJOYW1lfSBmcm9tICcuL2xheWVyLWhvdmVyLWluZm8nO1xuXG4vLyA2dGggZGVjaW1hbCBpcyB3b3J0aCB1cCB0byAwLjExIG1cbi8vIGh0dHBzOi8vZ2lzLnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy84NjUwL21lYXN1cmluZy1hY2N1cmFjeS1vZi1sYXRpdHVkZS1hbmQtbG9uZ2l0dWRlXG5jb25zdCBERUNJTUFMID0gNjtcbmNvbnN0IERFQ0lNQUxfWiA9IDE7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29vcmRpbmF0ZUluZm9Qcm9wcyB7XG4gIGNvb3JkaW5hdGU6IG51bWJlcltdO1xuICB6b29tOiBudW1iZXI7XG59XG5cbmNvbnN0IENvb3JkaW5hdGVJbmZvRmFjdG9yeSA9ICgpID0+IHtcbiAgY29uc3QgQ29vcmRpbmF0ZUluZm86IFJlYWN0LkZDPENvb3JkaW5hdGVJbmZvUHJvcHM+ID0gKHtjb29yZGluYXRlLCB6b29tfSkgPT4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiY29vcmRpbmdhdGUtaG92ZXItaW5mb1wiPlxuICAgICAgPFN0eWxlZExheWVyTmFtZSBjbGFzc05hbWU9XCJtYXAtcG9wb3Zlcl9fbGF5ZXItbmFtZVwiPlxuICAgICAgICA8Q3Vyc29yQ2xpY2sgaGVpZ2h0PVwiMTJweFwiIC8+XG4gICAgICAgIENvb3JkaW5hdGVcbiAgICAgIDwvU3R5bGVkTGF5ZXJOYW1lPlxuICAgICAgPHRhYmxlPlxuICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgPHRyIGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInJvd19fdmFsdWVcIj57cHJlY2lzZVJvdW5kKGNvb3JkaW5hdGVbMV0sIERFQ0lNQUwpfSw8L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInJvd19fdmFsdWVcIj57cHJlY2lzZVJvdW5kKGNvb3JkaW5hdGVbMF0sIERFQ0lNQUwpfSw8L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInJvd19fdmFsdWVcIj57cHJlY2lzZVJvdW5kKHpvb20sIERFQ0lNQUxfWil9ejwvdGQ+XG4gICAgICAgICAgPC90cj5cbiAgICAgICAgPC90Ym9keT5cbiAgICAgIDwvdGFibGU+XG4gICAgPC9kaXY+XG4gICk7XG5cbiAgcmV0dXJuIENvb3JkaW5hdGVJbmZvO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29vcmRpbmF0ZUluZm9GYWN0b3J5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsTUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsZUFBQSxHQUFBSCxPQUFBO0FBTkE7QUFDQTs7QUFPQTtBQUNBO0FBQ0EsSUFBTUksT0FBTyxHQUFHLENBQUM7QUFDakIsSUFBTUMsU0FBUyxHQUFHLENBQUM7QUFPbkIsSUFBTUMscUJBQXFCLEdBQUcsU0FBeEJBLHFCQUFxQkEsQ0FBQSxFQUFTO0VBQ2xDLElBQU1DLGNBQTZDLEdBQUcsU0FBaERBLGNBQTZDQSxDQUFBQyxJQUFBO0lBQUEsSUFBS0MsVUFBVSxHQUFBRCxJQUFBLENBQVZDLFVBQVU7TUFBRUMsSUFBSSxHQUFBRixJQUFBLENBQUpFLElBQUk7SUFBQSxvQkFDdEVaLE1BQUEsWUFBQWEsYUFBQTtNQUFLQyxTQUFTLEVBQUM7SUFBd0IsZ0JBQ3JDZCxNQUFBLFlBQUFhLGFBQUEsQ0FBQ1IsZUFBQSxDQUFBVSxlQUFlO01BQUNELFNBQVMsRUFBQztJQUF5QixnQkFDbERkLE1BQUEsWUFBQWEsYUFBQSxDQUFDVCxNQUFBLENBQUFZLFdBQVc7TUFBQ0MsTUFBTSxFQUFDO0lBQU0sQ0FBRSxDQUFDLGNBRWQsQ0FBQyxlQUNsQmpCLE1BQUEsWUFBQWEsYUFBQSw2QkFDRWIsTUFBQSxZQUFBYSxhQUFBLDZCQUNFYixNQUFBLFlBQUFhLGFBQUE7TUFBSUMsU0FBUyxFQUFDO0lBQUssZ0JBQ2pCZCxNQUFBLFlBQUFhLGFBQUE7TUFBSUMsU0FBUyxFQUFDO0lBQVksR0FBRSxJQUFBSSxtQkFBWSxFQUFDUCxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUVMLE9BQU8sQ0FBQyxFQUFDLEdBQUssQ0FBQyxlQUN2RU4sTUFBQSxZQUFBYSxhQUFBO01BQUlDLFNBQVMsRUFBQztJQUFZLEdBQUUsSUFBQUksbUJBQVksRUFBQ1AsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFTCxPQUFPLENBQUMsRUFBQyxHQUFLLENBQUMsZUFDdkVOLE1BQUEsWUFBQWEsYUFBQTtNQUFJQyxTQUFTLEVBQUM7SUFBWSxHQUFFLElBQUFJLG1CQUFZLEVBQUNOLElBQUksRUFBRUwsU0FBUyxDQUFDLEVBQUMsR0FBSyxDQUM3RCxDQUNDLENBQ0YsQ0FDSixDQUFDO0VBQUEsQ0FDUDtFQUVELE9BQU9FLGNBQWM7QUFDdkIsQ0FBQztBQUFDLElBQUFVLFFBQUEsR0FBQUMsT0FBQSxjQUVhWixxQkFBcUIiLCJpZ25vcmVMaXN0IjpbXX0=