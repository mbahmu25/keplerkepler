"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = EffectControlFactory;
var _react = _interopRequireWildcard(require("react"));
var _icons = require("../../common/icons");
var _styledComponents = require("../../common/styled-components");
var _mapControlTooltip = _interopRequireDefault(require("../map-control-tooltip"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

EffectControlFactory.deps = [_mapControlTooltip["default"]];
function EffectControlFactory(MapControlTooltip) {
  var defaultActionIcons = {
    effectsIcon: _icons.MagicWand
  };
  var EffectControl = function EffectControl(_ref) {
    var _mapControls$effect, _mapControls$effect2;
    var mapControls = _ref.mapControls,
      onToggleMapControl = _ref.onToggleMapControl,
      _ref$actionIcons = _ref.actionIcons,
      actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons;
    var onClick = (0, _react.useCallback)(function (event) {
      event.preventDefault();
      onToggleMapControl('effect');
    }, [onToggleMapControl]);
    var showControl = mapControls === null || mapControls === void 0 || (_mapControls$effect = mapControls.effect) === null || _mapControls$effect === void 0 ? void 0 : _mapControls$effect.show;
    if (!showControl) {
      return null;
    }
    var active = mapControls === null || mapControls === void 0 || (_mapControls$effect2 = mapControls.effect) === null || _mapControls$effect2 === void 0 ? void 0 : _mapControls$effect2.active;
    return /*#__PURE__*/_react["default"].createElement(MapControlTooltip, {
      id: "show-effect",
      message: active ? 'tooltip.hideEffectPanel' : 'tooltip.showEffectPanel'
    }, /*#__PURE__*/_react["default"].createElement(_styledComponents.MapControlButton, {
      className: "map-control-button toggle-effect",
      onClick: onClick,
      active: active
    }, /*#__PURE__*/_react["default"].createElement(actionIcons.effectsIcon, {
      height: "22px"
    })));
  };
  EffectControl.displayName = 'EffectControl';
  return /*#__PURE__*/_react["default"].memo(EffectControl);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfaWNvbnMiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9tYXBDb250cm9sVG9vbHRpcCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJFZmZlY3RDb250cm9sRmFjdG9yeSIsImRlcHMiLCJNYXBDb250cm9sVG9vbHRpcEZhY3RvcnkiLCJNYXBDb250cm9sVG9vbHRpcCIsImRlZmF1bHRBY3Rpb25JY29ucyIsImVmZmVjdHNJY29uIiwiTWFnaWNXYW5kIiwiRWZmZWN0Q29udHJvbCIsIl9yZWYiLCJfbWFwQ29udHJvbHMkZWZmZWN0IiwiX21hcENvbnRyb2xzJGVmZmVjdDIiLCJtYXBDb250cm9scyIsIm9uVG9nZ2xlTWFwQ29udHJvbCIsIl9yZWYkYWN0aW9uSWNvbnMiLCJhY3Rpb25JY29ucyIsIm9uQ2xpY2siLCJ1c2VDYWxsYmFjayIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzaG93Q29udHJvbCIsImVmZmVjdCIsInNob3ciLCJhY3RpdmUiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJtZXNzYWdlIiwiTWFwQ29udHJvbEJ1dHRvbiIsImNsYXNzTmFtZSIsImhlaWdodCIsImRpc3BsYXlOYW1lIiwiUmVhY3QiLCJtZW1vIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21hcC9lZmZlY3RzL2VmZmVjdC1jb250cm9sLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHt1c2VDYWxsYmFjaywgQ29tcG9uZW50VHlwZX0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQge01hcENvbnRyb2xzfSBmcm9tICdAa2VwbGVyLmdsL3R5cGVzJztcblxuaW1wb3J0IHtNYWdpY1dhbmR9IGZyb20gJy4uLy4uL2NvbW1vbi9pY29ucyc7XG5pbXBvcnQge01hcENvbnRyb2xCdXR0b259IGZyb20gJy4uLy4uL2NvbW1vbi9zdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgTWFwQ29udHJvbFRvb2x0aXBGYWN0b3J5IGZyb20gJy4uL21hcC1jb250cm9sLXRvb2x0aXAnO1xuXG5pbnRlcmZhY2UgRWZmZWN0Q29udHJvbEljb25zIHtcbiAgZWZmZWN0c0ljb246IENvbXBvbmVudFR5cGU8YW55Pjtcbn1cblxuZXhwb3J0IHR5cGUgRWZmZWN0Q29udHJvbFByb3BzID0ge1xuICBtYXBDb250cm9sczogTWFwQ29udHJvbHM7XG4gIG9uVG9nZ2xlTWFwQ29udHJvbDogKGNvbnRyb2w6IHN0cmluZykgPT4gdm9pZDtcbiAgYWN0aW9uSWNvbnM6IEVmZmVjdENvbnRyb2xJY29ucztcbn07XG5cbkVmZmVjdENvbnRyb2xGYWN0b3J5LmRlcHMgPSBbTWFwQ29udHJvbFRvb2x0aXBGYWN0b3J5XTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRWZmZWN0Q29udHJvbEZhY3RvcnkoXG4gIE1hcENvbnRyb2xUb29sdGlwOiBSZXR1cm5UeXBlPHR5cGVvZiBNYXBDb250cm9sVG9vbHRpcEZhY3Rvcnk+XG4pOiBSZWFjdC5GQzxFZmZlY3RDb250cm9sUHJvcHM+IHtcbiAgY29uc3QgZGVmYXVsdEFjdGlvbkljb25zID0ge1xuICAgIGVmZmVjdHNJY29uOiBNYWdpY1dhbmRcbiAgfTtcblxuICBjb25zdCBFZmZlY3RDb250cm9sID0gKHtcbiAgICBtYXBDb250cm9scyxcbiAgICBvblRvZ2dsZU1hcENvbnRyb2wsXG4gICAgYWN0aW9uSWNvbnMgPSBkZWZhdWx0QWN0aW9uSWNvbnNcbiAgfTogRWZmZWN0Q29udHJvbFByb3BzKSA9PiB7XG4gICAgY29uc3Qgb25DbGljayA9IHVzZUNhbGxiYWNrKFxuICAgICAgZXZlbnQgPT4ge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBvblRvZ2dsZU1hcENvbnRyb2woJ2VmZmVjdCcpO1xuICAgICAgfSxcbiAgICAgIFtvblRvZ2dsZU1hcENvbnRyb2xdXG4gICAgKTtcblxuICAgIGNvbnN0IHNob3dDb250cm9sID0gbWFwQ29udHJvbHM/LmVmZmVjdD8uc2hvdztcbiAgICBpZiAoIXNob3dDb250cm9sKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBjb25zdCBhY3RpdmUgPSBtYXBDb250cm9scz8uZWZmZWN0Py5hY3RpdmU7XG4gICAgcmV0dXJuIChcbiAgICAgIDxNYXBDb250cm9sVG9vbHRpcFxuICAgICAgICBpZD1cInNob3ctZWZmZWN0XCJcbiAgICAgICAgbWVzc2FnZT17YWN0aXZlID8gJ3Rvb2x0aXAuaGlkZUVmZmVjdFBhbmVsJyA6ICd0b29sdGlwLnNob3dFZmZlY3RQYW5lbCd9XG4gICAgICA+XG4gICAgICAgIDxNYXBDb250cm9sQnV0dG9uXG4gICAgICAgICAgY2xhc3NOYW1lPVwibWFwLWNvbnRyb2wtYnV0dG9uIHRvZ2dsZS1lZmZlY3RcIlxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgYWN0aXZlPXthY3RpdmV9XG4gICAgICAgID5cbiAgICAgICAgICA8YWN0aW9uSWNvbnMuZWZmZWN0c0ljb24gaGVpZ2h0PVwiMjJweFwiIC8+XG4gICAgICAgIDwvTWFwQ29udHJvbEJ1dHRvbj5cbiAgICAgIDwvTWFwQ29udHJvbFRvb2x0aXA+XG4gICAgKTtcbiAgfTtcblxuICBFZmZlY3RDb250cm9sLmRpc3BsYXlOYW1lID0gJ0VmZmVjdENvbnRyb2wnO1xuICBy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