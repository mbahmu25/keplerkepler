"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = NotificationPanelFactory;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _notificationItem = _interopRequireDefault(require("./notification-panel/notification-item"));
var _constants = require("@kepler.gl/constants");
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var NotificationPanelContent = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  background: transparent;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding: 4px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  position: absolute;\n  top: 1em;\n  right: 1em;\n  z-index: 10000;\n  box-sizing: border-box;\n"])));
NotificationPanelFactory.deps = [_notificationItem["default"]];
function NotificationPanelFactory(NotificationItem) {
  var NotificationPanelUnmemoized = /*#__PURE__*/function (_Component) {
    function NotificationPanelUnmemoized() {
      (0, _classCallCheck2["default"])(this, NotificationPanelUnmemoized);
      return _callSuper(this, NotificationPanelUnmemoized, arguments);
    }
    (0, _inherits2["default"])(NotificationPanelUnmemoized, _Component);
    return (0, _createClass2["default"])(NotificationPanelUnmemoized, [{
      key: "render",
      value: function render() {
        var _this = this;
        var globalNotifications = this.props.notifications.filter(function (n) {
          return n.topic === _constants.DEFAULT_NOTIFICATION_TOPICS.global;
        });
        return /*#__PURE__*/_react["default"].createElement(NotificationPanelContent, {
          className: "notification-panel",
          style: {
            display: globalNotifications.length ? 'block' : 'none'
          }
        }, globalNotifications.map(function (n) {
          return /*#__PURE__*/_react["default"].createElement(NotificationItem, {
            key: n.id,
            notification: n,
            removeNotification: _this.props.removeNotification
          });
        }));
      }
    }]);
  }(_react.Component);
  (0, _defineProperty2["default"])(NotificationPanelUnmemoized, "displayName", 'NotificationPanel');
  var NotificationPanel = /*#__PURE__*/_react["default"].memo(NotificationPanelUnmemoized);
  return NotificationPanel;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfc3R5bGVkQ29tcG9uZW50cyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfbm90aWZpY2F0aW9uSXRlbSIsIl9jb25zdGFudHMiLCJfdGVtcGxhdGVPYmplY3QiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJfY2FsbFN1cGVyIiwibyIsIl9nZXRQcm90b3R5cGVPZjIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImNvbnN0cnVjdG9yIiwiYXBwbHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsIk5vdGlmaWNhdGlvblBhbmVsQ29udGVudCIsInN0eWxlZCIsImRpdiIsIl90YWdnZWRUZW1wbGF0ZUxpdGVyYWwyIiwiTm90aWZpY2F0aW9uUGFuZWxGYWN0b3J5IiwiZGVwcyIsIk5vdGlmaWNhdGlvbkl0ZW1GYWN0b3J5IiwiTm90aWZpY2F0aW9uSXRlbSIsIk5vdGlmaWNhdGlvblBhbmVsVW5tZW1vaXplZCIsIl9Db21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2syIiwiYXJndW1lbnRzIiwiX2luaGVyaXRzMiIsIl9jcmVhdGVDbGFzczIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsIl90aGlzIiwiZ2xvYmFsTm90aWZpY2F0aW9ucyIsInByb3BzIiwibm90aWZpY2F0aW9ucyIsImZpbHRlciIsInRvcGljIiwiREVGQVVMVF9OT1RJRklDQVRJT05fVE9QSUNTIiwiZ2xvYmFsIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsInN0eWxlIiwiZGlzcGxheSIsImxlbmd0aCIsIm1hcCIsImlkIiwibm90aWZpY2F0aW9uIiwicmVtb3ZlTm90aWZpY2F0aW9uIiwiQ29tcG9uZW50IiwiX2RlZmluZVByb3BlcnR5MiIsIk5vdGlmaWNhdGlvblBhbmVsIiwiUmVhY3QiLCJtZW1vIl0sInNvdXJjZXMiOlsiLi4vc3JjL25vdGlmaWNhdGlvbi1wYW5lbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IE5vdGlmaWNhdGlvbkl0ZW1GYWN0b3J5IGZyb20gJy4vbm90aWZpY2F0aW9uLXBhbmVsL25vdGlmaWNhdGlvbi1pdGVtJztcbmltcG9ydCB7REVGQVVMVF9OT1RJRklDQVRJT05fVE9QSUNTfSBmcm9tICdAa2VwbGVyLmdsL2NvbnN0YW50cyc7XG5pbXBvcnQge05vdGlmaWNhdGlvbnN9IGZyb20gJ0BrZXBsZXIuZ2wvdHlwZXMnO1xuaW1wb3J0IHtyZW1vdmVOb3RpZmljYXRpb259IGZyb20gJ0BrZXBsZXIuZ2wvYWN0aW9ucyc7XG5cbmNvbnN0IE5vdGlmaWNhdGlvblBhbmVsQ29udGVudCA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIHBhZGRpbmc6IDRweDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMWVtO1xuICByaWdodDogMWVtO1xuICB6LWluZGV4OiAxMDAwMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbmA7XG5cbk5vdGlmaWNhdGlvblBhbmVsRmFjdG9yeS5kZXBzID0gW05vdGlmaWNhdGlvbkl0ZW1GYWN0b3J5XTtcblxuaW50ZXJmYWNlIE5vdGlmaWNhdGlvblBhbmVsUHJvcHMge1xuICByZW1vdmVOb3RpZmljYXRpb24/OiB0eXBlb2YgcmVtb3ZlTm90aWZpY2F0aW9uO1xuICBub3RpZmljYXRpb25zOiBOb3RpZmljYXRpb25zW107XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5vdGlmaWNhdGlvblBhbmVsRmFjdG9yeShcbiAgTm90aWZpY2F0aW9uSXRlbTogUmV0dXJuVHlwZTx0eXBlb2YgTm90aWZpY2F0aW9uSXRlbUZhY3Rvcnk+XG4pOiBSZWFjdC5Db21wb25lbnRDbGFzczxOb3RpZmljYXRpb25QYW5lbFByb3BzPiB7XG4gIGNsYXNzIE5vdGlmaWNhdGlvblBhbmVsVW5tZW1vaXplZCBleHRlbmRzIENvbXBvbmVudDxOb3RpZmljYXRpb25QYW5lbFByb3BzPiB7XG4gICAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ05vdGlmaWNhdGlvblBhbmVsJztcblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IGdsb2JhbE5vdGlmaWNhdGlvbnMgPSB0aGlzLnByb3BzLm5vdGlmaWNhdGlvbnMuZmlsdGVyKFxuICAgICAgICBuID0+IG4udG9waWMgPT09IERFRkFVTFRfTk9USUZJQ0FUSU9OX1RPUElDUy5nbG9iYWxcbiAgICAgICk7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Tm90aWZpY2F0aW9uUGFuZWxDb250ZW50XG4gICAgICAgICAgY2xhc3NOYW1lPVwibm90aWZpY2F0aW9uLXBhbmVsXCJcbiAgICAgICAgICBzdHlsZT17e2Rpc3BsYXk6IGdsb2JhbE5vdGlmaWNhdGlvbnMubGVuZ3RoID8gJ2Jsb2NrJyA6ICdub25lJ319XG4gICAgICAgID5cbiAgICAgICAgICB7Z2xvYmFsTm90aWZpY2F0aW9ucy5tYXAobiA9PiAoXG4gICAgICAgICAgICA8Tm90aWZpY2F0aW9uSXRlbVxuICAgICAgICAgICAgICBrZXk9e24uaWR9XG4gICAgICAgICAgICAgIG5vdGlmaWNhdGlvbj17bn1cbiAgICAgICAgICAgICAgcmVtb3ZlTm90aWZpY2F0aW9uPXt0aGlzLnByb3BzLnJlbW92ZU5vdGlmaWNhdGlvbn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvTm90aWZpY2F0aW9uUGFuZWxDb250ZW50PlxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBOb3RpZmljYXRpb25QYW5lbCA9IFJlYWN0Lm1lbW8oXG4gICAgTm90aWZpY2F0aW9uUGFuZWxVbm1lbW9pemVkXG4gICkgYXMgdW5rbm93biBhcyB0eXBlb2YgTm90aWZpY2F0aW9uUGFuZWxVbm1lbW9pemVkO1xuICByZXR1cm4gTm90aWZpY2F0aW9uUGFuZWw7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGlCQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFFQSxJQUFBRyxpQkFBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUksVUFBQSxHQUFBSixPQUFBO0FBQWlFLElBQUFLLGVBQUEsRUFQakU7QUFDQTtBQUFBLFNBQUFDLHlCQUFBQyxDQUFBLDZCQUFBQyxPQUFBLG1CQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxDQUFBLFdBQUFBLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLEtBQUFGLENBQUE7QUFBQSxTQUFBUix3QkFBQVEsQ0FBQSxFQUFBRSxDQUFBLFNBQUFBLENBQUEsSUFBQUYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJLFVBQUEsU0FBQUosQ0FBQSxlQUFB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