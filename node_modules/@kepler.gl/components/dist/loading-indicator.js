"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.StyledContainer = void 0;
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _templateObject; // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var StyledContainer = exports.StyledContainer = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  position: absolute;\n  left: ", "px;\n  bottom: ", "px;\n  z-index: 1;\n  color: ", ";\n  opacity: ", ";\n  transition: opacity 0.5s ease-in-out;\n  background-color: ", ";\n  border-radius: 0px;\n  padding-left: 3px;\n  padding-right: 3px;\n  font-size: 12px;\n"])), function (props) {
  return props.left;
}, function (props) {
  return props.theme.sidePanel.margin.left;
}, function (props) {
  return props.theme.textColorHl;
}, function (props) {
  return props.isVisible ? 1 : 0;
}, function (props) {
  return props.theme.sidePanelBg;
});
var LoadingIndicator = function LoadingIndicator(_ref) {
  var isVisible = _ref.isVisible,
    children = _ref.children,
    activeSidePanel = _ref.activeSidePanel,
    sidePanelWidth = _ref.sidePanelWidth,
    theme = _ref.theme;
  var left = (activeSidePanel ? sidePanelWidth || 0 : 0) + theme.sidePanel.margin.left;
  return /*#__PURE__*/_react["default"].createElement(StyledContainer, {
    isVisible: isVisible,
    left: left
  }, children);
};
var _default = exports["default"] = (0, _styledComponents.withTheme)(LoadingIndicator);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9zdHlsZWRDb21wb25lbnRzIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfdGVtcGxhdGVPYmplY3QiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsIl90eXBlb2YiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJTdHlsZWRDb250YWluZXIiLCJleHBvcnRzIiwic3R5bGVkIiwiZGl2IiwiX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbDIiLCJwcm9wcyIsImxlZnQiLCJ0aGVtZSIsInNpZGVQYW5lbCIsIm1hcmdpbiIsInRleHRDb2xvckhsIiwiaXNWaXNpYmxlIiwic2lkZVBhbmVsQmciLCJMb2FkaW5nSW5kaWNhdG9yIiwiX3JlZiIsImNoaWxkcmVuIiwiYWN0aXZlU2lkZVBhbmVsIiwic2lkZVBhbmVsV2lkdGgiLCJjcmVhdGVFbGVtZW50IiwiX2RlZmF1bHQiLCJ3aXRoVGhlbWUiXSwic291cmNlcyI6WyIuLi9zcmMvbG9hZGluZy1pbmRpY2F0b3IudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge1Byb3BzV2l0aENoaWxkcmVufSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkLCB7d2l0aFRoZW1lfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbnR5cGUgU3R5bGVkQ29udGFpbmVyUHJvcHMgPSB7XG4gIGlzVmlzaWJsZT86IGJvb2xlYW47XG4gIGxlZnQ6IG51bWJlcjtcbn07XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRDb250YWluZXIgPSBzdHlsZWQuZGl2PFN0eWxlZENvbnRhaW5lclByb3BzPmBcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAke3Byb3BzID0+IHByb3BzLmxlZnR9cHg7XG4gIGJvdHRvbTogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5zaWRlUGFuZWwubWFyZ2luLmxlZnR9cHg7XG4gIHotaW5kZXg6IDE7XG4gIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRleHRDb2xvckhsfTtcbiAgb3BhY2l0eTogJHtwcm9wcyA9PiAocHJvcHMuaXNWaXNpYmxlID8gMSA6IDApfTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGVhc2UtaW4tb3V0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnNpZGVQYW5lbEJnfTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBwYWRkaW5nLWxlZnQ6IDNweDtcbiAgcGFkZGluZy1yaWdodDogM3B4O1xuICBmb250LXNpemU6IDEycHg7XG5gO1xuXG50eXBlIExvYWRpbmdJbmRpY2F0b3JQcm9wcyA9IHtcbiAgaXNWaXNpYmxlPzogYm9vbGVhbjtcbiAgYWN0aXZlU2lkZVBhbmVsPzogYm9vbGVhbjtcbiAgc2lkZVBhbmVsV2lkdGg/OiBudW1iZXI7XG59O1xuXG5jb25zdCBMb2FkaW5nSW5kaWNhdG9yOiBSZWFjdC5GQzxQcm9wc1dpdGhDaGlsZHJlbjxMb2FkaW5nSW5kaWNhdG9yUHJvcHM+ICYge3RoZW1lOiBhbnl9PiA9ICh7XG4gIGlzVmlzaWJsZSxcbiAgY2hpbGRyZW4sXG4gIGFjdGl2ZVNpZGVQYW5lbCxcbiAgc2lkZVBhbmVsV2lkdGgsXG4gIHRoZW1lXG59KSA9PiB7XG4gIGNvbnN0IGxlZnQgPSAoYWN0aXZlU2lkZVBhbmVsID8gc2lkZVBhbmVsV2lkdGggfHwgMCA6IDApICsgdGhlbWUuc2lkZVBhbmVsLm1hcmdpbi5sZWZ0O1xuXG4gIHJldHVybiAoXG4gICAgPFN0eWxlZENvbnRhaW5lciBpc1Zpc2libGU9e2lzVmlzaWJsZX0gbGVmdD17bGVmdH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9TdHlsZWRDb250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoTG9hZGluZ0luZGljYXRvcikgYXMgUmVhY3QuRkM8UHJvcHNXaXRoQ2hpbGRyZW48TG9hZGluZ0luZGljYXRvclByb3BzPj47XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGlCQUFBLEdBQUFDLHVCQUFBLENBQUFGLE9BQUE7QUFBb0QsSUFBQUcsZUFBQSxFQUpwRDtBQUNBO0FBQUEsU0FBQUMseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFILHdCQUFBRyxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxTQUFBSixDQUFBLGVBQUFBLENBQUEsZ0JBQUFLLE9BQUEsQ0FBQUwsQ0FBQSwwQkFBQUEsQ0FBQSxzQkFBQUEsQ0FBQSxRQUFBRyxDQUFBLEdBQUFKLHdCQUFBLENBQUFHLENBQUEsT0FBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQSxPQUFBUSxDQUFBLEtBQUFDLFNBQUEsVUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLENBQUEsU0FBQUcsQ0FBQSxHQUFBUCxDQUFBLEdBQUFDLE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQWIsQ0FBQSxFQUFBYyxDQUFBLFVBQUFHLENBQUEsS0FBQUEsQ0FBQSxDQUFBVixHQUFBLElBQUFVLENBQUEsQ0FBQUMsR0FBQSxJQUFBUCxNQUFBLENBQUFDLGNBQUEsQ0FBQUosQ0FBQSxFQUFBTSxDQUFBLEVBQUFHLENBQUEsSUFBQVQsQ0FBQSxDQUFBTSxDQUFBLElBQUFkLENBQUEsQ0FBQWMsQ0FBQSxZQUFBTixDQUFBLGNBQUFSLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBVU8sSUFBTVcsZUFBZSxHQUFBQyxPQUFBLENBQUFELGVBQUEsR0FBR0UsNEJBQU0sQ0FBQ0MsR0FBRyxDQUFBeEIsZUFBQSxLQUFBQSxlQUFBLE9BQUF5Qix1QkFBQSwrUkFFL0IsVUFBQUMsS0FBSztFQUFBLE9BQUlBLEtBQUssQ0FBQ0MsSUFBSTtBQUFBLEdBQ2pCLFVBQUFELEtBQUs7RUFBQSxPQUFJQSxLQUFLLENBQUNFLEtBQUssQ0FBQ0MsU0FBUyxDQUFDQyxNQUFNLENBQUNILElBQUk7QUFBQSxHQUUzQyxVQUFBRCxLQUFLO0VBQUEsT0FBSUEsS0FBSyxDQUFDRSxLQUFLLENBQUNHLFdBQVc7QUFBQSxHQUM5QixVQUFBTCxLQUFLO0VBQUEsT0FBS0EsS0FBSyxDQUFDTSxTQUFTLEdBQUcsQ0FBQyxHQUFHLENBQUM7QUFBQSxDQUFDLEVBRXpCLFVBQUFOLEtBQUs7RUFBQSxPQUFJQSxLQUFLLENBQUNFLEtBQUssQ0FBQ0ssV0FBVztBQUFBLEVBS3JEO0FBUUQsSUFBTUMsZ0JBQW1GLEdBQUcsU0FBdEZBLGdCQUFtRkEsQ0FBQUMsSUFBQSxFQU1uRjtFQUFBLElBTEpILFNBQVMsR0FBQUcsSUFBQSxDQUFUSCxTQUFTO0lBQ1RJLFFBQVEsR0FBQUQsSUFBQSxDQUFSQyxRQUFRO0lBQ1JDLGVBQWUsR0FBQUYsSUFBQSxDQUFmRSxlQUFlO0lBQ2ZDLGNBQWMsR0FBQUgsSUFBQSxDQUFkRyxjQUFjO0lBQ2RWLEtBQUssR0FBQU8sSUFBQSxDQUFMUCxLQUFLO0VBRUwsSUFBTUQsSUFBSSxHQUFHLENBQUNVLGVBQWUsR0FBR0MsY0FBYyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUlWLEtBQUssQ0FBQ0MsU0FBUyxDQUFDQyxNQUFNLENBQUNILElBQUk7RUFFdEYsb0JBQ0VoQyxNQUFBLFlBQUE0QyxhQUFBLENBQUNsQixlQUFlO0lBQUNXLFNBQVMsRUFBRUEsU0FBVTtJQUFDTCxJQUFJLEVBQUVBO0VBQUssR0FDL0NTLFFBQ2MsQ0FBQztBQUV0QixDQUFDO0FBQUMsSUFBQUksUUFBQSxHQUFBbEIsT0FBQSxjQUVhLElBQUFtQiwyQkFBUyxFQUFDUCxnQkFBZ0IsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==