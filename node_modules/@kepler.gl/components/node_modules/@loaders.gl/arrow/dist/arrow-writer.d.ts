import type { WriterOptions } from '@loaders.gl/loader-utils';
import { ColumnarTable } from "./lib/encoders/encode-arrow.js";
type ArrowWriterOptions = WriterOptions & {
    arrow?: {};
};
/** Apache Arrow writer */
export declare const ArrowWriter: {
    readonly name: "Apache Arrow";
    readonly id: "arrow";
    readonly module: "arrow";
    readonly version: any;
    readonly extensions: ["arrow", "feather"];
    readonly mimeTypes: ["application/vnd.apache.arrow.file", "application/vnd.apache.arrow.stream", "application/octet-stream"];
    readonly binary: true;
    readonly options: {};
    readonly encode: (data: ColumnarTable, options?: ArrowWriterOptions | undefined) => Promise<ArrayBuffer>;
    readonly encodeSync: (data: ColumnarTable, options?: ArrowWriterOptions | undefined) => ArrayBuffer;
};
export {};
//# sourceMappingURL=arrow-writer.d.ts.map