export declare const mapStateReducerFactory: (initialState?: {}) => import("redux-actions").ReduxCompatibleReducer<{
    isViewportSynced: boolean;
    isZoomLocked: boolean;
    pitch: number;
    bearing: number;
    latitude: number;
    longitude: number;
    zoom: number;
    dragRotate: boolean;
    width: number;
    height: number;
    minZoom?: number | undefined;
    maxZoom?: number | undefined;
    maxBounds?: import("@kepler.gl/types").Bounds | undefined;
    initialState?: any;
    scale?: number | undefined;
    isSplit: boolean;
    splitMapViewports: import("@kepler.gl/types").Viewport[];
}, {
    isViewportSynced: boolean;
    isZoomLocked: boolean;
    pitch: number;
    bearing: number;
    latitude: number;
    longitude: number;
    zoom: number;
    dragRotate: boolean;
    width: number;
    height: number;
    minZoom?: number | undefined;
    maxZoom?: number | undefined;
    maxBounds?: import("@kepler.gl/types").Bounds | undefined;
    initialState?: any;
    scale?: number | undefined;
    isSplit: boolean;
    splitMapViewports: import("@kepler.gl/types").Viewport[];
}>;
declare const _default: import("redux-actions").ReduxCompatibleReducer<{
    isViewportSynced: boolean;
    isZoomLocked: boolean;
    pitch: number;
    bearing: number;
    latitude: number;
    longitude: number;
    zoom: number;
    dragRotate: boolean;
    width: number;
    height: number;
    minZoom?: number | undefined;
    maxZoom?: number | undefined;
    maxBounds?: import("@kepler.gl/types").Bounds | undefined;
    initialState?: any;
    scale?: number | undefined;
    isSplit: boolean;
    splitMapViewports: import("@kepler.gl/types").Viewport[];
}, {
    isViewportSynced: boolean;
    isZoomLocked: boolean;
    pitch: number;
    bearing: number;
    latitude: number;
    longitude: number;
    zoom: number;
    dragRotate: boolean;
    width: number;
    height: number;
    minZoom?: number | undefined;
    maxZoom?: number | undefined;
    maxBounds?: import("@kepler.gl/types").Bounds | undefined;
    initialState?: any;
    scale?: number | undefined;
    isSplit: boolean;
    splitMapViewports: import("@kepler.gl/types").Viewport[];
}>;
export default _default;
