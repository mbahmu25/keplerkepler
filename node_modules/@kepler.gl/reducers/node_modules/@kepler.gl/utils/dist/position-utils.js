"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPositionFromHexValue = getPositionFromHexValue;
exports.maybeHexToGeo = maybeHexToGeo;
var _h3Js = require("h3-js");
// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project

function getPositionFromHexValue(token) {
  var pos = (0, _h3Js.h3ToGeo)(token);
  if (Array.isArray(pos) && pos.every(Number.isFinite)) {
    return [pos[1], pos[0]];
  }
  return null;
}
function maybeHexToGeo(dc, d, lat, lng) {
  // lat or lng column could be hex column
  // we assume string value is hex and try to convert it to geo lat lng
  var latVal = dc.valueAt(d.index, lat.fieldIdx);
  var lngVal = dc.valueAt(d.index, lng.fieldIdx);
  return typeof latVal === 'string' ? getPositionFromHexValue(latVal) : typeof lngVal === 'string' ? getPositionFromHexValue(lngVal) : null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaDNKcyIsInJlcXVpcmUiLCJnZXRQb3NpdGlvbkZyb21IZXhWYWx1ZSIsInRva2VuIiwicG9zIiwiaDNUb0dlbyIsIkFycmF5IiwiaXNBcnJheSIsImV2ZXJ5IiwiTnVtYmVyIiwiaXNGaW5pdGUiLCJtYXliZUhleFRvR2VvIiwiZGMiLCJkIiwibGF0IiwibG5nIiwibGF0VmFsIiwidmFsdWVBdCIsImluZGV4IiwiZmllbGRJZHgiLCJsbmdWYWwiXSwic291cmNlcyI6WyIuLi9zcmMvcG9zaXRpb24tdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IHtoM1RvR2VvfSBmcm9tICdoMy1qcyc7XG5cbmltcG9ydCB7TGF5ZXJDb2x1bW59IGZyb20gJ0BrZXBsZXIuZ2wvdHlwZXMnO1xuXG5pbXBvcnQge0RhdGFDb250YWluZXJJbnRlcmZhY2V9IGZyb20gJy4vZGF0YS1jb250YWluZXItaW50ZXJmYWNlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBvc2l0aW9uRnJvbUhleFZhbHVlKHRva2VuKSB7XG4gIGNvbnN0IHBvcyA9IGgzVG9HZW8odG9rZW4pO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KHBvcykgJiYgcG9zLmV2ZXJ5KE51bWJlci5pc0Zpbml0ZSkpIHtcbiAgICByZXR1cm4gW3Bvc1sxXSwgcG9zWzBdXTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1heWJlSGV4VG9HZW8oXG4gIGRjOiBEYXRhQ29udGFpbmVySW50ZXJmYWNlLFxuICBkOiB7aW5kZXg6IG51bWJlcn0sXG4gIGxhdDogTGF5ZXJDb2x1bW4sXG4gIGxuZzogTGF5ZXJDb2x1bW5cbikge1xuICAvLyBsYXQgb3IgbG5nIGNvbHVtbiBjb3VsZCBiZSBoZXggY29sdW1uXG4gIC8vIHdlIGFzc3VtZSBzdHJpbmcgdmFsdWUgaXMgaGV4IGFuZCB0cnkgdG8gY29udmVydCBpdCB0byBnZW8gbGF0IGxuZ1xuICBjb25zdCBsYXRWYWwgPSBkYy52YWx1ZUF0KGQuaW5kZXgsIGxhdC5maWVsZElkeCk7XG4gIGNvbnN0IGxuZ1ZhbCA9IGRjLnZhbHVlQXQoZC5pbmRleCwgbG5nLmZpZWxkSWR4KTtcblxuICByZXR1cm4gdHlwZW9mIGxhdFZhbCA9PT0gJ3N0cmluZydcbiAgICA/IGdldFBvc2l0aW9uRnJvbUhleFZhbHVlKGxhdFZhbClcbiAgICA6IHR5cGVvZiBsbmdWYWwgPT09ICdzdHJpbmcnXG4gICAgPyBnZXRQb3NpdGlvbkZyb21IZXhWYWx1ZShsbmdWYWwpXG4gICAgOiBudWxsO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0EsSUFBQUEsS0FBQSxHQUFBQyxPQUFBO0FBSEE7QUFDQTs7QUFRTyxTQUFTQyx1QkFBdUJBLENBQUNDLEtBQUssRUFBRTtFQUM3QyxJQUFNQyxHQUFHLEdBQUcsSUFBQUMsYUFBTyxFQUFDRixLQUFLLENBQUM7RUFFMUIsSUFBSUcsS0FBSyxDQUFDQyxPQUFPLENBQUNILEdBQUcsQ0FBQyxJQUFJQSxHQUFHLENBQUNJLEtBQUssQ0FBQ0MsTUFBTSxDQUFDQyxRQUFRLENBQUMsRUFBRTtJQUNwRCxPQUFPLENBQUNOLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRUEsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ3pCO0VBQ0EsT0FBTyxJQUFJO0FBQ2I7QUFFTyxTQUFTTyxhQUFhQSxDQUMzQkMsRUFBMEIsRUFDMUJDLENBQWtCLEVBQ2xCQyxHQUFnQixFQUNoQkMsR0FBZ0IsRUFDaEI7RUFDQTtFQUNBO0VBQ0EsSUFBTUMsTUFBTSxHQUFHSixFQUFFLENBQUNLLE9BQU8sQ0FBQ0osQ0FBQyxDQUFDSyxLQUFLLEVBQUVKLEdBQUcsQ0FBQ0ssUUFBUSxDQUFDO0VBQ2hELElBQU1DLE1BQU0sR0FBR1IsRUFBRSxDQUFDSyxPQUFPLENBQUNKLENBQUMsQ0FBQ0ssS0FBSyxFQUFFSCxHQUFHLENBQUNJLFFBQVEsQ0FBQztFQUVoRCxPQUFPLE9BQU9ILE1BQU0sS0FBSyxRQUFRLEdBQzdCZCx1QkFBdUIsQ0FBQ2MsTUFBTSxDQUFDLEdBQy9CLE9BQU9JLE1BQU0sS0FBSyxRQUFRLEdBQzFCbEIsdUJBQXVCLENBQUNrQixNQUFNLENBQUMsR0FDL0IsSUFBSTtBQUNWIiwiaWdub3JlTGlzdCI6W119