"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _base = require("../base");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var ClusterLayerIcon = /*#__PURE__*/function (_Component) {
  function ClusterLayerIcon() {
    (0, _classCallCheck2["default"])(this, ClusterLayerIcon);
    return _callSuper(this, ClusterLayerIcon, arguments);
  }
  (0, _inherits2["default"])(ClusterLayerIcon, _Component);
  return (0, _createClass2["default"])(ClusterLayerIcon, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/_react["default"].createElement(_base.Base, this.props, /*#__PURE__*/_react["default"].createElement("path", {
        d: "M13.6,22.7c2.9-3.6,4.4-6.3,4.4-8c0-2.7-2.2-4.9-4.9-4.9S8.2,12,8.2,14.7c0,1.7,1.5,4.4,4.4,8l0,0 C12.8,23,13.2,23,13.6,22.7C13.5,22.8,13.6,22.7,13.6,22.7z",
        className: "cr1"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M22.9,57.4c2.5-3.1,3.8-5.5,3.8-7c0-2.4-2-4.4-4.4-4.4S18,48,18,50.4c0,1.5,1.3,3.8,3.8,7l0,0 c0.3,0.3,0.7,0.4,1,0.1C22.9,57.4,22.9,57.4,22.9,57.4z",
        className: "cr2"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M51.4,22.5c2.8-3.4,4.2-6,4.2-7.6c0-2.6-2.1-4.8-4.8-4.8c-2.6,0-4.8,2.1-4.8,4.8c0,1.6,1.4,4.2,4.2,7.6 l0,0c0.3,0.3,0.8,0.4,1.1,0.1C51.3,22.5,51.4,22.5,51.4,22.5z",
        className: "cr3"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M49.2,53.8c3.7-4.5,5.5-7.8,5.5-9.9c0-3.3-2.7-6.1-6.1-6.1c-3.3,0-6.1,2.7-6.1,6.1 c0,2.1,1.8,5.4,5.5,9.9l0,0c0.3,0.3,0.7,0.4,1.1,0.1C49.1,53.8,49.1,53.8,49.2,53.8z",
        className: "cr4"
      }), /*#__PURE__*/_react["default"].createElement("path", {
        d: "M31.4,39.6C36.5,33.5,39,29,39,26.1c0-4.4-3.6-8-8-8s-8,3.6-8,8c0,2.9,2.5,7.4,7.6,13.5l0,0 C30.8,39.8,31.1,39.9,31.4,39.6C31.3,39.7,31.4,39.6,31.4,39.6z",
        className: "cr5"
      }));
    }
  }]);
}(_react.Component);
(0, _defineProperty2["default"])(ClusterLayerIcon, "propTypes", {
  /** Set the height of the icon, ex. '16px' */
  height: _propTypes["default"].string,
  colors: _propTypes["default"].arrayOf(_propTypes["default"].string)
});
(0, _defineProperty2["default"])(ClusterLayerIcon, "defaultProps", {
  height: '16px',
  predefinedClassName: 'cluster-layer-icon',
  totalColor: 5
});
var _default = exports["default"] = ClusterLayerIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcHJvcFR5cGVzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9iYXNlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiX2NhbGxTdXBlciIsIm8iLCJfZ2V0UHJvdG90eXBlT2YyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJDbHVzdGVyTGF5ZXJJY29uIiwiX0NvbXBvbmVudCIsIl9jbGFzc0NhbGxDaGVjazIiLCJhcmd1bWVudHMiLCJfaW5oZXJpdHMyIiwiX2NyZWF0ZUNsYXNzMiIsImtleSIsInZhbHVlIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIkJhc2UiLCJwcm9wcyIsImQiLCJjbGFzc05hbWUiLCJDb21wb25lbnQiLCJfZGVmaW5lUHJvcGVydHkyIiwiaGVpZ2h0IiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiY29sb3JzIiwiYXJyYXlPZiIsInByZWRlZmluZWRDbGFzc05hbWUiLCJ0b3RhbENvbG9yIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsdXN0ZXItbGF5ZXIvY2x1c3Rlci1sYXllci1pY29uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQge0Jhc2V9IGZyb20gJy4uL2Jhc2UnO1xuXG5jbGFzcyBDbHVzdGVyTGF5ZXJJY29uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAvKiogU2V0IHRoZSBoZWlnaHQgb2YgdGhlIGljb24sIGV4LiAnMTZweCcgKi9cbiAgICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29sb3JzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKVxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiAnMTZweCcsXG4gICAgcHJlZGVmaW5lZENsYXNzTmFtZTogJ2NsdXN0ZXItbGF5ZXItaWNvbicsXG4gICAgdG90YWxDb2xvcjogNVxuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEJhc2Ugey4uLnRoaXMucHJvcHN9PlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGQ9XCJNMTMuNiwyMi43YzIuOS0zLjYsNC40LTYuMyw0LjQtOGMwLTIuNy0yLjItNC45LTQuOS00LjlTOC4yLDEyLDguMiwxNC43YzAsMS43LDEuNSw0LjQsNC40LDhsMCwwXG5cdEMxMi44LDIzLDEzLjIsMjMsMTMuNiwyMi43QzEzLjUsMjIuOCwxMy42LDIyLjcsMTMuNiwyMi43elwiXG4gICAgICAgICAgY2xhc3NOYW1lPVwiY3IxXCJcbiAgICAgICAgLz5cbiAgICAgICAgPHBhdGhcbiAgICAgICAgICBkPVwiTTIyLjksNTcuNGMyLjUtMy4xLDMuOC01LjUsMy44LTdjMC0yLjQtMi00LjQtNC40LTQuNFMxOCw0OCwxOCw1MC40YzAsMS41LDEuMywzLjgsMy44LDdsMCwwXG5cdGMwLjMsMC4zLDAuNywwLjQsMSwwLjFDMjIuOSw1Ny40LDIyLjksNTcuNCwyMi45LDU3LjR6XCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJjcjJcIlxuICAgICAgICAvPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGQ9XCJNNTEuNCwyMi41YzIuOC0zLjQsNC4yLTYsNC4yLTcuNmMwLTIuNi0yLjEtNC44LTQuOC00LjhjLTIuNiwwLTQuOCwyLjEtNC44LDQuOGMwLDEuNiwxLjQsNC4yLDQuMiw3LjZcblx0bDAsMGMwLjMsMC4zLDAuOCwwLjQsMS4xLDAuMUM1MS4zLDIyLjUsNTEuNCwyMi41LDUxLjQsMjIuNXpcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cImNyM1wiXG4gICAgICAgIC8+XG4gICAgICAgIDxwYXRoXG4gICAgICAgICAgZD1cIk00OS4yLDUzLjhjMy43LTQuNSw1LjUtNy44LDUuNS05LjljMC0zLjMtMi43LTYuMS02LjEtNi4xYy0zLjMsMC02LjEsMi43LTYuMSw2LjFcblx0YzAsMi4xLDEuOCw1LjQsNS41LDkuOWwwLDBjMC4zLDAuMywwLjcsMC40LDEuMSwwLjFDNDkuMSw1My44LDQ5LjEsNTMuOCw0OS4yLDUzLjh6XCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJjcjRcIlxuICAgICAgICAvPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGQ9XCJNMzEuNCwzOS42QzM2LjUsMzMuNSwzOSwyOSwzOSwyNi4xYzAtNC40LTMuNi04LTgtOHMtOCwzLjYtOCw4YzAsMi45LDIuNSw3LjQsNy42LDEzLjVsMCwwXG5cdEMzMC44LDM5LjgsMzEuMSwzOS45LDMxLjQsMzkuNkMzMS4zLDM5LjcsMzEuNCwzOS42LDMxLjQsMzkuNnpcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cImNyNVwiXG4gICAgICAgIC8+XG4gICAgICA8L0Jhc2U+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDbHVzdGVyTGF5ZXJJY29uO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUdBLElBQUFB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