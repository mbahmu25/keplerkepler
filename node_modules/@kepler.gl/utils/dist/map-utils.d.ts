import { SplitMapLayers, SplitMap, Viewport, MapState } from '@kepler.gl/types';
/**
 * Validates a ViewPort object.
 * It retains all properties of the original ViewPort object,
 * but ensures that the latitude is within the defined bounds.
 * @param viewport - The ViewPort object to validate.
 * @returns A new ViewPort object with validated latitude.
 */
export declare const validateViewPort: <T extends Pick<Viewport, "latitude" | "longitude">>(viewport: T) => T;
export declare const onViewPortChange: (viewState: Viewport, onUpdateMap: (next: any, mapIndex: number) => any, onViewStateChange?: ((next: any) => void | null) | undefined, primary?: boolean, mapIndex?: number) => void;
export declare const getMapLayersFromSplitMaps: (splitMaps: SplitMap[], mapIndex?: number) => SplitMapLayers | undefined | null;
/**
 * Generates a viewport from a map state.
 * @param mapState
 * @returns A viewport.
 */
export declare const getViewportFromMapState: (mapState: MapState) => Viewport;
