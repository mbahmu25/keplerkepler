{"version":3,"file":"geoarrow.umd.js","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@math.gl/core/dist/lib/common.js","../node_modules/@math.gl/polygon/dist/polygon-utils.js","../node_modules/@math.gl/polygon/dist/polygon.js","../node_modules/@math.gl/polygon/dist/earcut.js","../src/child.ts","../src/algorithm/utils/polygon.ts","../src/algorithm/earcut.ts","../src/type.ts","../src/data.ts","../src/algorithm/coords.ts","../src/algorithm/utils/assert.ts","../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../src/constants.ts","../src/algorithm/winding.ts","../src/algorithm/proj.ts","../node_modules/proj4/lib/index.js","../node_modules/proj4/projs.js","../src/algorithm/total-bounds.ts","../src/algorithm/area.ts","../src/algorithm/exterior.ts","../src/vector.ts","../src/worker/hard-clone.ts","../src/worker/rehydrate.ts","../src/worker/transferable.ts"],"sourcesContent":["export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","const RADIANS_TO_DEGREES = 1 / Math.PI * 180;\nconst DEGREES_TO_RADIANS = 1 / 180 * Math.PI;\nconst DEFAULT_CONFIG = {\n  EPSILON: 1e-12,\n  debug: false,\n  precision: 4,\n  printTypes: false,\n  printDegrees: false,\n  printRowMajor: true,\n  _cartographicRadians: false\n};\nglobalThis.mathgl = globalThis.mathgl || {\n  config: { ...DEFAULT_CONFIG\n  }\n};\nexport const config = globalThis.mathgl.config;\nexport function configure(options) {\n  Object.assign(config, options);\n  return config;\n}\nexport function formatValue(value, {\n  precision = config.precision\n} = {}) {\n  value = round(value);\n  return \"\".concat(parseFloat(value.toPrecision(precision)));\n}\nexport function isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\nexport function clone(array) {\n  return 'clone' in array ? array.clone() : array.slice();\n}\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\nexport function radians(degrees, result) {\n  return map(degrees, degrees => degrees * DEGREES_TO_RADIANS, result);\n}\nexport function degrees(radians, result) {\n  return map(radians, radians => radians * RADIANS_TO_DEGREES, result);\n}\nexport function sin(radians, result) {\n  return map(radians, angle => Math.sin(angle), result);\n}\nexport function cos(radians, result) {\n  return map(radians, angle => Math.cos(angle), result);\n}\nexport function tan(radians, result) {\n  return map(radians, angle => Math.tan(angle), result);\n}\nexport function asin(radians, result) {\n  return map(radians, angle => Math.asin(angle), result);\n}\nexport function acos(radians, result) {\n  return map(radians, angle => Math.acos(angle), result);\n}\nexport function atan(radians, result) {\n  return map(radians, angle => Math.atan(angle), result);\n}\nexport function clamp(value, min, max) {\n  return map(value, value => Math.max(min, Math.min(max, value)));\n}\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n\n  return t * b + (1 - t) * a;\n}\nexport function equals(a, b, epsilon) {\n  const oldEpsilon = config.EPSILON;\n\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n\n  try {\n    if (a === b) {\n      return true;\n    }\n\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < a.length; ++i) {\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n\n    if (typeof a === 'number' && typeof b === 'number') {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n    }\n\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\nexport function withEpsilon(epsilon, func) {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = epsilon;\n  let value;\n\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n\n  return value;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    const array = value;\n    result = result || duplicateArray(array);\n\n    for (let i = 0; i < result.length && i < array.length; ++i) {\n      const val = typeof value === 'number' ? value : value[i];\n      result[i] = func(val, i, result);\n    }\n\n    return result;\n  }\n\n  return func(value);\n}\n//# sourceMappingURL=common.js.map","import { equals } from '@math.gl/core';\nexport const WINDING = {\n  CLOCKWISE: 1,\n  COUNTER_CLOCKWISE: -1\n};\nexport function modifyPolygonWindingDirection(points, direction, options = {}) {\n  const windingDirection = getPolygonWindingDirection(points, options);\n\n  if (windingDirection !== direction) {\n    reversePolygon(points, options);\n    return true;\n  }\n\n  return false;\n}\nexport function getPolygonWindingDirection(points, options = {}) {\n  return Math.sign(getPolygonSignedArea(points, options));\n}\nexport const DimIndex = {\n  x: 0,\n  y: 1,\n  z: 2\n};\nexport function getPolygonSignedArea(points, options = {}) {\n  const {\n    start = 0,\n    end = points.length,\n    plane = 'xy'\n  } = options;\n  const dim = options.size || 2;\n  let area = 0;\n  const i0 = DimIndex[plane[0]];\n  const i1 = DimIndex[plane[1]];\n\n  for (let i = start, j = end - dim; i < end; i += dim) {\n    area += (points[i + i0] - points[j + i0]) * (points[i + i1] + points[j + i1]);\n    j = i;\n  }\n\n  return area / 2;\n}\nexport function forEachSegmentInPolygon(points, visitor, options = {}) {\n  const {\n    start = 0,\n    end = points.length,\n    size = 2,\n    isClosed\n  } = options;\n  const numPoints = (end - start) / size;\n\n  for (let i = 0; i < numPoints - 1; ++i) {\n    visitor(points[start + i * size], points[start + i * size + 1], points[start + (i + 1) * size], points[start + (i + 1) * size + 1], i, i + 1);\n  }\n\n  const endPointIndex = start + (numPoints - 1) * size;\n  const isClosedEx = isClosed || equals(points[start], points[endPointIndex]) && equals(points[start + 1], points[endPointIndex + 1]);\n\n  if (!isClosedEx) {\n    visitor(points[endPointIndex], points[endPointIndex + 1], points[start], points[start + 1], numPoints - 1, 0);\n  }\n}\n\nfunction reversePolygon(points, options) {\n  const {\n    start = 0,\n    end = points.length,\n    size = 2\n  } = options;\n  const numPoints = (end - start) / size;\n  const numSwaps = Math.floor(numPoints / 2);\n\n  for (let i = 0; i < numSwaps; ++i) {\n    const b1 = start + i * size;\n    const b2 = start + (numPoints - 1 - i) * size;\n\n    for (let j = 0; j < size; ++j) {\n      const tmp = points[b1 + j];\n      points[b1 + j] = points[b2 + j];\n      points[b2 + j] = tmp;\n    }\n  }\n}\n\nexport function modifyPolygonWindingDirectionPoints(points, direction, options = {}) {\n  const currentDirection = getPolygonWindingDirectionPoints(points, options);\n\n  if (currentDirection !== direction) {\n    points.reverse();\n    return true;\n  }\n\n  return false;\n}\nexport function getPolygonWindingDirectionPoints(points, options = {}) {\n  return Math.sign(getPolygonSignedAreaPoints(points, options));\n}\nexport function getPolygonSignedAreaPoints(points, options = {}) {\n  const {\n    start = 0,\n    end = points.length,\n    plane = 'xy'\n  } = options;\n  let area = 0;\n  const i0 = DimIndex[plane[0]];\n  const i1 = DimIndex[plane[1]];\n\n  for (let i = start, j = end - 1; i < end; ++i) {\n    area += (points[i][i0] - points[j][i0]) * (points[i][i1] + points[j][i1]);\n    j = i;\n  }\n\n  return area / 2;\n}\nexport function forEachSegmentInPolygonPoints(points, visitor, options = {}) {\n  const {\n    start = 0,\n    end = points.length,\n    isClosed\n  } = options;\n\n  for (let i = start; i < end - 1; ++i) {\n    visitor(points[i], points[i + 1], i, i + 1);\n  }\n\n  const isClosedEx = isClosed || equals(points[end - 1], points[0]);\n\n  if (!isClosedEx) {\n    visitor(points[end - 1], points[0], end - 1, 0);\n  }\n}\n//# sourceMappingURL=polygon-utils.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { isArray } from '@math.gl/core';\nimport { getPolygonSignedArea, forEachSegmentInPolygon, modifyPolygonWindingDirection, getPolygonSignedAreaPoints, forEachSegmentInPolygonPoints, modifyPolygonWindingDirectionPoints } from \"./polygon-utils.js\";\nexport class Polygon {\n  constructor(points, options = {}) {\n    _defineProperty(this, \"points\", void 0);\n\n    _defineProperty(this, \"isFlatArray\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    this.points = points;\n    this.isFlatArray = !isArray(points[0]);\n    this.options = {\n      start: options.start || 0,\n      end: options.end || points.length,\n      size: options.size || 2,\n      isClosed: options.isClosed\n    };\n    Object.freeze(this);\n  }\n\n  getSignedArea() {\n    if (this.isFlatArray) return getPolygonSignedArea(this.points, this.options);\n    return getPolygonSignedAreaPoints(this.points, this.options);\n  }\n\n  getArea() {\n    return Math.abs(this.getSignedArea());\n  }\n\n  getWindingDirection() {\n    return Math.sign(this.getSignedArea());\n  }\n\n  forEachSegment(visitor) {\n    if (this.isFlatArray) {\n      forEachSegmentInPolygon(this.points, (x1, y1, x2, y2, i1, i2) => {\n        visitor([x1, y1], [x2, y2], i1, i2);\n      }, this.options);\n    } else {\n      forEachSegmentInPolygonPoints(this.points, visitor, this.options);\n    }\n  }\n\n  modifyWindingDirection(direction) {\n    if (this.isFlatArray) {\n      return modifyPolygonWindingDirection(this.points, direction, this.options);\n    }\n\n    return modifyPolygonWindingDirectionPoints(this.points, direction, this.options);\n  }\n\n}\n//# sourceMappingURL=polygon.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { getPolygonSignedArea, DimIndex } from \"./polygon-utils.js\";\nexport function earcut(positions, holeIndices, dim = 2, areas, plane = 'xy') {\n  const hasHoles = holeIndices && holeIndices.length;\n  const outerLen = hasHoles ? holeIndices[0] * dim : positions.length;\n  let outerNode = linkedList(positions, 0, outerLen, dim, true, areas && areas[0], plane);\n  const triangles = [];\n  if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n  let invSize;\n  let maxX;\n  let maxY;\n  let minX;\n  let minY;\n  let x;\n  let y;\n  if (hasHoles) outerNode = eliminateHoles(positions, holeIndices, outerNode, dim, areas, plane);\n\n  if (positions.length > 80 * dim) {\n    minX = maxX = positions[0];\n    minY = maxY = positions[1];\n\n    for (let i = dim; i < outerLen; i += dim) {\n      x = positions[i];\n      y = positions[i + 1];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n    }\n\n    invSize = Math.max(maxX - minX, maxY - minY);\n    invSize = invSize !== 0 ? 32767 / invSize : 0;\n  }\n\n  earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n  return triangles;\n}\n\nfunction linkedList(data, start, end, dim, clockwise, area, plane) {\n  let i;\n  let last;\n\n  if (area === undefined) {\n    area = getPolygonSignedArea(data, {\n      start,\n      end,\n      size: dim,\n      plane\n    });\n  }\n\n  let i0 = DimIndex[plane[0]];\n  let i1 = DimIndex[plane[1]];\n\n  if (clockwise === area < 0) {\n    for (i = start; i < end; i += dim) last = insertNode(i, data[i + i0], data[i + i1], last);\n  } else {\n    for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i + i0], data[i + i1], last);\n  }\n\n  if (last && equals(last, last.next)) {\n    removeNode(last);\n    last = last.next;\n  }\n\n  return last;\n}\n\nfunction filterPoints(start, end) {\n  if (!start) return start;\n  if (!end) end = start;\n  let p = start;\n  let again;\n\n  do {\n    again = false;\n\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p);\n      p = end = p.prev;\n      if (p === p.next) break;\n      again = true;\n    } else {\n      p = p.next;\n    }\n  } while (again || p !== end);\n\n  return end;\n}\n\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n  if (!ear) return;\n  if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n  let stop = ear;\n  let prev;\n  let next;\n\n  while (ear.prev !== ear.next) {\n    prev = ear.prev;\n    next = ear.next;\n\n    if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n      triangles.push(prev.i / dim | 0);\n      triangles.push(ear.i / dim | 0);\n      triangles.push(next.i / dim | 0);\n      removeNode(ear);\n      ear = next.next;\n      stop = next.next;\n      continue;\n    }\n\n    ear = next;\n\n    if (ear === stop) {\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n        earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, invSize);\n      }\n\n      break;\n    }\n  }\n}\n\nfunction isEar(ear) {\n  const a = ear.prev;\n  const b = ear;\n  const c = ear.next;\n  if (area(a, b, c) >= 0) return false;\n  const ax = a.x;\n  const bx = b.x;\n  const cx = c.x;\n  const ay = a.y;\n  const by = b.y;\n  const cy = c.y;\n  const x0 = ax < bx ? ax < cx ? ax : cx : bx < cx ? bx : cx;\n  const y0 = ay < by ? ay < cy ? ay : cy : by < cy ? by : cy;\n  const x1 = ax > bx ? ax > cx ? ax : cx : bx > cx ? bx : cx;\n  const y1 = ay > by ? ay > cy ? ay : cy : by > cy ? by : cy;\n  let p = c.next;\n\n  while (p !== a) {\n    if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.next;\n  }\n\n  return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n  const a = ear.prev;\n  const b = ear;\n  const c = ear.next;\n  if (area(a, b, c) >= 0) return false;\n  const ax = a.x;\n  const bx = b.x;\n  const cx = c.x;\n  const ay = a.y;\n  const by = b.y;\n  const cy = c.y;\n  const x0 = ax < bx ? ax < cx ? ax : cx : bx < cx ? bx : cx;\n  const y0 = ay < by ? ay < cy ? ay : cy : by < cy ? by : cy;\n  const x1 = ax > bx ? ax > cx ? ax : cx : bx > cx ? bx : cx;\n  const y1 = ay > by ? ay > cy ? ay : cy : by > cy ? by : cy;\n  const minZ = zOrder(x0, y0, minX, minY, invSize);\n  const maxZ = zOrder(x1, y1, minX, minY, invSize);\n  let p = ear.prevZ;\n  let n = ear.nextZ;\n\n  while (p && p.z >= minZ && n && n.z <= maxZ) {\n    if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c && pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n    if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c && pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  }\n\n  while (p && p.z >= minZ) {\n    if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c && pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n  }\n\n  while (n && n.z <= maxZ) {\n    if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c && pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  }\n\n  return true;\n}\n\nfunction cureLocalIntersections(start, triangles, dim) {\n  let p = start;\n\n  do {\n    const a = p.prev;\n    const b = p.next.next;\n\n    if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n      triangles.push(a.i / dim | 0);\n      triangles.push(p.i / dim | 0);\n      triangles.push(b.i / dim | 0);\n      removeNode(p);\n      removeNode(p.next);\n      p = start = b;\n    }\n\n    p = p.next;\n  } while (p !== start);\n\n  return filterPoints(p);\n}\n\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n  let a = start;\n\n  do {\n    let b = a.next.next;\n\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        let c = splitPolygon(a, b);\n        a = filterPoints(a, a.next);\n        c = filterPoints(c, c.next);\n        earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n        earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n        return;\n      }\n\n      b = b.next;\n    }\n\n    a = a.next;\n  } while (a !== start);\n}\n\nfunction eliminateHoles(data, holeIndices, outerNode, dim, areas, plane) {\n  const queue = [];\n  let i;\n  let len;\n  let start;\n  let end;\n  let list;\n\n  for (i = 0, len = holeIndices.length; i < len; i++) {\n    start = holeIndices[i] * dim;\n    end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n    list = linkedList(data, start, end, dim, false, areas && areas[i + 1], plane);\n    if (list === list.next) list.steiner = true;\n    queue.push(getLeftmost(list));\n  }\n\n  queue.sort(compareX);\n\n  for (i = 0; i < queue.length; i++) {\n    outerNode = eliminateHole(queue[i], outerNode);\n  }\n\n  return outerNode;\n}\n\nfunction compareX(a, b) {\n  return a.x - b.x;\n}\n\nfunction eliminateHole(hole, outerNode) {\n  const bridge = findHoleBridge(hole, outerNode);\n\n  if (!bridge) {\n    return outerNode;\n  }\n\n  const bridgeReverse = splitPolygon(bridge, hole);\n  filterPoints(bridgeReverse, bridgeReverse.next);\n  return filterPoints(bridge, bridge.next);\n}\n\nfunction findHoleBridge(hole, outerNode) {\n  let p = outerNode;\n  const hx = hole.x;\n  const hy = hole.y;\n  let qx = -Infinity;\n  let m;\n\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      const x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n      if (x <= hx && x > qx) {\n        qx = x;\n        m = p.x < p.next.x ? p : p.next;\n        if (x === hx) return m;\n      }\n    }\n\n    p = p.next;\n  } while (p !== outerNode);\n\n  if (!m) return null;\n  const stop = m;\n  const mx = m.x;\n  const my = m.y;\n  let tanMin = Infinity;\n  let tan;\n  p = m;\n\n  do {\n    if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n      tan = Math.abs(hy - p.y) / (hx - p.x);\n\n      if (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n        m = p;\n        tanMin = tan;\n      }\n    }\n\n    p = p.next;\n  } while (p !== stop);\n\n  return m;\n}\n\nfunction sectorContainsSector(m, p) {\n  return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\nfunction indexCurve(start, minX, minY, invSize) {\n  let p = start;\n\n  do {\n    if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n    p.prevZ = p.prev;\n    p.nextZ = p.next;\n    p = p.next;\n  } while (p !== start);\n\n  p.prevZ.nextZ = null;\n  p.prevZ = null;\n  sortLinked(p);\n}\n\nfunction sortLinked(list) {\n  let e;\n  let i;\n  let inSize = 1;\n  let numMerges;\n  let p;\n  let pSize;\n  let q;\n  let qSize;\n  let tail;\n\n  do {\n    p = list;\n    list = null;\n    tail = null;\n    numMerges = 0;\n\n    while (p) {\n      numMerges++;\n      q = p;\n      pSize = 0;\n\n      for (i = 0; i < inSize; i++) {\n        pSize++;\n        q = q.nextZ;\n        if (!q) break;\n      }\n\n      qSize = inSize;\n\n      while (pSize > 0 || qSize > 0 && q) {\n        if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n          e = p;\n          p = p.nextZ;\n          pSize--;\n        } else {\n          e = q;\n          q = q.nextZ;\n          qSize--;\n        }\n\n        if (tail) tail.nextZ = e;else list = e;\n        e.prevZ = tail;\n        tail = e;\n      }\n\n      p = q;\n    }\n\n    tail.nextZ = null;\n    inSize *= 2;\n  } while (numMerges > 1);\n\n  return list;\n}\n\nfunction zOrder(x, y, minX, minY, invSize) {\n  x = (x - minX) * invSize | 0;\n  y = (y - minY) * invSize | 0;\n  x = (x | x << 8) & 0x00ff00ff;\n  x = (x | x << 4) & 0x0f0f0f0f;\n  x = (x | x << 2) & 0x33333333;\n  x = (x | x << 1) & 0x55555555;\n  y = (y | y << 8) & 0x00ff00ff;\n  y = (y | y << 4) & 0x0f0f0f0f;\n  y = (y | y << 2) & 0x33333333;\n  y = (y | y << 1) & 0x55555555;\n  return x | y << 1;\n}\n\nfunction getLeftmost(start) {\n  let p = start;\n  let leftmost = start;\n\n  do {\n    if (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n    p = p.next;\n  } while (p !== start);\n\n  return leftmost;\n}\n\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n  return (cx - px) * (ay - py) >= (ax - px) * (cy - py) && (ax - px) * (by - py) >= (bx - px) * (ay - py) && (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\nfunction isValidDiagonal(a, b) {\n  return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && (area(a.prev, a, b.prev) || area(a, b.prev, b)) || equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0);\n}\n\nfunction area(p, q, r) {\n  return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\nfunction equals(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n\nfunction intersects(p1, q1, p2, q2) {\n  const o1 = sign(area(p1, q1, p2));\n  const o2 = sign(area(p1, q1, q2));\n  const o3 = sign(area(p2, q2, p1));\n  const o4 = sign(area(p2, q2, q1));\n  if (o1 !== o2 && o3 !== o4) return true;\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true;\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true;\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true;\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true;\n  return false;\n}\n\nfunction onSegment(p, q, r) {\n  return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n  return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\nfunction intersectsPolygon(a, b) {\n  let p = a;\n\n  do {\n    if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n    p = p.next;\n  } while (p !== a);\n\n  return false;\n}\n\nfunction locallyInside(a, b) {\n  return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\nfunction middleInside(a, b) {\n  let p = a;\n  let inside = false;\n  const px = (a.x + b.x) / 2;\n  const py = (a.y + b.y) / 2;\n\n  do {\n    if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n    p = p.next;\n  } while (p !== a);\n\n  return inside;\n}\n\nfunction splitPolygon(a, b) {\n  const a2 = new Vertex(a.i, a.x, a.y);\n  const b2 = new Vertex(b.i, b.x, b.y);\n  const an = a.next;\n  const bp = b.prev;\n  a.next = b;\n  b.prev = a;\n  a2.next = an;\n  an.prev = a2;\n  b2.next = a2;\n  a2.prev = b2;\n  bp.next = b2;\n  b2.prev = bp;\n  return b2;\n}\n\nfunction insertNode(i, x, y, last) {\n  const p = new Vertex(i, x, y);\n\n  if (!last) {\n    p.prev = p;\n    p.next = p;\n  } else {\n    p.next = last.next;\n    p.prev = last;\n    last.next.prev = p;\n    last.next = p;\n  }\n\n  return p;\n}\n\nfunction removeNode(p) {\n  p.next.prev = p.prev;\n  p.prev.next = p.next;\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nclass Vertex {\n  constructor(i, x, y) {\n    _defineProperty(this, \"i\", void 0);\n\n    _defineProperty(this, \"x\", void 0);\n\n    _defineProperty(this, \"y\", void 0);\n\n    _defineProperty(this, \"prev\", null);\n\n    _defineProperty(this, \"next\", null);\n\n    _defineProperty(this, \"z\", 0);\n\n    _defineProperty(this, \"prevZ\", null);\n\n    _defineProperty(this, \"nextZ\", null);\n\n    _defineProperty(this, \"steiner\", false);\n\n    this.i = i;\n    this.x = x;\n    this.y = y;\n  }\n\n}\n//# sourceMappingURL=earcut.js.map","/**\n * Strongly typed accessors for children, since arrow.Data.children[] is untyped\n */\n\nimport { Data, Vector, type Float } from \"apache-arrow\";\nimport {\n  LineStringData,\n  MultiLineStringData,\n  MultiPointData,\n  MultiPolygonData,\n  PointData,\n  PolygonData,\n} from \"./data\";\nimport {\n  LineStringVector,\n  MultiLineStringVector,\n  MultiPointVector,\n  MultiPolygonVector,\n  PointVector,\n  PolygonVector,\n} from \"./vector\";\n\nexport function getPointChild(input: PointData): Data<Float>;\nexport function getPointChild(input: PointVector): Vector<Float>;\n\nexport function getPointChild(\n  input: PointData | PointVector,\n): Data<Float> | Vector<Float> {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as Data<Float>;\n}\n\nexport function getLineStringChild(input: LineStringData): PointData;\nexport function getLineStringChild(input: LineStringVector): PointVector;\n\nexport function getLineStringChild(\n  input: LineStringData | LineStringVector,\n): PointData | PointVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as PointData;\n}\n\nexport function getPolygonChild(input: PolygonData): LineStringData;\nexport function getPolygonChild(input: PolygonVector): LineStringVector;\n\nexport function getPolygonChild(\n  input: PolygonData | PolygonVector,\n): LineStringData | LineStringVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as LineStringData;\n}\n\nexport function getMultiPointChild(input: MultiPointData): PointData;\nexport function getMultiPointChild(input: MultiPointVector): PointVector;\n\nexport function getMultiPointChild(\n  input: MultiPointData | MultiPointVector,\n): PointData | PointVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as PointData;\n}\n\nexport function getMultiLineStringChild(\n  input: MultiLineStringData,\n): LineStringData;\nexport function getMultiLineStringChild(\n  input: MultiLineStringVector,\n): LineStringVector;\n\nexport function getMultiLineStringChild(\n  input: MultiLineStringData | MultiLineStringVector,\n): LineStringData | LineStringVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as LineStringData;\n}\n\nexport function getMultiPolygonChild(input: MultiPolygonData): PolygonData;\nexport function getMultiPolygonChild(input: MultiPolygonVector): PolygonVector;\n\nexport function getMultiPolygonChild(\n  input: MultiPolygonData | MultiPolygonVector,\n): PolygonData | PolygonVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as PolygonData;\n}\n","import { PolygonData } from \"../../data\";\nimport { Polygon } from \"@math.gl/polygon\";\nimport {\n  getLineStringChild,\n  getPointChild,\n  getPolygonChild,\n} from \"../../child\";\n\nexport function makeMathGlPolygon(\n  data: PolygonData,\n  geomIndex: number,\n): Polygon {\n  const geomOffsets = data.valueOffsets;\n  const ringsData = getPolygonChild(data);\n  const ringOffsets = ringsData.valueOffsets;\n\n  const pointData = getLineStringChild(ringsData);\n  const dim = pointData.type.listSize;\n  const flatCoordData = getPointChild(pointData);\n\n  const ringBegin = geomOffsets[geomIndex];\n  const ringEnd = geomOffsets[geomIndex + 1];\n\n  const coordsBegin = ringOffsets[ringBegin];\n  const coordsEnd = ringOffsets[ringEnd];\n\n  const slicedFlatCoords = flatCoordData.values.subarray(\n    coordsBegin * dim,\n    coordsEnd * dim,\n  );\n  return new Polygon(slicedFlatCoords, {\n    size: dim,\n    isClosed: true,\n  });\n}\n","import { earcut as _earcut } from \"@math.gl/polygon\";\nimport { PolygonData } from \"../data\";\nimport { PolygonVector } from \"../vector\";\nimport { getLineStringChild, getPointChild, getPolygonChild } from \"../child\";\n\n/**\n * Run earcut on polygon input\n */\nexport function earcut(input: PolygonData): Uint32Array;\nexport function earcut(input: PolygonVector): Uint32Array[];\n\nexport function earcut(\n  input: PolygonData | PolygonVector,\n): Uint32Array | Uint32Array[] {\n  if (\"data\" in input) {\n    return input.data.map((data) => earcut(data));\n  }\n\n  const trianglesResults: number[][] = [];\n  let outputSize = 0;\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    const triangles = earcutSinglePolygon(input, geomIndex);\n    trianglesResults.push(triangles);\n    outputSize += triangles.length;\n  }\n\n  const outputArray = new Uint32Array(outputSize);\n  let idx = 0;\n  for (const triangles of trianglesResults) {\n    for (const value of triangles) {\n      outputArray[idx] = value;\n      idx += 1;\n    }\n  }\n\n  return outputArray;\n}\n\nfunction earcutSinglePolygon(data: PolygonData, geomIndex: number): number[] {\n  const geomOffsets = data.valueOffsets;\n  const rings = getPolygonChild(data);\n  const ringOffsets = rings.valueOffsets;\n\n  const coords = getLineStringChild(rings);\n  const dim = coords.type.listSize;\n  const flatCoords = getPointChild(coords);\n\n  const ringBegin = geomOffsets[geomIndex];\n  const ringEnd = geomOffsets[geomIndex + 1];\n\n  const coordsBegin = ringOffsets[ringBegin];\n  const coordsEnd = ringOffsets[ringEnd];\n\n  const slicedFlatCoords = flatCoords.values.subarray(\n    coordsBegin * dim,\n    coordsEnd * dim,\n  );\n\n  const initialCoordIndex = ringOffsets[ringBegin];\n  const holeIndices = [];\n  for (let holeRingIdx = ringBegin + 1; holeRingIdx < ringEnd; holeRingIdx++) {\n    holeIndices.push(ringOffsets[holeRingIdx] - initialCoordIndex);\n  }\n  const triangles = _earcut(slicedFlatCoords, holeIndices, dim);\n\n  for (let i = 0; i < triangles.length; i++) {\n    triangles[i] += initialCoordIndex;\n  }\n\n  return triangles;\n}\n","import {\n  type Struct,\n  type Float,\n  type List,\n  type FixedSizeList,\n  DataType,\n} from \"apache-arrow\";\n\n// Note: this apparently has to be arrow.Float and not arrow.Float64 to ensure\n// that recreating a data instance with arrow.makeData type checks using the\n// input's data type.\nexport type InterleavedCoord = FixedSizeList<Float>;\nexport type SeparatedCoord = Struct<{\n  x: Float;\n  y: Float;\n}>;\n// TODO: support separated coords\nexport type Coord = InterleavedCoord; // | SeparatedCoord;\nexport type Point = Coord;\nexport type LineString = List<Coord>;\nexport type Polygon = List<List<Coord>>;\nexport type MultiPoint = List<Coord>;\nexport type MultiLineString = List<List<Coord>>;\nexport type MultiPolygon = List<List<List<Coord>>>;\nexport type GeoArrowType =\n  | Point\n  | LineString\n  | Polygon\n  | MultiPoint\n  | MultiLineString\n  | MultiPolygon;\n\n/** Check that the given type is a Point data type */\nexport function isPoint(type: DataType): type is Point {\n  if (DataType.isFixedSizeList(type)) {\n    // Check list size\n    if (![2, 3, 4].includes(type.listSize)) {\n      return false;\n    }\n\n    // Check child of FixedSizeList is floating type\n    if (!DataType.isFloat(type.children[0])) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (DataType.isStruct(type)) {\n    // Check number of children\n    if (![2, 3, 4].includes(type.children.length)) {\n      return false;\n    }\n\n    // Check that children have correct field names\n    if (\n      !type.children.every((field) => [\"x\", \"y\", \"z\", \"m\"].includes(field.name))\n    ) {\n      return false;\n    }\n\n    if (!type.children.every((field) => DataType.isFloat(field))) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nexport function isLineString(type: DataType): type is LineString {\n  // Check the outer type is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a point type\n  if (!isPoint(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isPolygon(type: DataType): type is Polygon {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a linestring vector\n  if (!isLineString(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isMultiPoint(type: DataType): type is MultiPoint {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a point vector\n  if (!isPoint(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isMultiLineString(type: DataType): type is MultiLineString {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a linestring vector\n  if (!isLineString(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isMultiPolygon(type: DataType): type is MultiPolygon {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a polygon vector\n  if (!isPolygon(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n","import { Data } from \"apache-arrow\";\nimport {\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  isPoint,\n  isLineString,\n  isPolygon,\n  isMultiPoint,\n  isMultiLineString,\n  isMultiPolygon,\n} from \"./type\";\n\nexport type PointData = Data<Point>;\nexport type LineStringData = Data<LineString>;\nexport type PolygonData = Data<Polygon>;\nexport type MultiPointData = Data<MultiPoint>;\nexport type MultiLineStringData = Data<MultiLineString>;\nexport type MultiPolygonData = Data<MultiPolygon>;\nexport type GeoArrowData =\n  | PointData\n  | LineStringData\n  | PolygonData\n  | MultiPointData\n  | MultiLineStringData\n  | MultiPolygonData;\n\nexport function isPointData(data: Data): data is PointData {\n  return isPoint(data.type);\n}\n\nexport function isLineStringData(data: Data): data is LineStringData {\n  return isLineString(data.type);\n}\n\nexport function isPolygonData(data: Data): data is PolygonData {\n  return isPolygon(data.type);\n}\n\nexport function isMultiPointData(data: Data): data is MultiPointData {\n  return isMultiPoint(data.type);\n}\n\nexport function isMultiLineStringData(data: Data): data is MultiLineStringData {\n  return isMultiLineString(data.type);\n}\n\nexport function isMultiPolygonData(data: Data): data is MultiPolygonData {\n  return isMultiPolygon(data.type);\n}\n","import * as arrow from \"apache-arrow\";\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from \"../type\";\nimport {\n  GeoArrowData,\n  LineStringData,\n  MultiLineStringData,\n  MultiPointData,\n  MultiPolygonData,\n  PointData,\n  PolygonData,\n  isLineStringData,\n  isMultiLineStringData,\n  isMultiPointData,\n  isMultiPolygonData,\n  isPointData,\n  isPolygonData,\n} from \"../data\";\nimport {\n  getLineStringChild,\n  getMultiPolygonChild,\n  getPointChild,\n  getPolygonChild,\n} from \"../child\";\nimport { assert, assertFalse } from \"./utils/assert\";\n\n// For now, simplify our lives by focusing on 2D\ntype MapCoordsCallback = (x: number, y: number) => [number, number];\n\nexport function mapCoords(\n  input: PointData,\n  callback: MapCoordsCallback,\n): PointData;\nexport function mapCoords(\n  input: LineStringData,\n  callback: MapCoordsCallback,\n): LineStringData;\nexport function mapCoords(\n  input: PolygonData,\n  callback: MapCoordsCallback,\n): PolygonData;\nexport function mapCoords(\n  input: MultiPointData,\n  callback: MapCoordsCallback,\n): MultiPointData;\nexport function mapCoords(\n  input: MultiLineStringData,\n  callback: MapCoordsCallback,\n): MultiLineStringData;\nexport function mapCoords(\n  input: MultiPolygonData,\n  callback: MapCoordsCallback,\n): MultiPolygonData;\n\n// TODO: ideally I could use <T extends GeoArrowType> here...\nexport function mapCoords(\n  input: GeoArrowData,\n  callback: MapCoordsCallback,\n): GeoArrowData {\n  if (isPointData(input)) {\n    return mapCoords0(input, callback);\n  }\n  if (isLineStringData(input)) {\n    return mapCoords1(input, callback);\n  }\n  if (isPolygonData(input)) {\n    return mapCoords2(input, callback);\n  }\n  if (isMultiPointData(input)) {\n    return mapCoords1(input, callback);\n  }\n  if (isMultiLineStringData(input)) {\n    return mapCoords2(input, callback);\n  }\n  if (isMultiPolygonData(input)) {\n    return mapCoords3(input, callback);\n  }\n\n  assertFalse();\n}\n\nexport function mapCoords0<T extends Point>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  assert(input.type.listSize === 2, \"expected 2D\");\n  const coordsData = getPointChild(input);\n  const flatCoords = coordsData.values;\n\n  const outputCoords = new Float64Array(flatCoords.length);\n  for (let coordIdx = 0; coordIdx < input.length; coordIdx++) {\n    const x = flatCoords[coordIdx * 2];\n    const y = flatCoords[coordIdx * 2 + 1];\n    const [newX, newY] = callback(x, y);\n    outputCoords[coordIdx * 2] = newX;\n    outputCoords[coordIdx * 2 + 1] = newY;\n  }\n\n  const newCoordsData = arrow.makeData({\n    type: coordsData.type,\n    length: coordsData.length,\n    nullCount: coordsData.nullCount,\n    nullBitmap: coordsData.nullBitmap,\n    data: outputCoords,\n  });\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newCoordsData,\n  });\n}\n\n/**\n * NOTE: the callback must be infallible as this does not take geometry validity\n * into effect for operating on coords\n */\nexport function mapCoords1<T extends LineString | MultiPoint>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  const pointData = getLineStringChild(input);\n  const newPointData = mapCoords0(pointData, callback);\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newPointData,\n    valueOffsets: input.valueOffsets,\n  });\n}\n\n/**\n * NOTE: the callback must be infallible as this does not take geometry validity\n * into effect for operating on coords\n */\nexport function mapCoords2<T extends Polygon | MultiLineString>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  const linestringData = getPolygonChild(input);\n  const newLinestringData = mapCoords1(linestringData, callback);\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newLinestringData,\n    valueOffsets: input.valueOffsets,\n  });\n}\n\n/**\n * NOTE: the callback must be infallible as this does not take geometry validity\n * into effect for operating on coords\n */\nexport function mapCoords3<T extends MultiPolygon>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  const polygonData = getMultiPolygonChild(input);\n  const newPolygonData = mapCoords2(polygonData, callback);\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newPolygonData,\n    valueOffsets: input.valueOffsets,\n  });\n}\n","export function assert(condition: boolean, message?: string) {\n  if (!condition) {\n    throw new Error(`assertion failed ${message}`);\n  }\n}\n\nexport function assertFalse(): never {\n  throw new Error(`assertion failed`);\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.militargeographische_institut = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Militar-Geographische Institut\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Enum holding GeoArrow extension type names\n */\nexport enum EXTENSION_NAME {\n  POINT = \"geoarrow.point\",\n  LINESTRING = \"geoarrow.linestring\",\n  POLYGON = \"geoarrow.polygon\",\n  MULTIPOINT = \"geoarrow.multipoint\",\n  MULTILINESTRING = \"geoarrow.multilinestring\",\n  MULTIPOLYGON = \"geoarrow.multipolygon\",\n}\n","import * as arrow from \"apache-arrow\";\nimport { PolygonData } from \"../data\";\nimport { PolygonVector } from \"../vector\";\nimport { makeMathGlPolygon } from \"./utils/polygon\";\nimport { WINDING as _WINDING } from \"@math.gl/polygon\";\n\nexport enum Winding {\n  CLOCKWISE = _WINDING.CLOCKWISE,\n  COUNTER_CLOCKWISE = _WINDING.COUNTER_CLOCKWISE,\n}\n\n/**\n * Compute the winding direction of the polygon input.\n *\n * The result is a boolean Data or Vector, where `true` means **Clockwise**\n * winding order and `false` means **Counter Clockwise** winding order.\n */\nexport function windingDirection(input: PolygonData): arrow.Data<arrow.Bool>;\nexport function windingDirection(\n  input: PolygonVector,\n): arrow.Vector<arrow.Bool>;\n\nexport function windingDirection(\n  input: PolygonData | PolygonVector,\n): arrow.Data<arrow.Bool> | arrow.Vector<arrow.Bool> {\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((polygonData) => windingDirection(polygonData)),\n    );\n  }\n\n  let builder = new arrow.BoolBuilder({\n    type: new arrow.Bool(),\n    nullValues: [null],\n  });\n  // Force-allocate once for length of buffer\n  builder.set(input.length - 1, null);\n\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    if (!input.getValid(geomIndex)) {\n      builder.setValid(geomIndex, false);\n      continue;\n    }\n\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    let winding = polygon.getWindingDirection();\n    builder.set(geomIndex, winding === Winding.CLOCKWISE);\n  }\n\n  return builder.finish().flush();\n}\n\n/**\n * **Mutate** the existing Polygon data or vector with the desired winding\n */\nexport function modifyWindingDirection(\n  input: PolygonData,\n  winding: Winding,\n): void;\nexport function modifyWindingDirection(\n  input: PolygonVector,\n  winding: Winding,\n): void;\n\nexport function modifyWindingDirection(\n  input: PolygonData | PolygonVector,\n  winding: Winding,\n): void {\n  if (\"data\" in input) {\n    input.data.forEach((polygonData) =>\n      modifyWindingDirection(polygonData, winding),\n    );\n    return;\n  }\n\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    // This polygon is a reference onto the PolygonData, so mutating it will\n    // mutate the PolygonData\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    polygon.modifyWindingDirection(winding);\n  }\n}\n","import * as arrow from \"apache-arrow\";\nimport proj4 from \"proj4\";\nimport { GeoArrowType } from \"../type\";\nimport { mapCoords } from \"./coords\";\n\n/**\n * Reproject using proj4\n */\nexport function reproject<T extends GeoArrowType>(\n  input: arrow.Data<T>,\n  fromProjection: string,\n  toProjection: string,\n): arrow.Data<T>;\nexport function reproject<T extends GeoArrowType>(\n  input: arrow.Vector<T>,\n  fromProjection: string,\n  toProjection: string,\n): arrow.Vector<T>;\n\nexport function reproject<T extends GeoArrowType>(\n  input: arrow.Data<T> | arrow.Vector<T>,\n  fromProjection: string,\n  toProjection: string,\n): arrow.Data<T> | arrow.Vector<T> {\n  const projectionFn = proj4(fromProjection, toProjection);\n  // Check if an arrow.Vector\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((data) => reprojectData(data, projectionFn)),\n    );\n  }\n\n  return reprojectData(input, projectionFn);\n}\n\n/**\n * Reproject a single Data instance\n */\nfunction reprojectData<T extends GeoArrowType>(\n  input: arrow.Data<T>,\n  projectionFn: proj4.Converter,\n): arrow.Data<T> {\n  // Avoid extra object creation\n  const stack = [0, 0];\n  const callback = (x: number, y: number) => {\n    stack[0] = x;\n    stack[1] = y;\n    return projectionFn.forward(stack) as [number, number];\n  };\n\n  // @ts-expect-error I have a mismatch between generic T extends GeoArrowType\n  // and concrete GeoArrowData typing\n  return mapCoords(input, callback);\n}\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import * as arrow from \"apache-arrow\";\nimport {\n  LineStringVector,\n  MultiPolygonVector,\n  PointVector,\n  PolygonVector,\n} from \"../vector.js\";\nimport { PointData } from \"../data.js\";\nimport {\n  getLineStringChild,\n  getMultiPolygonChild,\n  getPointChild,\n  getPolygonChild,\n} from \"../child.js\";\nimport { EXTENSION_NAME } from \"../constants.js\";\n\nclass Bbox {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n\n  constructor() {\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = -Infinity;\n    this.maxY = -Infinity;\n  }\n\n  updateBbox(other: Bbox) {\n    if (other.minX < this.minX) {\n      this.minX = other.minX;\n    }\n    if (other.minY < this.minY) {\n      this.minY = other.minY;\n    }\n    if (other.maxX > this.maxX) {\n      this.maxX = other.maxX;\n    }\n    if (other.maxY > this.maxY) {\n      this.maxY = other.maxY;\n    }\n  }\n\n  updateCoord(x: number, y: number) {\n    if (x < this.minX) {\n      this.minX = x;\n    }\n    if (y < this.minY) {\n      this.minY = y;\n    }\n    if (x > this.maxX) {\n      this.maxX = x;\n    }\n    if (y > this.maxY) {\n      this.maxY = y;\n    }\n  }\n}\n\nexport function totalBounds(vector: arrow.Vector, field: arrow.Field): Bbox {\n  switch (field.metadata.get(\"ARROW:extension:name\")) {\n    case EXTENSION_NAME.POINT:\n      return totalBoundsNest0(vector);\n    case EXTENSION_NAME.LINESTRING:\n    case EXTENSION_NAME.MULTIPOINT:\n      return totalBoundsNest1(vector);\n    case EXTENSION_NAME.POLYGON:\n    case EXTENSION_NAME.MULTILINESTRING:\n      return totalBoundsNest2(vector);\n    case EXTENSION_NAME.MULTIPOLYGON:\n      return totalBoundsNest3(vector);\n    default:\n      throw new Error(\"Unknown ext type name\");\n  }\n}\n\nfunction coordsBbox(data: PointData): Bbox {\n  const coordsData = getPointChild(data);\n  const flatCoords = coordsData.values;\n  const bbox = new Bbox();\n\n  for (let coordIdx = 0; coordIdx < data.length; coordIdx++) {\n    const x = flatCoords[coordIdx * 2];\n    const y = flatCoords[coordIdx * 2 + 1];\n    bbox.updateCoord(x, y);\n  }\n\n  return bbox;\n}\n\nfunction totalBoundsNest0(vector: PointVector): Bbox {\n  const bbox = new Bbox();\n  for (const data of vector.data) {\n    bbox.updateBbox(coordsBbox(data));\n  }\n\n  return bbox;\n}\n\nfunction totalBoundsNest1(vector: LineStringVector): Bbox {\n  const pointVector = getLineStringChild(vector);\n  return totalBoundsNest0(pointVector);\n}\n\nfunction totalBoundsNest2(vector: PolygonVector): Bbox {\n  const lineStringVector = getPolygonChild(vector);\n  return totalBoundsNest1(lineStringVector);\n}\n\nfunction totalBoundsNest3(vector: MultiPolygonVector): Bbox {\n  const polygonVector = getMultiPolygonChild(vector);\n  return totalBoundsNest2(polygonVector);\n}\n","import * as arrow from \"apache-arrow\";\nimport { PolygonData } from \"../data\";\nimport { PolygonVector } from \"../vector\";\nimport { makeMathGlPolygon } from \"./utils/polygon\";\n\n/**\n * Compute the unsigned area of the polygon input.\n */\nexport function area(input: PolygonData): arrow.Data<arrow.Float>;\nexport function area(input: PolygonVector): arrow.Vector<arrow.Float>;\n\nexport function area(\n  input: PolygonData | PolygonVector,\n): arrow.Data<arrow.Float> | arrow.Vector<arrow.Float> {\n  if (\"data\" in input) {\n    return new arrow.Vector(input.data.map((polygonData) => area(polygonData)));\n  }\n\n  const result = new Float64Array(input.length);\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    result[geomIndex] = polygon.getArea();\n  }\n\n  return arrow.makeData({\n    type: new arrow.Float(arrow.Precision.DOUBLE),\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    data: result,\n  });\n}\n\n/**\n * Compute the signed area of the polygon input.\n */\nexport function signedArea(input: PolygonData): arrow.Data<arrow.Float>;\nexport function signedArea(input: PolygonVector): arrow.Vector<arrow.Float>;\n\nexport function signedArea(\n  input: PolygonData | PolygonVector,\n): arrow.Data<arrow.Float> | arrow.Vector<arrow.Float> {\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((polygonData) => signedArea(polygonData)),\n    );\n  }\n\n  const result = new Float64Array(input.length);\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    result[geomIndex] = polygon.getSignedArea();\n  }\n\n  return arrow.makeData({\n    type: new arrow.Float(arrow.Precision.DOUBLE),\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    data: result,\n  });\n}\n","import * as arrow from \"apache-arrow\";\nimport {\n  LineStringVector,\n  MultiLineStringVector,\n  MultiPolygonVector,\n  PolygonVector,\n} from \"../vector\";\nimport {\n  LineStringData,\n  MultiLineStringData,\n  MultiPolygonData,\n  PolygonData,\n} from \"../data\";\nimport { getMultiPolygonChild, getPolygonChild } from \"../child\";\n\n/**\n * Get the exterior of a PolygonVector or PolygonData\n */\nexport function getPolygonExterior(input: PolygonVector): LineStringVector;\nexport function getPolygonExterior(input: PolygonData): LineStringData;\n\nexport function getPolygonExterior(\n  input: PolygonVector | PolygonData,\n): LineStringVector | LineStringData {\n  if (\"data\" in input) {\n    return new arrow.Vector(input.data.map((data) => getPolygonExterior(data)));\n  }\n\n  return getPolygonChild(input);\n}\n\n/**\n * Get the exterior of a MultiPolygonVector or MultiPolygonData\n */\nexport function getMultiPolygonExterior(\n  input: MultiPolygonVector,\n): MultiLineStringVector;\nexport function getMultiPolygonExterior(\n  input: MultiPolygonData,\n): MultiLineStringData;\n\nexport function getMultiPolygonExterior(\n  input: MultiPolygonVector | MultiPolygonData,\n): MultiLineStringVector | MultiLineStringData {\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((data) => getMultiPolygonExterior(data)),\n    );\n  }\n\n  return getMultiPolygonChild(input);\n}\n","import { Vector } from \"apache-arrow\";\nimport {\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  isPoint,\n  isLineString,\n  isPolygon,\n  isMultiPoint,\n  isMultiLineString,\n  isMultiPolygon,\n} from \"./type\";\n\nexport type PointVector = Vector<Point>;\nexport type LineStringVector = Vector<LineString>;\nexport type PolygonVector = Vector<Polygon>;\nexport type MultiPointVector = Vector<MultiPoint>;\nexport type MultiLineStringVector = Vector<MultiLineString>;\nexport type MultiPolygonVector = Vector<MultiPolygon>;\nexport type GeoArrowVector =\n  | PointVector\n  | LineStringVector\n  | PolygonVector\n  | MultiPointVector\n  | MultiLineStringVector\n  | MultiPolygonVector;\n\nexport function isPointVector(vector: Vector): vector is PointVector {\n  return isPoint(vector.type);\n}\n\nexport function isLineStringVector(vector: Vector): vector is LineStringVector {\n  return isLineString(vector.type);\n}\n\nexport function isPolygonVector(vector: Vector): vector is PolygonVector {\n  return isPolygon(vector.type);\n}\n\nexport function isMultiPointVector(vector: Vector): vector is MultiPointVector {\n  return isMultiPoint(vector.type);\n}\n\nexport function isMultiLineStringVector(\n  vector: Vector,\n): vector is MultiLineStringVector {\n  return isMultiLineString(vector.type);\n}\n\nexport function isMultiPolygonVector(\n  vector: Vector,\n): vector is MultiPolygonVector {\n  return isMultiPolygon(vector.type);\n}\n","import { Data, DataType, Vector, BufferType } from \"apache-arrow\";\nimport type { Buffers } from \"apache-arrow/data\";\n\ntype TypedArray =\n  | Uint8Array\n  | Uint8ClampedArray\n  | Uint16Array\n  | Uint32Array\n  | Int8Array\n  | Int16Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n\n/**\n * Clone an Arrow JS Data or Vector, detaching from an existing ArrayBuffer if\n * it is shared with other.\n *\n * The purpose of this function is to enable transferring a `Data` instance,\n * e.g. to a web worker, without neutering any other data.\n *\n * Any internal buffers that are a slice of a larger `ArrayBuffer` (i.e. where\n * the typed array's `byteOffset` is not `0` and where its `byteLength` does not\n * match its `array.buffer.byteLength`) are copied into new `ArrayBuffers`.\n *\n * If `force` is `true`, always clone internal buffers, even if not shared. If\n * the default, `false`, any internal buffers that are **not** a slice of a\n * larger `ArrayBuffer` will not be copied.\n */\nexport function hardClone<T extends DataType>(\n  input: Data<T>,\n  force?: boolean,\n): Data<T>;\nexport function hardClone<T extends DataType>(\n  input: Vector<T>,\n  force?: boolean,\n): Vector<T>;\n\nexport function hardClone<T extends DataType>(\n  data: Data<T> | Vector<T>,\n  force: boolean = false,\n): Data<T> | Vector<T> {\n  // Check if `data` is an arrow.Vector\n  if (\"data\" in data) {\n    return new Vector(data.data.map((data) => hardClone(data, force)));\n  }\n\n  // Clone each of the children, recursively\n  const clonedChildren: Data[] = [];\n  for (const childData of data.children) {\n    clonedChildren.push(hardClone(childData, force));\n  }\n\n  // Clone the dictionary if there is one\n  let clonedDictionary: Vector | undefined = undefined;\n  if (data.dictionary !== undefined) {\n    clonedDictionary = hardClone(data.dictionary, force);\n  }\n\n  // Buffers can have up to four entries. Each of these can be `undefined` for\n  // one or more array types.\n  //\n  // - OFFSET: value offsets for variable size list types\n  // - DATA: the underlying data\n  // - VALIDITY: the null buffer. This may be empty or undefined if all elements\n  //   are non-null/valid.\n  // - TYPE: type ids for a union type.\n  const clonedBuffers: Buffers<T> = {\n    [BufferType.OFFSET]: cloneBuffer(data.buffers[BufferType.OFFSET], force),\n    [BufferType.DATA]: cloneBuffer(data.buffers[BufferType.DATA], force),\n    [BufferType.VALIDITY]: cloneBuffer(\n      data.buffers[BufferType.VALIDITY],\n      force,\n    ),\n    [BufferType.TYPE]: cloneBuffer(data.buffers[BufferType.TYPE], force),\n  };\n\n  // Note: the data.offset is passed on so that a sliced Data instance will not\n  // be \"un-sliced\". However keep in mind that this means we're cloning the\n  // _original backing buffer_, not only the portion of the Data that was\n  // sliced.\n  return new Data(\n    data.type,\n    data.offset,\n    data.length,\n    // @ts-expect-error _nullCount is protected. We're using it here to mimic\n    // `Data.clone`\n    data._nullCount,\n    clonedBuffers,\n    clonedChildren,\n    clonedDictionary,\n  );\n}\n\n/**\n * Test whether an Data instance is a slice of a larger `ArrayBuffer`.\n */\nexport function isShared<T extends DataType>(\n  data: Data<T> | Vector<T>,\n): boolean {\n  // Loop over arrow.Vector\n  if (\"data\" in data) {\n    return data.data.some((data) => isShared(data));\n  }\n\n  // Check child data\n  for (const childData of data.children) {\n    if (isShared(childData)) {\n      return true;\n    }\n  }\n\n  // Check dictionary\n  if (data.dictionary !== undefined) {\n    if (isShared(data.dictionary)) {\n      return true;\n    }\n  }\n\n  const bufferTypes = [\n    BufferType.OFFSET,\n    BufferType.DATA,\n    BufferType.VALIDITY,\n    BufferType.TYPE,\n  ];\n  for (const bufferType of bufferTypes) {\n    if (\n      data.buffers[bufferType] !== undefined &&\n      isTypedArraySliced(data.buffers[bufferType])\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the current typed array is a partial slice on a larger\n * ArrayBuffer\n */\nfunction isTypedArraySliced(arr: TypedArray): boolean {\n  return !(arr.byteOffset === 0 && arr.byteLength === arr.buffer.byteLength);\n}\n\n/**\n * If a slice of a larger ArrayBuffer, clone to a fresh `ArrayBuffer`.\n *\n * If `force` is `true`, always clone the array, even if not shared.\n */\nfunction cloneBuffer<A extends TypedArray | undefined>(\n  arr: A,\n  force: boolean,\n): A {\n  // Not all buffer types are defined for every type of Arrow array. E.g.\n  // `arrow.BufferType.TYPE` is only defined for the Union type.\n  if (arr === undefined) {\n    return arr;\n  }\n\n  // The current array is not a part of a larger ArrayBuffer, don't clone it\n  if (!force && !isTypedArraySliced(arr)) {\n    return arr;\n  }\n\n  // Note: TypedArray.slice() **copies** into a new ArrayBuffer\n\n  // @ts-expect-error 'Uint8Array' is assignable to the constraint of type 'A',\n  // but 'A' could be instantiated with a different subtype of constraint\n  // 'TypedArray'\n  // We know from arr.slice that it will always return the same\n  return arr.slice();\n}\n","import {\n  BufferType,\n  Type,\n  Data,\n  Vector,\n  Field,\n  Null,\n  Int,\n  Float,\n  Binary,\n  Utf8,\n  Bool,\n  Decimal,\n  Date_,\n  Time,\n  Timestamp,\n  Interval,\n  List,\n  Struct,\n  Union,\n  FixedSizeBinary,\n  FixedSizeList,\n  Map_,\n  Duration,\n  type DataType,\n} from \"apache-arrow\";\nimport type { Buffers } from \"apache-arrow/data\";\nimport { Polygon, isPolygon } from \"../type\";\nimport { PolygonData } from \"../data\";\n\n// Typedefs that include only the information kept from a structuredClone\ntype PostMessageDataType = Pick<DataType, \"children\" | \"typeId\">;\ntype PostMessageField = Pick<Field, \"name\" | \"nullable\" | \"metadata\"> & {\n  type: PostMessageDataType;\n};\ntype PostMessageData<T extends DataType> = Pick<\n  Data<T>,\n  | \"type\"\n  | \"length\"\n  | \"offset\"\n  | \"stride\"\n  | \"children\"\n  | \"dictionary\"\n  | \"values\"\n  | \"typeIds\"\n  | \"nullBitmap\"\n  | \"valueOffsets\"\n> & {\n  type: PostMessageDataType;\n};\ntype PostMessageVector<T extends DataType> = Pick<\n  Vector,\n  \"data\" | \"length\" | \"stride\" | \"numChildren\"\n> & { type: PostMessageDataType };\n\nfunction rehydrateType<T extends Type>(type: PostMessageDataType): DataType<T> {\n  switch (type.typeId) {\n    case Type.Null:\n      return new Null() as DataType<T>;\n    case Type.Int:\n      // @ts-expect-error\n      return new Int(type.isSigned, type.bitWidth);\n    case Type.Float:\n      // @ts-expect-error\n      return new Float(type.precision);\n    case Type.Binary:\n      // @ts-expect-error\n      return new Binary();\n    case Type.Utf8:\n      // @ts-expect-error\n      return new Utf8();\n    case Type.Bool:\n      // @ts-expect-error\n      return new Bool();\n    case Type.Decimal:\n      // @ts-expect-error\n      return new Decimal(type.scale, type.precision, type.bitWidth);\n    case Type.Date:\n      // @ts-expect-error\n      return new Date_(type.unit);\n    // return new Date\n    case Type.Time:\n      // @ts-expect-error\n      return new Time(type.unit, type.bitWidth);\n    case Type.Timestamp:\n      // @ts-expect-error\n      return new Timestamp(type.unit, type.timezone);\n    case Type.Interval:\n      // @ts-expect-error\n      return new Interval(type.unit);\n    case Type.List: {\n      const children = type.children.map(rehydrateField);\n      if (children.length > 1) throw new Error(\"expected 1 field\");\n      // @ts-expect-error\n      return new List(children[0]);\n    }\n    case Type.Struct: {\n      const children = type.children.map(rehydrateField);\n      // @ts-expect-error\n      return new Struct(children);\n    }\n    case Type.Union: {\n      const children = type.children.map(rehydrateField);\n      // @ts-expect-error\n      return new Union(type.mode, type.typeIds, children);\n    }\n    case Type.FixedSizeBinary:\n      // @ts-expect-error\n      return new FixedSizeBinary(type.byteWidth);\n    case Type.FixedSizeList: {\n      const children = type.children.map(rehydrateField);\n      if (children.length > 1) throw new Error(\"expected 1 field\");\n      // @ts-expect-error\n      return new FixedSizeList(type.listSize, children[0]);\n    }\n    case Type.Map: {\n      const children = type.children.map(rehydrateField);\n      if (children.length > 1) throw new Error(\"expected 1 field\");\n      const entries = children[0];\n      // @ts-expect-error\n      return new Map_(entries, type.keysSorted);\n    }\n    case Type.Duration:\n      // @ts-expect-error\n      return new Duration(type.unit);\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n\nfunction rehydrateField(field: PostMessageField): Field {\n  const type = rehydrateType(field.type);\n  return new Field(field.name, type, field.nullable, field.metadata);\n}\n\n/**\n * Rehydrate a `Data` object that has been `structuredClone`'d or\n * `postMessage`'d. The `Data` **must** have been prepared with\n * `preparePostMessage` to be accurately recreated.\n */\nexport function rehydrateData<T extends DataType>(\n  data: PostMessageData<T>,\n): Data<T> {\n  const children = data.children.map((childData) => rehydrateData(childData));\n  const dictionary = data.dictionary\n    ? rehydrateVector(data.dictionary)\n    : undefined;\n\n  // data.buffers is a getter, so we need to recreate Buffers from the\n  // attributes on data\n  const buffers: Buffers<T> = {\n    [BufferType.OFFSET]: data.valueOffsets,\n    [BufferType.DATA]: data.values,\n    [BufferType.VALIDITY]: data.nullBitmap,\n    [BufferType.TYPE]: data.typeIds,\n  };\n\n  // @ts-expect-error\n  return new Data(\n    rehydrateType(data.type),\n    data.offset,\n    data.length,\n    // @ts-expect-error\n    data._nullCount,\n    buffers,\n    children,\n    dictionary,\n  );\n}\n\n/**\n * Rehydrate a `Vector` object that has been `structuredClone`'d or\n * `postMessage`'d. The `Vector` **must** have been prepared with\n * `preparePostMessage` to be accurately recreated.\n */\nexport function rehydrateVector<T extends DataType>(\n  vector: PostMessageVector<T>,\n): Vector<T> {\n  return new Vector(vector.data.map((data) => rehydrateData(data)));\n}\n\nexport function rehydratePolygonData(\n  data: PostMessageData<Polygon>,\n): PolygonData {\n  if (!isPolygon(data.type)) {\n    throw new Error(\"Expected PolygonData\");\n  }\n\n  // @ts-expect-error\n  // For now, we allow this, even though we never fully recreate the prototypes\n  // on the JS side.\n  return data;\n}\n","import { Data, Vector, BufferType, type DataType } from \"apache-arrow\";\nimport { hardClone } from \"./hard-clone\";\n\n/**\n * Prepare a `Data` or `Vector` for a `postMessage` or `structuredClone`.\n */\nexport function preparePostMessage<T extends DataType>(\n  input: Data<T>,\n  forceClone?: boolean,\n): [Data<T>, ArrayBuffer[]];\nexport function preparePostMessage<T extends DataType>(\n  input: Vector<T>,\n  forceClone?: boolean,\n): [Vector<T>, ArrayBuffer[]];\n\nexport function preparePostMessage<T extends DataType>(\n  input: Data<T> | Vector<T>,\n  forceClone: boolean = false,\n): [Data<T> | Vector<T>, ArrayBuffer[]] {\n  // Check if `input` is an arrow.Vector\n  if (\"data\" in input) {\n    const postMessageDatas: Data<T>[] = [];\n    const transferArrayBuffers: ArrayBuffer[] = [];\n    for (const data of input.data) {\n      const [postMessageData, arrayBuffers] = preparePostMessage(data);\n      postMessageDatas.push(postMessageData);\n      transferArrayBuffers.push(...arrayBuffers);\n    }\n    const vector = new Vector(postMessageDatas);\n    return [vector, transferArrayBuffers];\n  }\n\n  // Force clone into non-shared backing ArrayBuffers\n  // Note: this only clones if necessary, unless forceClone is `true`.\n  input = hardClone(input, forceClone);\n\n  const transferArrayBuffers: ArrayBuffer[] = [];\n\n  // Handle children\n  for (let childIdx = 0; childIdx < input.children.length; childIdx++) {\n    const childData = input.children[childIdx];\n    const [postMessageData, arrayBuffers] = preparePostMessage(childData);\n    input.children[childIdx] = postMessageData;\n    transferArrayBuffers.push(...arrayBuffers);\n  }\n\n  // Handle dictionary\n  if (input.dictionary !== undefined) {\n    const [postMessageVector, arrayBuffers] = preparePostMessage(\n      input.dictionary,\n    );\n    input.dictionary = postMessageVector;\n    transferArrayBuffers.push(...arrayBuffers);\n  }\n\n  // Get references to the underlying buffers.\n\n  // We don't use a loop over these four to ensure accurate typing (well, typing\n  // doesn't seem to work on `DATA` and `TYPE`.)\n  if (input.buffers[BufferType.OFFSET] !== undefined) {\n    transferArrayBuffers.push(input.buffers[BufferType.OFFSET].buffer);\n  }\n\n  if (input.buffers[BufferType.DATA] !== undefined) {\n    transferArrayBuffers.push(input.buffers[BufferType.DATA].buffer);\n  }\n  if (input.buffers[BufferType.VALIDITY] !== undefined) {\n    transferArrayBuffers.push(input.buffers[BufferType.VALIDITY].buffer);\n  }\n  if (input.buffers[BufferType.TYPE] !== undefined) {\n    transferArrayBuffers.push(input.buffers[BufferType.TYPE].buffer);\n  }\n\n  return [input, transferArrayBuffers];\n}\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","globalThis","mathgl","config","EPSILON","debug","precision","printTypes","printDegrees","printRowMajor","_cartographicRadians","isArray","Array","ArrayBuffer","isView","DataView","equals","a","b","epsilon","oldEpsilon","length","Math","abs","max","WINDING","modifyPolygonWindingDirection","points","direction","options","windingDirection","sign","getPolygonSignedArea","getPolygonWindingDirection","start","end","size","numPoints","numSwaps","floor","b1","b2","j","tmp","reversePolygon","DimIndex","x","y","z","plane","dim","area","i0","i1","modifyPolygonWindingDirectionPoints","currentDirection","getPolygonSignedAreaPoints","getPolygonWindingDirectionPoints","reverse","Polygon","this","isFlatArray","isClosed","freeze","getSignedArea","getArea","getWindingDirection","forEachSegment","visitor","endPointIndex","forEachSegmentInPolygon","x1","y1","x2","y2","i2","forEachSegmentInPolygonPoints","modifyWindingDirection","earcut","positions","holeIndices","areas","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","invSize","maxX","maxY","minX","minY","data","queue","len","list","steiner","push","getLeftmost","sort","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","last","undefined","insertNode","removeNode","filterPoints","again","p","ear","pass","zOrder","prevZ","nextZ","numMerges","pSize","q","qSize","tail","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","c","ax","bx","cx","ay","by","cy","x0","y0","pointInTriangle","minZ","maxZ","n","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","m","qx","Infinity","mx","my","tan","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","px","py","intersectsPolygon","inside","middleInside","p1","p2","q1","q2","o1","o2","o3","o4","onSegment","min","num","a2","Vertex","an","bp","getPointChild","input","getChildAt","children","getLineStringChild","getPolygonChild","getMultiPolygonChild","makeMathGlPolygon","geomIndex","geomOffsets","valueOffsets","ringsData","ringOffsets","pointData","type","listSize","flatCoordData","ringBegin","ringEnd","coordsBegin","coordsEnd","slicedFlatCoords","values","subarray","earcutSinglePolygon","rings","coords","flatCoords","initialCoordIndex","holeRingIdx","_earcut","isPoint","DataType","isFixedSizeList","includes","isFloat","isStruct","every","field","name","isLineString","isList","isPolygon","isMultiPoint","isMultiLineString","isMultiPolygon","isPointData","isLineStringData","isPolygonData","isMultiPointData","isMultiLineStringData","isMultiPolygonData","mapCoords","callback","mapCoords0","mapCoords1","mapCoords2","polygonData","newPolygonData","arrow","makeData","nullCount","nullBitmap","child","mapCoords3","Error","assertFalse","condition","message","assert","coordsData","outputCoords","Float64Array","coordIdx","newX","newY","newCoordsData","newPointData","newLinestringData","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","units","ft","to_meter","ignoredChar","match","testkey","keys","lkey","toLowerCase","replace","projStr","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","reduce","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","y_0","k_0","k0","k","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","NEUTRAL","whitespace","latin","keyword","endThings","digets","Parser","text","level","place","root","stack","currentObject","state","mapit","unshift","thing","out","newObj","item","sExpr","shift","convert","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","output","d2r","wkt","lisp","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","rename","cleanWKT","defs","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","globals","codeWords","codes","parse","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","extend","destination","source","property","msfnz","eccent","sinphi","cosphi","con","sqrt","adjust_lon","tsfnz","phi","com","pow","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","cos","forward","lon","lat","inverse","exp","names","projStore","add","projections","get","exports$2","ellipseName","exports$1","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","militargeographische_institut","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","fromCharCode","Uint8Array","buffer","mapNodes","nodes","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","error","json","parseCode","ourProj","datumDef","Datum","sphere_","Ellipsoid","dc_sphere","ecc","ep2","getNadgrids","datumObj","datum_type","grids","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","datum_transform","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","NaN","attemptedGrids","outer","subgrids","jj","subgrid","del","ll","lim","applySubgridShift","isNaN","pin","ct","val","tb","nadInterpolate","dif","inx","indx","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","common","array","checkCoord","transform","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","transformer","from","to","transformedArray","concat","splice","checkProj","oProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","getLetter100kID","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","pj_enfn","en","pj_mlfn","sphi","cphi","MAX_ITER","pj_inv_mlfn","arg","s","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","acos","tan_phi","d","ds","f","g","temp","h","asin","sinh","hypot","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens_cmplx","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hr","hi1","hr1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","omerc","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","tl","asq","cl","dd","nl1","rl1","tl1","dl","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","cea","iqsfnz","eqc","dlat","poly","el","bl","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu","C_y","C_x","moll","delta_theta","eqdc","ml1","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","ortho","FACE_ENUM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","robin","f_df","max_err","iters","upd","newton_rapshon","poly3_der","geocent","azi","degrees","tilt","tpers","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","EXTENSION_NAME","Winding","geos","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","reprojectData","projectionFn","defaultDatum","Proj","nadgrid","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","version","includedProjections","Bbox","updateBbox","other","updateCoord","coordsBbox","totalBoundsNest0","vector","totalBoundsNest1","totalBoundsNest2","_WINDING","Vector","polygon","Float","Precision","DOUBLE","trianglesResults","outputSize","outputArray","Uint32Array","idx","getMultiPolygonExterior","getPolygonExterior","winding","fromProjection","toProjection","signedArea","metadata","POINT","LINESTRING","MULTIPOINT","POLYGON","MULTILINESTRING","MULTIPOLYGON","polygonVector","totalBoundsNest3","builder","BoolBuilder","Bool","nullValues","getValid","setValid","CLOCKWISE","finish","flush","hardClone","force","clonedChildren","childData","clonedDictionary","dictionary","clonedBuffers","BufferType","OFFSET","cloneBuffer","buffers","DATA","VALIDITY","TYPE","Data","_nullCount","isTypedArraySliced","arr","byteOffset","byteLength","rehydrateType","typeId","Type","Null","Int","isSigned","bitWidth","Binary","Utf8","Decimal","scale","Date","Date_","Time","Timestamp","timezone","Interval","List","rehydrateField","Struct","Union","typeIds","FixedSizeBinary","byteWidth","FixedSizeList","Map","entries","Map_","keysSorted","Duration","Field","nullable","rehydrateData","rehydrateVector","isShared","bufferTypes","bufferType","preparePostMessage","forceClone","postMessageDatas","transferArrayBuffers","postMessageData","arrayBuffers","childIdx","postMessageVector"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108]}